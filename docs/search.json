[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "İstatistik Ders Notları",
    "section": "",
    "text": "Plan\nBu kitap İstatistik I ve İstatistik II ders notlarının bir araya getirilmesiyle oluşturulmuştur. İstatistik I, betimsel istatistik, olasılık, ve dağılım teorisi konularını kapsamaktadır. Ders planına buradan ulaşabilirsiniz: https://htastan.github.io/istatistik/Istatistik_I_Syllabus_2024_Fall.pdf\nİstatistik I dersinin amacı, öğrencilere temel istatistik kavramlarını ve yöntemlerini tanıtarak, veriye dayalı analiz yapabilme becerisi kazandırmaktır. Bu ders, öğrencilerin ekonomi ve sosyal bilimler alanındaki problemleri istatistiksel yöntemlerle analiz edebilme yeteneğini geliştirmeyi hedefler. Ayrıca, öğrencilerin veri toplama, düzenleme, analiz etme ve yorumlama süreçlerini etkin bir şekilde yürütebilmeleri için gerekli teorik ve uygulamalı bilgi altyapısını sunar.\nDers kapsamında, betimsel istatistik, olasılık kuramı, kesikli ve sürekli olasılık dağılımları, normal dağılım, Merkezi Limit Teoremi, ve örnekleme kavramları incelenecektir. Bu dersin ikinci kısmını oluşturan İstatistik II dersinde ise ağırlıklı olarak çıkarsama konuları ele alınacaktır (nokta ve aralık tahmini, hipotez testleri, varyans analizi). Öğrenciler bu kavramları hem teorik düzeyde hem de çeşitli uygulamalar aracılığıyla öğrenerek, özellikle iktisadi veriler üzerinde anlamlı çıkarımlar yapma yetisi kazanacaklardır. Ders, ekonominin yanı sıra sosyal bilimlerin diğer alanlarında karşılaşılan problemlerin çözümünde istatistiksel araçların nasıl kullanılacağını göstermeyi amaçlamaktadır.\nİstatistik yazılımı: Derslerde ve laboratuvar oturumlarında R kullanacağız. R, istatistiksel hesaplamalar ve grafikler için kullanılan, istatistikçiler, araştırmacılar, veri bilimciler ve ekonometrisyenler ile endüstri profesyonelleri tarafından yaygın olarak tercih edilen açık kaynaklı bir yazılımdır. R’ın en son sürümünü şu adresten indirebilirsiniz:\nhttps://www.r-project.org/\nR için entegre bir geliştirme ortamı olarak R-studio kullanılabilir:\nhttps://www.rstudio.com/products/RStudio/"
  },
  {
    "objectID": "Giris.html#istatistik-nedir",
    "href": "Giris.html#istatistik-nedir",
    "title": "1  Giriş",
    "section": "1.1 İstatistik Nedir?",
    "text": "1.1 İstatistik Nedir?\nİstatistik, verilerin toplanması, düzenlenmesi, özetlenmesi, analiz edilmesi ve yorumlanması ile uğraşan bir bilim dalıdır. Günümüzde bilgiye dayalı karar alma süreçlerinde istatistik vazgeçilmez bir araç haline gelmiştir. İster bireysel kararlar isterse büyük organizasyonların stratejik kararları olsun, çoğu zaman güvenilir veriler ve bu verilerin doğru analizi gereklidir.\nİstatistik bilimi aşağıdaki işlevleri içinde barındırır:\n\nVerileri tanımlama ve özetleme: Büyük veri yığınlarının sistematik bir şekilde özetlenmesi, betimlenmesi ve anlam çıkarılması istatistiğin temel uğraşlarından biridir. Betimsel istatistik bu amaca uygun sayısal ve görsel yöntemler geliştirmiştir.\nBelirsizliğin ele alınması: İstatistik belirsizliğin bilimi olarak düşünülebilir. Olasılık teorisi, istatistiksel çıkarsamanın temelini oluşturur ve belirsizliğin incelenmesi için gereken bilimsel dili ve araçları sunar.\nAnakütleye ilişkin çıkarım ve genellemeler yapma: Örneğin, yeni bir ürün geliştiren bir firma tüm tüketicilerden oluşan anakütlenin bu ürüne olan talebi ile ilgilenebilir. Ancak çoğu durumda anakütle yerine onu temsil eden bir örneklem üzerinden çıkarım ve genellemeler yapılır. Daha küçük bir tüketici alt kümesinden hareketle tüm pazara ilişkin genellemeler yapılabilir ve ürüne ilişkin bir pazarlama stratejisi geliştirilebilir.\nİlişkilerin analizi: İstatistik, değişkenler arasındaki ilişkilerin analiz edilmesi için çeşitli yöntemler içerir. Korelasyon ve regresyon analizi, iki değişken arasındaki ilişkinin doğasını anlamaya yardımcı olur. Örneğin, reklam harcamaları ile satışlar arasındaki ilişki bu yöntemlerle ortaya konabilir.\nNedensellik analizi: İstatistik aynı zamanda nedensel ilişkilerin tahmin edilmesi için deneysel yaklaşımlar sunar. Deney tasarımı ve deneysel verilerin toplanması, belirli bir müdahalenin (tedavinin) hedef değişkenler üzerindeki etkisini analiz etmeye olanak tanır. Bu deneysel yöntemler, gözlemsel çalışmalardan farklı olarak, kontrol grupları ve rastgele atama gibi tekniklerle bir nedensellik ilişkisi kurmaya yardımcı olur.\nGeleceğe yönelik tahminler yapma (kestirim/öngörü): İstatistik, geçmiş verilere dayanarak gelecekteki olaylar hakkında tahmin yapmak için yöntemler geliştirir. Örneğin, bir şirket geçmiş yıllardaki satış verilerine dayanarak önümüzdeki yıl için satış tahminlerinde bulunabilir. Zaman serisi analizi, ekonometrik modeller ve makine öğrenimi yöntemleri bu süreçte kullanılabilir. İstatistik tüm bu yöntemlerin temelini oluşturur.\nBelirsizlik altında karar verme: Karar verme süreçlerinde belirsizlik her zaman mevcuttur. İstatistik, bu belirsizlikleri hesaba katarak olası sonuçların risklerini değerlendirir ve daha doğru kararlar alınmasına yardımcı olur. Örneğin, bir yatırım şirketi, borsadaki dalgalanmaları göz önünde bulundurarak hangi hisse senedine yatırım yapacağına karar verirken istatistiksel analizlerden yararlanabilir."
  },
  {
    "objectID": "Giris.html#istatistiğin-kullanım-alanları",
    "href": "Giris.html#istatistiğin-kullanım-alanları",
    "title": "1  Giriş",
    "section": "1.2 İstatistiğin kullanım alanları",
    "text": "1.2 İstatistiğin kullanım alanları\nİstatistik hemen her alanda kullanılır. Örneğin:\n\nEkonomi: Enflasyon, işsizlik oranları, büyüme oranları gibi ekonomik göstergelere ilişkin veri toplanması, bunların hesaplanması ve analiz edilmesi istatistiğin konuları arasındadır. Ayrıca, ekonometrik modellerin oluşturulması, tahmini ve yorumlanması için istatistiksel araçların kullanılması zorunludur. Örneğin, bir ülkenin GSYİH büyüme oranlarını veya gelir dağılımındaki değişimleri incelemek ve nedensel ilişkiler kurmak ekonometrik analizler gerektirir.\nİşletme: İş dünyasında istatistik, karar verme süreçlerini destekleyen önemli bir araçtır. Pazarlama stratejilerinin belirlenmesi, müşteri memnuniyeti anketlerinin analizi ve finansal risklerin yönetimi istatistiksel yöntemlerle gerçekleştirilir. Örneğin, işletmeler pazar araştırmaları ve müşteri verilerini kullanarak ürün geliştirme ve pazarlama stratejilerini şekillendirirler. Finans alanında, portföy yönetimi, risk analizi ve stok tahminleri gibi süreçlerde de istatistiksel yöntemler kullanılmaktadır. Ayrıca, işletme operasyonlarının etkinliğini ölçmek ve iyileştirmek için veri analitiği ve ileri istatistiksel modellemeler giderek daha fazla tercih edilmektedir.\nSağlık Bilimleri: Klinik çalışmalar, ilaç etkinliği testleri ve epidemiyolojik araştırmalar gibi alanlarda istatistiksel analizler büyük bir öneme sahiptir. İlaçların güvenliği ve etkinliği üzerine yapılan araştırmalar, rastgele kontrollü deneyler (RCT’ler) ile yürütülür ve sonuçların analizinde istatistiksel yöntemler kullanılır. Ayrıca, bulaşıcı hastalıkların yayılımını inceleyen epidemiyolojik çalışmalar, salgın hastalıkların kontrolü ve önlenmesi için gerekli olan verileri sağlar.\nSosyal Bilimler: Toplumun genel eğilimlerini anlamak, kamuoyu yoklamaları ve anket analizleri istatistiğin önemli bir parçasıdır. Örneğin, seçim anketleri veya tüketici davranışlarıyla ilgili araştırmalar, istatistiksel analizlerle desteklenir. Sosyal bilimler araştırmalarında nedensel ilişkilerin belirlenmesi de istatistiksel modellemelerle yapılır, bu da kamu politikalarının ve sosyal programların etkisini anlamada önemli bir rol oynar.\nMühendislik: Mühendislikte istatistik, üretim süreçlerinde kalite kontrol ve güvenilirlik analizleri için vazgeçilmezdir. Üretim hatlarının verimliliğini artırmak, arızaları önlemek ve ürün kalitesini sağlamak için mühendisler, istatistiksel süreç kontrolü ve güvenilirlik mühendisliği gibi çeşitli yöntemler kullanırlar."
  },
  {
    "objectID": "Giris.html#istatistiksel-süreç-ve-bilimsel-yöntem",
    "href": "Giris.html#istatistiksel-süreç-ve-bilimsel-yöntem",
    "title": "1  Giriş",
    "section": "1.3 İstatistiksel süreç ve bilimsel yöntem",
    "text": "1.3 İstatistiksel süreç ve bilimsel yöntem\nİstatistiksel analiz genellikle şu adımları içerir:\n\nVeri Toplama: Doğru ve güvenilir veri toplama süreci, istatistiksel analizlerin temelini oluşturur. Anketler, deneyler veya gözlemlerle veri toplanabilir.\nVeri Düzenleme: Toplanan veriler analiz edilebilir hale getirilir. Eksik veriler tamamlanır, hatalı veriler düzeltilir.\nVeri Analizi: İstatistiksel teknikler kullanılarak veriler incelenir. Betimsel ve çıkarımsal istatistiklerle veri hakkında sonuçlar çıkarılır.\nSonuçların Yorumlanması: Elde edilen bulguların anlamı değerlendirilir ve karar alma süreçlerinde kullanılır.\n\nBilimsel yöntem, gözlemler ve deneylerle hipotezleri test etmeyi içerir. İstatistik, bu süreçte kullanılan temel yöntemleri içerir ve yeni yöntemler geliştirir. Bilimsel araştırma süreçleri genel olarak şu aşamalardan oluşur:\n\nHipotez Oluşturma: Bilimsel araştırmaların ilk adımı araştırma sorusunu ve hipotezlerini ortaya koymaktır. Araştırmacı teorik modellere, mevcut bulgu ve gözlemlere dayanarak bir hipotez ileri sürer.\nVeri Toplama: Hipotezi test etmek için deneyler veya gözlemler yoluyla veri toplanır.\nVeri Analizi: Toplanan veriler istatistiksel analizlerle değerlendirilir.\nHipotezin Test Edilmesi: Veriler ışığında hipotez kabul veya reddedilir.\n\nDeneysel ve gözlemsel araştırmalar bu sürecin iki temel bileşenidir:\n\nDeneysel Araştırmalar: Araştırmacının müdahalesiyle yürütülen kontrollü deneyleri kapsar.\nGözlemsel Araştırmalar: Doğal ortamda gözlemlerle veri toplanan araştırmaları içerir."
  },
  {
    "objectID": "Giris.html#istatistik-veri-bilimi-ve-yapay-zeka",
    "href": "Giris.html#istatistik-veri-bilimi-ve-yapay-zeka",
    "title": "1  Giriş",
    "section": "1.4 İstatistik, Veri Bilimi ve Yapay Zeka",
    "text": "1.4 İstatistik, Veri Bilimi ve Yapay Zeka\nİstatistik, günümüzde hızla gelişen veri bilimi, makine öğrenimi, veri madenciliği ve yapay zeka (AI) gibi interdisipliner alanların temel taşlarından biridir. Bu alanlar, büyük veri kümeleri ile çalışmak ve bu verilerden anlamlı sonuçlar çıkarmak için istatistiksel yöntemlerden geniş ölçüde yararlanır.\nVeri Bilimi (Data Science): Veri bilimi, büyük veri kümelerinden bilgi çıkarma amacını taşıyan ve istatistik, matematik, bilgisayar bilimi ve diğer bilim dallarının kesişiminde çok disiplinli bir çalışma alanıdır. İstatistik, veri bilimcilerin veri temizleme, modelleme, analiz ve görselleştirme süreçlerinde kullandıkları temel araçları içerir. Ayrıca, istatistiksel çıkarımlar, veri biliminin hipotez testi ve güven aralıkları gibi analiz süreçlerine rehberlik eder.\nMakine Öğrenimi (Machine Learning): İstatistik, makine öğrenimi ve istatistiksel öğrenme algoritmalarının geliştirilmesinde büyük bir rol oynar. Regresyon, sınıflandırma, kümeleme gibi temel makine öğrenimi algoritmaları istatistiksel yöntemlerle yakından ilişkilidir. İstatistik, ayrıca model performansını değerlendirme ve sonuçların genellenebilirliğini sağlama süreçlerinde de kullanılır.\nVeri Madenciliği (Data Mining): Veri madenciliği, büyük veri kümelerinden anlamlı desenler ve ilişkiler keşfetme sürecidir. Bu alanda kullanılan pek çok yöntem, istatistiksel teknikler üzerine kuruludur. Örneğin, kümeleme algoritmaları, ilişki kurma ve hipotez oluşturma gibi işlemler, istatistiksel modellere dayanır.\nYapay Zeka (Artificial Intelligence - AI): Yapay zeka, insan benzeri karar verme süreçlerini benzeten (simülasyonunu yapan) sistemler geliştirmeyi hedefler. Bu sistemlerin temelinde, genellikle makine öğrenmesi, istatistiksel öğrenme ve olasılık teorisi yatar. AI uygulamalarında belirsizlikleri yönetme, riskleri hesaplama ve sonuçları tahmin etme gibi işlemler için istatistiksel yöntemler hayati öneme sahiptir. Örneğin, doğal dil işleme (NLP) alanında büyük metinlerde kelime sıklığı ve sentiment analizinde, hangi kelimelerin daha anlamlı olduğunu, ve olumlu veya olumsuz duygudurumu belirlemek için istatistiksel yöntemler kullanılır.\nSonuç olarak, bu alanlar istatistikten doğrudan beslenmekte ve her biri verinin gücünden yararlanarak daha iyi kararlar almak ve tahminlerde bulunmak için istatistiksel araçları kullanmaktadır. Modern veri analiz dünyasında istatistiğin, bu disiplinlerle entegrasyonu, verinin doğru yorumlanması ve anlamlı sonuçlar çıkarılması açısından vazgeçilmezdir."
  },
  {
    "objectID": "Giris.html#istatistiksel-yazılımlar",
    "href": "Giris.html#istatistiksel-yazılımlar",
    "title": "1  Giriş",
    "section": "1.5 İstatistiksel Yazılımlar",
    "text": "1.5 İstatistiksel Yazılımlar\nİstatistiksel yazılımlar günümüzde istatistik biliminin vazgeçilmez bir parçası haline gelmiştir. Geniş veri setleri üzerinde analiz yapmak, karmaşık modeller oluşturmak ve sonuçları görselleştirmek için bilgisayar yazılımları kullanmak, manuel yöntemlerle mümkün olmayacak kadar kapsamlı analizlerin hızlı ve etkili bir şekilde yapılmasını sağlar. Bu yazılımlar, akademik araştırmalardan endüstriyel projelere kadar her alanda kullanılan çok çeşitli araçlar sunar. İstatistiksel yazılımlar, kullanıcıya modelleme, veri yönetimi ve grafik oluşturma gibi fonksiyonlar sağlar. Bazı yazılımlar ticari olarak sunulurken, bazıları açık kaynaklı ve ücretsizdir. Her yazılımın sunduğu özellikler ve kullanım kolaylığı farklılık gösterebilir; bu da kullanıcıların ihtiyaçlarına göre seçim yapmasına olanak tanır.\nYaygın olarak kullanılan istatistiksel yazılımlar şunlardır:\nR: Bu kitapta kullanılan R, açık kaynaklı ve güçlü bir istatistiksel programlama dilidir. R, geniş bir paket yelpazesi ve kullanıcı topluluğu sayesinde istatistiksel analizlerde esneklik sağlar. Veri analizinden makine öğrenimi algoritmalarına kadar birçok alanda kullanılan R, kullanıcıya istatistiksel modelleme, veri görselleştirme ve simülasyon olanakları sunar. R’ın popülerliği, esnekliği ve topluluk desteği, onu hem akademik dünyada hem de iş dünyasında önemli bir araç haline getirmiştir. Ayrıca, RStudio gibi entegre geliştirme ortamları, bu dili daha erişilebilir ve kullanışlı hale getirir.\nSPSS: Sosyal bilimlerde ve pazar araştırmalarında yaygın olarak kullanılan bu ticari yazılım, kullanıcı dostu bir arayüze sahiptir. SPSS, anket analizleri, regresyon modelleri ve temel istatistiksel testler gibi işlemler için idealdir. Kullanıcının programlama bilgisi gerektirmeden analiz yapabilmesi, SPSS’in yaygın olarak tercih edilmesinin başlıca sebeplerinden biridir. Özellikle anket verilerinin analizi ve sosyal bilimler araştırmalarında tercih edilen SPSS, sunduğu geniş kapsamlı raporlama ve tablo oluşturma araçlarıyla dikkat çeker.\nExcel: Microsoft Excel, istatistiksel analizler için kullanılabilecek temel işlevlere sahip, yaygın bir elektronik tablo programıdır. Excel, büyük veri kümelerinin hızlı bir şekilde işlenmesi ve görselleştirilmesi için ideal bir araçtır. Özellikle küçük ölçekli analizler ve veri düzenleme işlemleri için pratik bir çözüm sunar. Kullanıcılar, Excel’de yerleşik fonksiyonlar sayesinde ortalama, standart sapma ve regresyon analizi gibi temel istatistiksel hesaplamaları kolayca yapabilirler. Bununla birlikte, daha karmaşık istatistiksel analizler için sınırlı kalabilir, bu durumda ek eklentiler veya daha gelişmiş yazılımlar tercih edilebilir.\nSAS: Büyük veri setleri üzerinde hızlı analiz yapabilme kabiliyeti ile bilinen SAS, ticari bir yazılım olarak birçok sektörde yaygın şekilde kullanılmaktadır. Özellikle bankacılık, sağlık ve sigorta gibi büyük veri gerektiren sektörlerde tercih edilen SAS, güçlü istatistiksel araçlar ve veri yönetimi özellikleri sunar. SAS’ın güçlü yanlarından biri de gelişmiş raporlama ve veri madenciliği yetenekleridir.\nStata: Ekonomi, ekonometri ve sosyal bilimler araştırmalarında yaygın olarak kullanılan ticari bir yazılımdır. Stata, özellikle panel veri analizleri, nedensel çıkarım ve zaman serisi analizleri gibi alanlarda güçlü araçlar sunar. Kullanıcı dostu komut sistemi sayesinde, Stata, hem basit hem de karmaşık istatistiksel analizler için esnek bir platform sunar. Gelişmiş veri yönetimi, modelleme ve grafik oluşturma yetenekleri, onu araştırma projelerinde yaygın bir seçim haline getirmiştir.\nPython: Veri bilimi ve makine öğrenimi alanında yaygın olarak kullanılan Python, istatistiksel analizlerde de güçlü bir araçtır. Pandas, NumPy, SciPy ve StatsModels gibi kütüphaneler sayesinde Python, hem veri işleme hem de istatistiksel modelleme açısından büyük esneklik sağlar. Python’un açık kaynak olması ve geniş bir topluluğa sahip olması, onu veri bilimi projelerinde popüler bir dil haline getirmiştir.\nBunların dışında Minitab, JMP, Julia gibi başka yazılımlar da bulunmaktadır. Her bir yazılım, farklı alanlara ve ihtiyaçlara yönelik özel araçlar ve özellikler sunarak kullanıcıların istatistiksel analizleri daha verimli yapmalarını sağlar. Bu nedenle, hangi yazılımın kullanılacağı, analiz edilen verinin türüne, analiz yöntemlerine ve kullanıcının uzmanlık düzeyine göre değişiklik gösterebilir."
  },
  {
    "objectID": "R-base.html#R-kurulum",
    "href": "R-base.html#R-kurulum",
    "title": "2  R Programına Giriş",
    "section": "2.1 Kurulum",
    "text": "2.1 Kurulum\nR ve RStudio bilgisayarınızda yüklü değilse ya da eski versiyonları yüklüyse, aşağıdaki adımları takip ederek en güncel versiyonlarını yükleyebilirsiniz:\n\nÖnce CRAN adresinden, https://cran.r-project.org/, R’ın sisteminize uygun en son versiyonunu indirerek kurunuz. Kurulumdan sonra programı çalıştırdığımızda R komut penceresine (Console) ulaşabiliriz (bkz. Şekil 2.1)\n\n\n\n\nŞekil 2.1: R programının arayüzü ve komut satırı\n\n\nBu aşamada temel R fonksiyonlarını kullanmaya başlayabilirsiniz. Örneğin, aşağıdaki komutları sırasıyla yazarak simülasyonla oluşturduğumuz 50 gözlemli verilerin bir serpilme grafiğini çizebiliriz:\n\nx = rnorm(50)\ny = 1 + 2*x + rnorm(50)\nplot(x, y)\n\nBu programın çıktısı için bkz. Şekil 2.2.\n\n\n\nŞekil 2.2: R programının komut satırı ve grafik penceresi\n\n\nAncak standart R arayüzü (R GUI) ile kod yazmak, proje hazırlamak ve yönetmek kolay olmayabilir. Bu işleri kolaylaştırmak için yaygın olarak kullanılan bir arayüz RStudio programıdır. RStudio, R için popüler bir entegre geliştirme ortamı (IDE) olup, temel R arayüzüne göre çeşitli avantajlar sunar. Bunlar arasında gelişmiş kod düzenleme seçenekleri, paket yönetimi ve entegre yazılım geliştirme ortamı, proje yönetimi, R Markdown ve Quarto gibi dinamik rapor ve belge oluşturma seçenekleri ve geniş kullanıcı topluluğu ve desteği sayılabilir.\n\nRStudio adresine, https://rstudio.com/, giderek bilgisayar sisteminize uygun programı kurunuz.\n\n\n\n\nŞekil 2.3: RStudio programı\n\n\nRStudio programını çalıştırdığımızda karşımıza dört pencere çıkmaktadır (bkz. Şekil 2.3):\nA penceresi: Sol altta yer alana komut satırı (console) ile programı kullanmaya başlayabiliriz. Konsolun yanındaki sekmeler terminal, arkaplan işleri ve R Markdown gibi diğer RStudio özelliklerine erişim için kullanılır. Ayrıca hata mesajları ve uyarılar da bu pencerede görülür.\nB penceresi: Sol üst tarafta yer alan pencere dosya düzenleyicisidir. Bu alanda çeşitli dokümanlar oluşturabilir, komutları bir R script dosyası içinde düzenleyebilir ve kaydedebiliriz. Editör, kod tamamlama, sözdizimi vurgulama ve kod parçalarını yürütme gibi özelliklere sahiptir. Örneğin, uzantısı .R olan bir kod dosyası (script) oluşturmak için File &gt; New File &gt; R script adımlarını takip edebilirsiniz. New file altında çok sayıda dosya biçimi dikkatinizi çekmiştir. Örneğin bu kitap R Quarto dosya biçimi (.qmd uzantılı) ile oluşturulmuştur.\nC penceresi: RStudio programının sağ üst kısmındaki pencerede mevcut çalışma oturumuna ilişkin çeşitli bilgiler, veri kümeleri ve fonksiyonlar yer almaktadır (Environment, History). Burada hafızada yer alan nesnelerin bir listesi ve özellikleri ile geçmiş komutların bir listesi yer almaktadır.\nD penceresi: Sağ alt pencerede ise farklı sekmelerde dosyaların bir listesi ve özellikleri, oluşturulan grafikler, aktif olan paketlerin listesi, yardım dosyaları ve diğer bilgiler yer almaktadır (bkz. Şekil 2.3).\nRStudio sadece basit bir arayüz olmanın ötesinde karmaşık dokümanlar oluşturulması, yazılım projelerinin geliştirilmesi ve yönetilmesi gibi çok sayıda fonksiyona sahiptir. Bu özellikleriyle R ve Python gibi programlama araçlarını kullanan istatistikçi ve veri bilimciler arasında oldukça popülerdir."
  },
  {
    "objectID": "R-base.html#R-console",
    "href": "R-base.html#R-console",
    "title": "2  R Programına Giriş",
    "section": "2.2 RStudio Komut Satırı",
    "text": "2.2 RStudio Komut Satırı\nAlt solda (bkz. Şekil 2.3, A penceresi) yer alan R Console penceresini kullanarak doğrudan komutlarınızı çalıştırabilirsiniz. Kısa komutlar için pratik olsa da ciddi analizler için bir R Script dosyası tutmanız daha sağlıklı olacaktır.\n\n2.2.1 Aritmetik işlemler\nKomut satırında basit aritmetik işlemler kolayca yapılabilir:\n\nA = 5 + 3 # toplama \nB = 5 - 3 # çıkarma \nC = 5 * 3 # çarpma \nD = 5 / 3 # bölme \nE = 5 ^ 3 # üst alma \n\nAtama işlemi = ya da &lt;- ile yapılabilir:\n\nx &lt;- A/B \nprint(x)\n\n[1] 4\n\n\nBilgisayarlarda yaptığımız aritmetik işlemlerin sonucu beklediğimizden farklı olabilir. Örneğin \\[\na = (9\\times 8.1) + 8.1\n\\] işleminin sonucunun \\(10\\times 8.1 = 81\\) olduğunu biliyoruz. Komut satırında bunu hesaplayalım:\n\na &lt;- 9*8.1 + 8.1\nprint(a)\n\n[1] 81\n\n\nDaha yakından bakarsak\n\nprint(a, digits = 17)\n\n[1] 80.999999999999986\n\n\nbu sonucun tam olarak 81 olmadığını görebiliriz. Bunun nedeni bilgisayarlarda sayıların ikili sistem temsilindeki (floating point arithmetic) hatadır. Bu işlemde bu hata yaklaşık olarak\n\nprint(81-a, digits = 17)\n\n[1] 1.4210854715202004e-14\n\n\nyani \\(1.4210854715202004\\times 10^{-14}\\), ya da\n\nformat(81-a, scientific = FALSE)\n\n[1] \"0.00000000000001421085\"\n\n\nkadardır. Bu, çoğu durumda gözardı edilebilse de yaptığınız hesaplamanın amacına bağlı olarak sorun yaratabilir. Örneğin, yazdığınız programda bir aritmetik işlemin sonucunu başka bir sonuçla karşılaştırmak istediğinizi düşünelim. Bunun için, daha sonra detaylı olarak inceleyeceğimiz R’ın mantıksal işlemcilerini kullanabiliriz. Örneğin elde ettiğimiz sonucun 81’e eşit olup olmadığını sorgulamak istediğimizi düşünelim:\n\n81 == a # boşluksuz iki eşit işareti mantıksal kıyaslama yapar\n\n[1] FALSE\n\n\nBuna göre bildiğimiz tam sonuç (81) ile aritmetik işlemin sonucu (a) eşit değil. Aslında eşit olduklarını biliyoruz. Ancak bilgisayar temsilinde yaklaşık olarak eşittirler:\n\nall.equal(81,a)\n\n[1] TRUE\n\n\nBurada öntanımlı tolerans düzeyi olan \\(0.000000015\\) kullanıldı. Yani aritmetik çözüm ile tam sonuç arasındaki fark tolerans düzeyinden küçüktür.\nR’da makine hassasiyeti (\\(\\epsilon\\)) ya da diğer bir deyişle makine epsilonu, çift duyarlıklı (double precision) kayan nokta sayılarının gösterebileceği en küçük pozitif sayıdır. Bu sayı, 1.0’a bu değeri eklediğinizde 1.0’dan farklı olarak algılanacak en küçük artışı ifade eder. R’da bu değer .Machine$double.eps ile sorgulanabilir:\n\nprint(.Machine$double.eps, digits=22)\n\n[1] 2.220446049250313080847e-16\n\n\nÖrneğin bilgisayarda temsil edilebilen 1’den büyük olan en küçük sayıyı bulalım:\n\neps &lt;- .Machine$double.eps\nu &lt;- 1 + eps\nprint(u, digits=22) \n\n[1] 1.000000000000000222045\n\nu&gt;1\n\n[1] TRUE\n\n\nNümerik hesaplamaların özellikleri için ?.Machine komutunu kullanarak yardım dosyasını inceleyebilirsiniz. IEEE 754 çift hassasiyetli sayı temsil standardına göre4 yaklaşık olarak \\(2^{-1022}\\) olarak tanımlı en küçük pozitif çift hassasiyetli sayı\n\n.Machine$double.xmin\n\n[1] 2.225074e-308\n\n\nolarak tanımlıdır.\nHesaplamalarda diğer aritmetik işlemlerin de sorun yaratabileceği göz ardı edilmemelidir. Örneğin aşağıdaki çıkarma işlemini düşünelim:\n\nb &lt;- 10.2 - 10.1\nprint(b, digits = 17)\n\n[1] 0.099999999999999645\n\n\nBunun tam sonuç olan \\(0.10\\) ile aynı olmadığı görülmektedir.\nAlıştırma 81 sayısının ikili sistemde gösteriminin \\((1010001)\\) olduğunu, yani, \\((81)_{10} = (1010001)_2\\) yazılabileceğini gösteriniz. Ayrıca \\(0.10\\)’in ikili gösterimini bulunuz.\n\n\n2.2.2 Yerleşik sabitler ve fonksiyonlar\nR’da çok sayıda yerleşik sabitler, matematiksel fonksiyonlar, ve özel tanımlı nesneler bulunur. Örneğin \\(\\pi\\) sayısı\n\npi\n\n[1] 3.141593\n\n\nile tanımlanır.\nR’da log() doğal logaritma olarak öntanımlıdır:\n\nlog(exp(1))\n\n[1] 1\n\n\nÜstel fonksiyon ve \\(e\\) sayısı için:\n\ne &lt;- exp(1)\nprint(e, digits = 3)\n\n[1] 2.72\n\n\n\\(e\\) sayısının noktadan sonraki 16 basamağını bulalım:\n\nprint(e, digits = 17)\n\n[1] 2.7182818284590451\n\n\n10 ve 2 tabanlı logaritmalar için log10() ve log2() kullanılabilir:\n\nlog10(100)\n\n[1] 2\n\n\n\nlog2(16)\n\n[1] 4\n\n\nRda tanımlı diğer özel nesneler şunlardır: Inf ve -Inf artı ve eksi sonsuzu, NA (not available) kayıp değerleri, NaN (not a number) tanımsız bir işlem sonucunu ifade eder:\n\n1/0\n\n[1] Inf\n\n-1/0\n\n[1] -Inf\n\n0/0\n\n[1] NaN"
  },
  {
    "objectID": "R-base.html#R-nesne",
    "href": "R-base.html#R-nesne",
    "title": "2  R Programına Giriş",
    "section": "2.3 R’da Nesneler",
    "text": "2.3 R’da Nesneler\nR’da her şey bir nesnedir (object) ve tüm işlemler bu nesneleri üzerinden yapılır. Nesne temelli yaklaşım, veri analizi ve istatistiksel modelleme için doğal bir çerçeve sunmaktadır. Nesneler, sayılar, vektörler, matrisler, veri çerçeveleri, fonksiyonlar gibi veri yapılarını temsil edebilir.\nR nesne tanımında büyük-küçük harf ayırımı yapar, yani x ve X farklı nesnelerdir. Hafızadaki tüm nesneleri görmek için ls() komutu kullanılabilir:\n\nls()\n\n [1] \"a\"                          \"A\"                         \n [3] \"b\"                          \"B\"                         \n [5] \"C\"                          \"D\"                         \n [7] \"decimal_to_binary\"          \"decimal_to_binary_fraction\"\n [9] \"e\"                          \"E\"                         \n[11] \"eps\"                        \"has_annotations\"           \n[13] \"u\"                          \"x\"                         \n\n# ya da objects()\n\nMevcut oturumda aktif olan nesnelerin listesine ulaşmak için RStudio’da sağ üst pencerede Environment sekmesine bakılabilir. rm(x) komutu x nesnesini hafızadan siler. Tüm nesneleri silmek istersek\n\nrm(list=ls())\nls()\n\nkomutunu kullanabiliriz.\nNesne isimleri rakamla başlayamaz, virgül ve boşluk içeremez (nokta içerebilir). Örnek olarak komut satırında aşagıdaki işlemleri yapınız:\n\n2nesne &lt;- c(10, 20)\n\nBu işlem hata verecektir: Error: unexpected symbol in \"2nesne\". Nesne isimlerinin rakamla başlayamayacağını belirtmiştik.\n\nnesne2 &lt;- c(10, 20)\nnesne2\n\n[1] 10 20\n\n\nBunun dışında nesnelerin isimlendirilmesinde bir zorunluluk yoktur. Ancak isimlendirmelerde kodun anlaşılır ve kolayca düzenlenebilir olmasına dikkat etmek faydalı olacaktır. Nesnelerin isimlerinin içeriklerini açık ve anlaşılır şekilde yansıtmasına dikkat edilebilir. Nesnelerin isimlendirilmesinde yaygın kullanılan örnekler şunlardır:\n\n# Örnek 1 (snake_case)\nyeni_bir_nesne &lt;- nesne2*5\nyeni_bir_nesne\n\n[1]  50 100\n\n\n\n# Örnek 2 (CamelCase)\nYeniBirNesne &lt;- nesne2*5\nYeniBirNesne\n\n[1]  50 100\n\n\n\n# Örnek 3\nyeni.bir.nesne &lt;- nesne2^3\nyeni.bir.nesne\n\n[1] 1000 8000\n\n\nR’da temel nesne türleri şunlardır:\n- Vektör: nümerik, karakter, mantıksal, tamsayı\n- Matris\n- Liste\n- Veri çerçevesi (data frame)\nR’da bir nesnenin sınıfını ve türünü öğrenmek için class() ve typeof() fonksiyonları kullanılabilir:\n\nclass(yeni_bir_nesne)\n\n[1] \"numeric\"\n\n\n\ntypeof(yeni_bir_nesne)\n\n[1] \"double\""
  },
  {
    "objectID": "R-base.html#R-vektor",
    "href": "R-base.html#R-vektor",
    "title": "2  R Programına Giriş",
    "section": "2.4 Vektörler",
    "text": "2.4 Vektörler\nBir R vektörü (ya da bir atomik vektör) bir değer ya da bilgi topluluğudur. Sayısal ya da sayısal olmayan elemanlar içerebilir. Ancak sadece bir türde değer içerebilir: reel sayılar (doubles), tamsayılar (integers), karakterler (characters), mantıksal sonuçlar (logicals) ve kompleks sayılar.\nR’da vektör ya da liste oluşturmanın en kolay yolu c() komutudur. Örneğin, aşağıdaki örnekte olduğu gibi c() fonksiyonuyla a ve b vektörlerini oluşturabiliriz:\n\na &lt;- c(1,2,3,4,5)  # bir sayısal vektör oluştur\ntypeof(a)          # vektörün türü\n\n[1] \"double\"\n\nprint(a)\n\n[1] 1 2 3 4 5\n\n\n\nb &lt;- rep(1,5) # tüm elemanları 1 olan 5 elemanlı bir vektör oluştur\na+b\n\n[1] 2 3 4 5 6\n\n\nVektör öğelerine isim verilebilir:\n\npuanlar &lt;- c(\"Ahmet\" = 80, \"Burcu\" = 95, \"Hasan\" = 67)\nprint(puanlar)\n\nAhmet Burcu Hasan \n   80    95    67 \n\n\n\nnames(puanlar)\n\n[1] \"Ahmet\" \"Burcu\" \"Hasan\"\n\n\n\n2.4.1 Sayısal Vektörler\nSayısal vektörler, R’da veri analizi ve istatistiksel hesaplamalar için temel yapı taşlarından biridir. Bu vektörler, sayısal (nümerik) değerlerin dizilerini içerir ve genellikle hesaplamalar, analizler ve veri görselleştirmeler için kullanılır. Tüm elemanları tamsayı ya da reel sayılardan oluşan vektörlerdir.\nSayısal bir vektör oluşturmak için c() fonksiyonu kullanılır. Bu fonksiyon, içine yazılan değerleri birleştirerek bir vektör oluşturur. Örneğin:\n\nsayisal_vektor &lt;- c(2, 4, 6, 8, 10)\nsayisal_vektor\n\n[1]  2  4  6  8 10\n\n\nTüm elemanları sıfır olan 5 öğeli bir vektör oluşturmak istersek numeric() fonksiyonunu kullanabiliriz:\n\nsifirlar &lt;- numeric(5)\nsifirlar \n\n[1] 0 0 0 0 0\n\n\nSayısal vektörler, hem tamsayıları (integers) hem de reel sayıları (doubles) içerebilir. Tamsayılar için sonlarına L eklenir:\n\ntamsayilar &lt;- c(1L, 2L, 3L)\ntamsayilar\n\n[1] 1 2 3\n\ntypeof(tamsayilar)\n\n[1] \"integer\"\n\n\n\nreel_sayilar &lt;- c(1.5, 2.5, 3.5)\nreel_sayilar\n\n[1] 1.5 2.5 3.5\n\ntypeof(reel_sayilar)\n\n[1] \"double\"\n\n\nÖrnek: skor vektörü bir ürün için 100 üzerinden değerlendirmeleri göstersin:\n\nskor &lt;- c(\"Denek 1\" = 80, \"Denek 2\" = 65, \"Denek 3\" = 78, \"Denek 4\" = 94, \"Denek 5\" = 100, \"Denek 6\" = NA, \"Denek 7\" = 55, \"Denek 8\" = 85, \"Denek 9\" = 88, \"Denek 10\" = 75)\nprint(skor)\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 6  Denek 7  Denek 8 \n      80       65       78       94      100       NA       55       85 \n Denek 9 Denek 10 \n      88       75 \n\n\nYaygın kullanılan sayısal vektör fonksiyonları şunlardır:\n\n# vektörün eleman sayısı \nlength(a) # ya da NROW(a)\n\n[1] 5\n\n# sırala\nsort(skor) # default: küçükten büyüğe, NA hariç\n\n Denek 7  Denek 2 Denek 10  Denek 3  Denek 1  Denek 8  Denek 9  Denek 4 \n      55       65       75       78       80       85       88       94 \n Denek 5 \n     100 \n\n# maximum \nmax(a)\n\n[1] 5\n\n# minimum\nmin(a)\n\n[1] 1\n\n# elemanların toplamı\nsum(a)\n\n[1] 15\n\n# elemanların çarpımı\nprod(a) \n\n[1] 120\n\n# Tüm elemanları a olan n-vektör: rep(a, n)\nrep(1,10)\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\n# seq(T): 1'den  T'ye tamsayı dizisi\nseq(10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n# seq(t,T) t'den T'ye tamsayı dizisi\nseq(5,10)\n\n[1]  5  6  7  8  9 10\n\n# seq(t,T,s) t'den T'ye s artışla tamsayı dizisi\nseq(1,10,2)\n\n[1] 1 3 5 7 9\n\n\nBir vektörün elemanlarına ulaşmak için [ ] ile pozisyonu (indeksi) bildirmemiz gerekir. İlk elemanın indeksi 1’dir:\n\n# 1nci eleman\nskor[1]\n\nDenek 1 \n     80 \n\n\nBelirli bir aralıktaki elemanları seçmek için:\n\n# 2-4 elemanlar\nskor[2:4]\n\nDenek 2 Denek 3 Denek 4 \n     65      78      94 \n\n\n\n# son eleman\nn &lt;- length(skor)\nskor[n]\n\nDenek 10 \n      75 \n\n\n\n# son 3 eleman\nskor[(n-3):n]\n\n Denek 7  Denek 8  Denek 9 Denek 10 \n      55       85       88       75 \n\n\nAlıştırma skor[(n-3):n] yerine skor[n-3:n] kullanınız. Sonucu tartışınız.\n\nskor[n-3:n]\n\nDenek 7 Denek 6 Denek 5 Denek 4 Denek 3 Denek 2 Denek 1 \n     55      NA     100      94      78      65      80 \n\n\nMantıksal ifadelerle belirli koşulları sağlayan elemanları seçmek mümkündür. Mantıksal vektörler izleyen bölümde ele alınmaktadır. Bu aşamada sayısal vektörlerle mantıksal karşılaştırmaların nasıl yapılabileceğine ilişkin bir örnek görelim:\n\nsayisal_vektor &lt;- c(2, 4, 6, 8, 10)\nbesten_buyuk_mu &lt;- sayisal_vektor &gt; 5\nbesten_buyuk_mu\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE\n\n\nBu örnekte bir sayısal vektör oluşturduk ve sayisal_vektor &gt; 5 ifadesini kullanarak bu koşulun doğru ya da yanlış olup olmadığını ekrana yazdık. Bu koşulu sağlayan, yani beşten büyük olan elemanları görmek istersek köşeli parantezi kullanabiliriz:\n\nsayisal_vektor[besten_buyuk_mu]\n\n[1]  6  8 10\n\n\nAynı sonuca\n\nsayisal_vektor[sayisal_vektor &gt; 5]\n\n[1]  6  8 10\n\n\nkomutu ile de ulaşılabilir.\n\n\n2.4.2 Karakter Vektörleri\nR’da karakter vektörleri, metin (string) tabanlı verileri saklamak için kullanılır. Her öğe, alfanümerik karakterler, boşluklar veya özel karakterler içeren bir metin parçasıdır. Bu vektörler, veri analizinde metin tabanlı veri işleme için temel yapı taşlarından biridir.\nBir karakter vektörü oluşturmak için c() fonksiyonu kullanılır. Her eleman çift tırnak işaretleri, \" \", ya da ' ', içinde belirtilir:\n\nisimler &lt;- c(\"Ahmet\", \"Burcu\", \"Cem\") # 3 elemanlı bir karakter vektörü\nisimler\n\n[1] \"Ahmet\" \"Burcu\" \"Cem\"  \n\ntypeof(isimler)\n\n[1] \"character\"\n\n\nBoş bir karakter vektörü oluşturmak istersek character() fonksiyonunu kullanabiliriz:\n\nkar &lt;- character(5) # 5 elemanlı bir boş karakter vektörü oluştur\nkar\n\n[1] \"\" \"\" \"\" \"\" \"\"\n\n\nBir karakter dizisinin uzunluğunu öğrenmek için nchar() fonksiyonu kullanılır:\n\nnchar(\"Merhaba Dünya\")\n\n[1] 13\n\n\nBurada boşlukların da sayıldığına dikkat ediniz. Bu fonksiyonu bir karakter vektörüne de uygulayabiliriz:\n\n# bir karakter vektöründeki ögelerin uzunluğu\nnchar(isimler) \n\n[1] 5 5 3\n\nnchar(kar)\n\n[1] 0 0 0 0 0\n\n\nKarakter vektörleri üzerinde birçok işlem gerçekleştirilebilir. Örneğin, iki metin parçasını birleştirmek için paste() veya paste0() fonksiyonları kullanılır:\n\n#  iki ayrı metin parçasından yeni bir metin oluşturma\nkelime1 &lt;- \"Merhaba\"\nkelime2 &lt;- \"Dünya\"\ntam_cumle &lt;- paste(kelime1, kelime2)\ntam_cumle\n\n[1] \"Merhaba Dünya\"\n\n\nBir karakter dizisinden belirli bir bölümü ayıklamak için substr() fonksiyonu kullanılır. Eğer x bir karakter vektörü ise belirli bir aralıktaki karakterleri ayıklamak için\n\nsubstr(x, start, stop)\n\nkullanılabilir. Örneğin,\n\nsubstr(\"abcdef\", 3, 4)\n\n[1] \"cd\"\n\n\n\nmetin &lt;- \"R programlama dili\"\naltMetin &lt;- substr(metin, 3, 13)\naltMetin\n\n[1] \"programlama\"\n\n\nMetnin belirli bir kısmına değiştirmek istersek yine aynı komutu kullanabiliriz:\n\nalf &lt;- \"abcdef\"\nsubstr(alf, 1, 2) &lt;- \"AB\"\n\nKarakter vektörlerini alfabetik olarak sıralamak için sort() fonksiyonu kullanılır:\n\nisimler &lt;- c(\"Hasan\", \"Elif\", \"Zeynep\", \"Ahmet\", \"Çetin\", \"Burcu\")\nsort(isimler)\n\n[1] \"Ahmet\"  \"Burcu\"  \"Çetin\"  \"Elif\"   \"Hasan\"  \"Zeynep\"\n\n\nKarakter dizilerinde desenleri (pattern) bulma ve değiştirme işlemleri için grep(), grepl(), gsub() ve sub() gibi fonksiyonlar kullanılır.\ngrep() fonksiyonu, belirli bir desen veya ifadeyi bir karakter vektörü içinde aramak için kullanılır ve eşleşen öğelerin indekslerini döndürür. Örnek olarak, diyelim ki, çeşitli meyve isimlerinin bulunduğu bir karakter vektörümüz var ve bu vektör içinde “elma” kelimesini içeren tüm öğeleri bulmak istiyoruz.\n\n# Meyve isimlerini içeren bir karakter vektörü\nmeyveler &lt;- c(\"elma\", \"muz\", \"portakal\", \"elma ve armut\", \"kivi\", \"armut\")\n\n# \"elma\" kelimesini içeren öğeleri arayalım\nelma_indisleri &lt;- grep(\"elma\", meyveler)\n\n# Eşleşen öğelerin indeksleri (sıra numaraları)\nprint(elma_indisleri)\n\n[1] 1 4\n\n\nBu kod, meyveler vektöründe “elma” kelimesini içeren öğelerin sırasını bulur ve yazdırır. Bu durumda, “elma” ve “elma ve armut” ifadelerini içeren öğelerin sıra numaraları, 1 ve 4, çıktı olarak yazılmıştır.\ngrepl() fonksiyonu, bir karakter vektörü içinde belirli bir deseni veya metni arar ve her öğe için mantıksal bir değer (TRUE veya FALSE) döndürür. Bu, belirli bir desenin varlığını her öğe için kontrol etmek istediğinizde kullanışlıdır. Örneğin, çeşitli şehir isimlerini içeren bir karakter vektörünüz var ve bu şehir isimleri arasında “Ankara” kelimesini içerenleri bulmak istiyorsunuz.\n\n# Şehir isimlerini içeren bir karakter vektörü\nsehirler &lt;- c(\"İstanbul\", \"Ankara\", \"İzmir\", \"Bursa\", \"Ankara ve Konya\", \"Antalya\")\n\n# \"Ankara\" kelimesini içeren öğeleri bulalım\nankara_var_mi &lt;- grepl(\"Ankara\", sehirler)\n\n# Her öğe için mantıksal değerler\nprint(ankara_var_mi)\n\n[1] FALSE  TRUE FALSE FALSE  TRUE FALSE\n\n\nBu kod, sehirler vektöründe her öğe için “Ankara” kelimesinin varlığını kontrol eder ve her öğe için bir mantıksal değer (TRUE veya FALSE) döndürür. Örneğin, “Ankara” ve “Ankara ve Konya” ifadelerini içeren öğeler için TRUE değeri yazılır.\ngrepl() genellikle koşullu ifadelerde ya da veri alt kümesi oluşturmak için kullanılır. Örneğin, sadece “Ankara” içeren şehir isimlerini bir alt küme olarak almak istersek:\n\n# Sadece \"Ankara\" içeren şehirleri filtreleyelim\nankara_iceren_sehirler &lt;- sehirler[grepl(\"Ankara\", sehirler)]\n\n# Filtrelenmiş liste\nprint(ankara_iceren_sehirler)\n\n[1] \"Ankara\"          \"Ankara ve Konya\"\n\n\nBu kod, “Ankara” kelimesini içeren şehir isimlerini bir alt küme olarak döndürür. grepl fonksiyonu, verileri filtrelemek ve belirli koşullara göre alt kümeler oluşturmak için oldukça kullanışlıdır.\nR’da sub() fonksiyonu, bir karakter dizisi içinde belirli bir deseni bulur ve bu deseni başka bir metinle değiştirir. Ancak, bu değişikliği yalnızca ilk eşleşme için yapar. Örneğin, bir cümle içindeki ilk “elma” kelimesini “armut” ile değiştirmek istiyorsak:\n\n# Bir cümle\ncumle &lt;- \"elma ve muz, elma ve kiraz\"\n\n# İlk \"elma\" kelimesini \"armut\" ile değiştirelim\nyeni_cumle &lt;- sub(\"elma\", \"armut\", cumle)\n\n# Yeni cümle\nprint(yeni_cumle)\n\n[1] \"armut ve muz, elma ve kiraz\"\n\n\nBu kod, cumle içindeki ilk “elma” kelimesini “armut” ile değiştirir ve güncellenmiş cümleyi yazdırır. Yani, “elma ve muz, elma ve kiraz” olan cümle “armut ve muz, elma ve kiraz” olarak değişir.\nEğer metindeki tüm “elma” kelimelerini değiştirmek isterseniz, gsub() fonksiyonunu kullanabilirsiniz:\n\n# Tüm \"elma\" kelimelerini \"armut\" ile değiştirelim\ntumunu_degistir &lt;- gsub(\"elma\", \"armut\", cumle)\n\n# Yeni cümle\nprint(tumunu_degistir)\n\n[1] \"armut ve muz, armut ve kiraz\"\n\n\nBu örnekte, gsub() fonksiyonu cumle içindeki tüm “elma” kelimelerini “armut” ile değiştirdi. Yani, “elma ve muz, elma ve kiraz” olan cümle “armut ve muz, armut ve kiraz” olarak yeniden tanımlandı.\nR programlama dilinde, düzenli ifadeleri (regular expressions) kullanarak karakter dizileri üzerinde ileri düzey işlemler yapmamıza olanak tanıyan regexpr() ve gregexpr() gibi çok sayıda fonksiyon vardır. Bu fonksiyonlar, metin içindeki desenleri (patterns) bulmak ve analiz etmek için oldukça güçlü araçlardır. regexpr() fonksiyonu, bir karakter dizisi içinde belirli bir düzenli ifadeyi arar ve ilk eşleşmenin konumunu döndürür. Ayrıca, eşleşmenin uzunluğu ve diğer ayrıntılar hakkında bilgi verir. Bu fonksiyon, metin içindeki belirli desenleri bulmanın yanı sıra, desenin metindeki konumu hakkında da detay sağlar.\ngregexpr() ise, regexpr()’in genelleştirilmiş bir versiyonudur ve bir karakter dizisi içinde belirtilen düzenli ifadenin tüm eşleşmelerini bulur. Bu fonksiyon, metin içindeki tüm eşleşmelerin konumlarını ve uzunluklarını vererek, desenlerin metinde nasıl dağıldığını analiz etmemize olanak tanır.\nBu fonksiyonlar, metin analizi ve veri temizleme işlemlerinde oldukça yararlıdır, ancak düzenli ifadelerin kullanımı ve bu fonksiyonların detayları, başlı başına kapsamlı bir konudur. Daha fazla bilgi ve ileri düzey uygulamalar için, R’ın resmi belgelerine, yardım dosyalarına ve dokümantasyonlara ve ileri düzey kaynaklara bakılabilir.\n\n\n2.4.3 Mantıksal vektörler\nR’da TRUE ve FALSE yerleşik isimlerdir, kullanıcılar tarafından değiştirilemez.\nTüm öğeleri yanlış (FALSE) olan bir mantıksal vektör oluşturalım:\n\nmantiksal &lt;- logical(5)\nmantiksal\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\n\nYukarıda belirttiğimiz gibi, TRUE ve FALSE rezerve kelimelerdir.\n\n# mantıksal işlemler, ==, !=, &gt;, &lt;, &gt;=, &lt;=\n0 == 0\n\n[1] TRUE\n\n0 == 1\n\n[1] FALSE\n\n\n\nprint(a)\n\n[1] 1 2 3 4 5\n\n# 2'den büyük sayılar\na &gt;= 3\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE\n\n\nArka planda bu kelimelerin karşılığı nümerik olarak TRUE (T) için 1 FALSE (F) için 0’dır. Örneğin,\n\nlogic1 &lt;- c(TRUE, FALSE, TRUE)\nlogic1\n\n[1]  TRUE FALSE  TRUE\n\nas.numeric(logic1) \n\n[1] 1 0 1\n\n\nMantıksal vektörlerle aritmetik işlem yapılırken dikkat edilmelidir. R bu durumda mantıksal sonuçları 0/1 değerlerinden oluşan sayısal vektöre dönüştürür. Örneğin,\n\n# parantez içinde mantıksal karşılaştırma: \n1-(a&lt;=3)\n\n[1] 0 0 0 1 1\n\n\nParantez içindeki işlemin önceliği vardır. Parantezi kaldırırsak\n\n1-a&lt;=3\n\n[1] TRUE TRUE TRUE TRUE TRUE\n\n\nsonucunu elde ederiz. Bu istediğimiz sonuç olmayabilir.\nMantıksal işlemcileri, yani, ==, &gt;, &lt;, &gt;=, &lt;= ,!=, kullanarak yeni vektörler oluşturabiliriz. Örneğin, yukarıda oluşturduğumuz skor nesnesinde\n\nskor\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 6  Denek 7  Denek 8 \n      80       65       78       94      100       NA       55       85 \n Denek 9 Denek 10 \n      88       75 \n\n\n70’ten küçük değerleri bulalım:\n\ndusuk_skorlar &lt;- (skor &lt; 70)\ndusuk_skorlar\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 6  Denek 7  Denek 8 \n   FALSE     TRUE    FALSE    FALSE    FALSE       NA     TRUE    FALSE \n Denek 9 Denek 10 \n   FALSE    FALSE \n\n\nDeğerlendirme notu 70’den küçük olanları bulmak istersek mantıksal ifadeleri vektör elemanlarına ulaşmakta kullanabiliriz (logical subscripting). Yukarıda oluşturduğumuz mantıksal vektörden hareketle:\n\nskor[dusuk_skorlar]\n\nDenek 2    &lt;NA&gt; Denek 7 \n     65      NA      55 \n\n\nKayıp gözlemlerin mantıksal ifadelerde dikkate alınmadığını ve çıktıda yer verildiğini görüyoruz.\nAlıştırma skor vektöründe kayıp değerleri NA bulunuz ve yeni bir vektör yaratarak bu değerleri siliniz.\nÇözüm Bunun en basit yolu temel R’da yer alan which() ve is.na() fonksiyonlarını kullanmaktır. is.na() fonksiyonu NA elemanlar için mantıksal değer TRUE olmayanlar için FALSE değerini içeren bir mantıksal vektör oluşturur.\n\n\n# öğe NA mı ?\nis.na(skor)\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 6  Denek 7  Denek 8 \n   FALSE    FALSE    FALSE    FALSE    FALSE     TRUE    FALSE    FALSE \n Denek 9 Denek 10 \n   FALSE    FALSE \n\n\nwhich() ise NA olan elemanların pozisyonunu (indeks bilgisini) verir.\n\n# NA'nın konumunu bul\nwhich(is.na(skor))\n\nDenek 6 \n      6 \n\n\nYa da NA olmayan elemanların indeks bilgisini oluşturmak istersek:\n\n# sayısal öğelerin konumu\nwhich(!is.na(skor))\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 7  Denek 8  Denek 9 \n       1        2        3        4        5        7        8        9 \nDenek 10 \n      10 \n\n\nBurada !is.na() kayıp olmayan elemanları seçer (! olumsuzlama operatörüdür). Şimdi NA olan elemanı dışlayıp yeni bir vektör içinde kaydedelim:\n\nskor2 &lt;- skor[which(!is.na(skor))]\nskor2\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 7  Denek 8  Denek 9 \n      80       65       78       94      100       55       85       88 \nDenek 10 \n      75 \n\n\nAslında which() bu örnekte gereksizdir (ara adımları istemiyorsak):\n\nskor2 &lt;- skor[!is.na(skor)]\nskor2\n\n Denek 1  Denek 2  Denek 3  Denek 4  Denek 5  Denek 7  Denek 8  Denek 9 \n      80       65       78       94      100       55       85       88 \nDenek 10 \n      75 \n\n\nKayıp gözlemleri silmek için tasarlanmış olan na.omit() fonksiyonu da kullanılabilir."
  },
  {
    "objectID": "R-base.html#R-matris",
    "href": "R-base.html#R-matris",
    "title": "2  R Programına Giriş",
    "section": "2.5 Matrisler",
    "text": "2.5 Matrisler\n\nR’da matris oluşturmanın en kolay yolu matrix() fonksiyonudur. Örneğin, skor vektöründen hareketle \\(10\\times 1\\) matris oluşturalım:\n\n\n\nA &lt;- matrix(data = skor, nrow=10, ncol=1, byrow = FALSE, dimnames = NULL)\nprint(A)\n\n      [,1]\n [1,]   80\n [2,]   65\n [3,]   78\n [4,]   94\n [5,]  100\n [6,]   NA\n [7,]   55\n [8,]   85\n [9,]   88\n[10,]   75\n\ndim(A) # matrisin boyutları satır x sütun\n\n[1] 10  1\n\n\n\nİstersek satır ve sütunları isimlendirebiliriz:\n\n\nrownames(A) &lt;- names(skor)\ncolnames(A) &lt;- \"skor\"\nprint(A)\n\n         skor\nDenek 1    80\nDenek 2    65\nDenek 3    78\nDenek 4    94\nDenek 5   100\nDenek 6    NA\nDenek 7    55\nDenek 8    85\nDenek 9    88\nDenek 10   75\n\n\n\nMatrisin boyutlarını değiştirebiliriz:\n\n\nB &lt;- matrix(data=1:10, nrow=5, ncol=2, byrow=FALSE, dimnames=NULL)\nprint(B)\n\n     [,1] [,2]\n[1,]    1    6\n[2,]    2    7\n[3,]    3    8\n[4,]    4    9\n[5,]    5   10\n\n\n\nBB &lt;- matrix(data=1:10, nrow=5, ncol=2, byrow=TRUE, dimnames=NULL)\nprint(BB)\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4\n[3,]    5    6\n[4,]    7    8\n[5,]    9   10\n\n\n\nt() fonksiyonu ile matrisin devriği (transpose) bulunabilir:\n\n\nt(B)\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n\n\n\nMatrislerle mantıksal işlemler yapılabilir:\n\n\n\nB &gt; 5\n\n      [,1] [,2]\n[1,] FALSE TRUE\n[2,] FALSE TRUE\n[3,] FALSE TRUE\n[4,] FALSE TRUE\n[5,] FALSE TRUE\n\nwhich(B&gt;5)\n\n[1]  6  7  8  9 10\n\nBB &gt; 5\n\n      [,1]  [,2]\n[1,] FALSE FALSE\n[2,] FALSE FALSE\n[3,] FALSE  TRUE\n[4,]  TRUE  TRUE\n[5,]  TRUE  TRUE\n\nwhich(BB&gt;5)\n\n[1]  4  5  8  9 10\n\n\nPozisyonun sütun bazında belirlendiğine (yani matris sütun bazında vektörize edilse) dikkat ediniz.\n\nBoş (sıfırlar) matrisi\n\n\nzeros &lt;- matrix(data = 0, nrow = 5, ncol = 5)\nzeros\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    0    0    0    0    0\n[2,]    0    0    0    0    0\n[3,]    0    0    0    0    0\n[4,]    0    0    0    0    0\n[5,]    0    0    0    0    0\n\n\n\nMatris oluşturmanın başka bir yolu da mevcut vektörlerin birleştirilmesidir. Bunun için cbind ve rbind kullanılabilir. Örneğin,\n\n\nx &lt;- cbind(b,a)\nx\n\n     b a\n[1,] 1 1\n[2,] 1 2\n[3,] 1 3\n[4,] 1 4\n[5,] 1 5\n\n#  \ncbind(1,1:5)\n\n     [,1] [,2]\n[1,]    1    1\n[2,]    1    2\n[3,]    1    3\n[4,]    1    4\n[5,]    1    5\n\n\n\nBireylerin cinsiyetini içeren bir karakter vektörü oluşturalım:\n\n\ncinsiyet &lt;- c(\"Kadın\", \"Erkek\", \"Kadın\", \"Kadın\", \"Erkek\", \"Kadın\", \"Erkek\", \"Erkek\", \"Kadın\", \"Kadın\")\nprint(cinsiyet) \n\n [1] \"Kadın\" \"Erkek\" \"Kadın\" \"Kadın\" \"Erkek\" \"Kadın\" \"Erkek\" \"Erkek\" \"Kadın\"\n[10] \"Kadın\"\n\ntable(cinsiyet)\n\ncinsiyet\nErkek Kadın \n    4     6 \n\n\n\nBurada cinsiyet bir kategorik (ya da kesikli) değişkendir. Şimdi skor ve cinsiyet bilgisini bir araya getirelim ve buna x ismini verelim:\n\n\nx&lt;- cbind(skor, cinsiyet)\nx\n\n         skor  cinsiyet\nDenek 1  \"80\"  \"Kadın\" \nDenek 2  \"65\"  \"Erkek\" \nDenek 3  \"78\"  \"Kadın\" \nDenek 4  \"94\"  \"Kadın\" \nDenek 5  \"100\" \"Erkek\" \nDenek 6  NA    \"Kadın\" \nDenek 7  \"55\"  \"Erkek\" \nDenek 8  \"85\"  \"Erkek\" \nDenek 9  \"88\"  \"Kadın\" \nDenek 10 \"75\"  \"Kadın\" \n\n\n\nYukarıda x’in tüm elemanları karakter tipine zorlandı. Bunun nedeni R’da vektör ve matrislerin sadece tek tip (sayısal, karakter, mantıksal, vs.) değere sahip olabilmesidir."
  },
  {
    "objectID": "R-base.html#R-liste",
    "href": "R-base.html#R-liste",
    "title": "2  R Programına Giriş",
    "section": "2.6 Listeler",
    "text": "2.6 Listeler\n\nBir R listesi farklı türlerde, uzunluk ve boyutlarda nesneleri içerebilen bir nesneler topluluğudur.\n\n\n\n# bir R listesi oluştur\nliste1 &lt;- list(numaralar = seq(10,20,3), \n               isimler = c(\"Ahmet\", \"Burcu\", \"Hasan\"), \n               birim_mat = diag(4)\n               )\n#  \nliste1 \n\n$numaralar\n[1] 10 13 16 19\n\n$isimler\n[1] \"Ahmet\" \"Burcu\" \"Hasan\"\n\n$birim_mat\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    1    0    0\n[3,]    0    0    1    0\n[4,]    0    0    0    1\n\n\n\nListe içindeki nesnelerin isimleri için names() komutu kullanılabilir:\n\n\nnames(liste1)\n\n[1] \"numaralar\" \"isimler\"   \"birim_mat\"\n\n\n\nBir listenin belirli bir bileşenine liste_ismi$bilesen_ismi ile ulaşılabilir.\n\n\n# örnek\nliste1$numaralar\n\n[1] 10 13 16 19\n\nliste1$numaralar[1]\n\n[1] 10\n\n\n\ndim(liste1$birim_mat)\n\n[1] 4 4"
  },
  {
    "objectID": "R-base.html#R-data-fr",
    "href": "R-base.html#R-data-fr",
    "title": "2  R Programına Giriş",
    "section": "2.7 Veri Çerçeveleri (Data Frames)",
    "text": "2.7 Veri Çerçeveleri (Data Frames)\n\nR’da en temel nesnelerden biri veri çerçevesi (data frame)’dir. Belirli özelliklere sahip bir liste olarak düşünülebilir.\nAynı uzunlukta ve farklı tipte vektörleri bir araya getirmemize olanak tanır. Örneğin\n\n\nveri1 &lt;- data.frame(skor, cinsiyet)\nveri1\n\n         skor cinsiyet\nDenek 1    80    Kadın\nDenek 2    65    Erkek\nDenek 3    78    Kadın\nDenek 4    94    Kadın\nDenek 5   100    Erkek\nDenek 6    NA    Kadın\nDenek 7    55    Erkek\nDenek 8    85    Erkek\nDenek 9    88    Kadın\nDenek 10   75    Kadın\n\n\n\nnames(veri1)\n\n[1] \"skor\"     \"cinsiyet\"\n\nstr(veri1)\n\n'data.frame':   10 obs. of  2 variables:\n $ skor    : num  80 65 78 94 100 NA 55 85 88 75\n $ cinsiyet: chr  \"Kadın\" \"Erkek\" \"Kadın\" \"Kadın\" ...\n\nsummary(veri1)\n\n      skor       cinsiyet        \n Min.   : 55   Length:10         \n 1st Qu.: 75   Class :character  \n Median : 80   Mode  :character  \n Mean   : 80                     \n 3rd Qu.: 88                     \n Max.   :100                     \n NA's   :1                       \n\n\n\n# örnek veri seti simülasyonu\nset.seed(123)\nx1 = rnorm(100, mean=5, sd=1.2)\nx2 = rnorm(100, mean=0, sd=0.8)\ngrup = sample(c(\"A\", \"B\", \"C\"), 100, replace = TRUE)\ny = 2 + 2*x1 - 3*x2 + 5*(grup==\"B\") + 8*(grup==\"C\") + rnorm(100) \n#\nveri2 &lt;- data.frame(y, x1, x2, grup) # veri çerçevesini oluştur\nhead(veri2)\n\n         y       x1          x2 grup\n1 18.60331 4.327429 -0.56832525    C\n2 18.44227 4.723787  0.20550697    C\n3 24.42217 6.870450 -0.19735350    C\n4 13.84834 5.084610 -0.27803408    A\n5 15.55670 5.155145 -0.76129485    A\n6 24.90853 7.058078 -0.03602218    C"
  },
  {
    "objectID": "R-base.html#R-prog",
    "href": "R-base.html#R-prog",
    "title": "2  R Programına Giriş",
    "section": "2.8 Temel Programlama",
    "text": "2.8 Temel Programlama\n\n2.8.1 Mantıksal işlemler\n\nVe işlemcisi: &\n\n\n# doğru ve doğru = doğru\nTRUE & TRUE \n\n[1] TRUE\n\n\n\n# doğru ve yanlış = yanlış\nTRUE & FALSE \n\n[1] FALSE\n\n\n\n# yanlış ve doğru = yanlış\nFALSE & TRUE \n\n[1] FALSE\n\n\n\n# yanlış ve yanlış = yanlış\nFALSE & FALSE \n\n[1] FALSE\n\n\n\nx &lt;- c(4, 8)\nx &gt; 3 & x &lt; 6\n\n[1]  TRUE FALSE\n\n\n\nVeya işlemcisi: |\n\n\n# doğru veya doğru = doğru \nTRUE | TRUE\n\n[1] TRUE\n\n\n\n# doğru veya yanlış = doğru \nTRUE | FALSE\n\n[1] TRUE\n\n\n\n# yanlış veya doğru = doğru \nFALSE | TRUE\n\n[1] TRUE\n\n\n\n# yanlış veya yanlış = yanlış\nFALSE | FALSE\n\n[1] FALSE\n\n\n\nx &lt;- c(4, 8)\nx &gt; 3 | x &lt; 6\n\n[1] TRUE TRUE\n\n\n\n!(X & Y) ile !X | !Y aynı sonucu verir.\n!(X | Y) ile !X & !Y aynı sonucu verir.\nMantıksal işlemleri kullanarak bir veri çerçevesinin satırları (gözlemler) seçilebilir:\n\n\n# grup = A olanları seç\nveri2_A &lt;- veri2[grup == \"A\", ]\nhead(veri2_A)\n\n           y       x1          x2 grup\n4  13.848335 5.084610 -0.27803408    A\n5  15.556703 5.155145 -0.76129485    A\n10  8.899622 4.465206  0.73519729    A\n14 10.731512 5.132819 -0.04444957    A\n15 10.155900 4.332991  0.41552576    A\n16 15.951850 7.144296  0.24092269    A\n\n\n\n# subset() fonksiyonu ile \nhead(subset(veri2, grup==\"A\"))\n\n           y       x1          x2 grup\n4  13.848335 5.084610 -0.27803408    A\n5  15.556703 5.155145 -0.76129485    A\n10  8.899622 4.465206  0.73519729    A\n14 10.731512 5.132819 -0.04444957    A\n15 10.155900 4.332991  0.41552576    A\n16 15.951850 7.144296  0.24092269    A\n\n\n\n# grup = A ve grup = B olanları seç\nveri2_AB &lt;- veri2[grup == \"A\" | grup == \"B\", ]\nhead(veri2_AB)\n\n           y       x1         x2 grup\n4  13.848335 5.084610 -0.2780341    A\n5  15.556703 5.155145 -0.7612949    A\n7  18.594695 5.553099 -0.6279236    B\n9  15.817540 4.175777 -0.3041812    B\n10  8.899622 4.465206  0.7351973    A\n11 21.393180 6.468898 -0.4602776    B\n\n\n\n# %in% işlemcisi ile\n# grup = A ve grup = B olanları seç\nveri2_AB &lt;- veri2[grup %in% c(\"A\", \"B\"), ]\nhead(veri2_AB)\n\n           y       x1         x2 grup\n4  13.848335 5.084610 -0.2780341    A\n5  15.556703 5.155145 -0.7612949    A\n7  18.594695 5.553099 -0.6279236    B\n9  15.817540 4.175777 -0.3041812    B\n10  8.899622 4.465206  0.7351973    A\n11 21.393180 6.468898 -0.4602776    B\n\n\n\nVeri çerçevesinden rassal olarak bazı gözlemlerin seçilmesi:\n\n\n# veri2'den 10 satırın rassal seçimi\nset.seed(99)\norneklem1 &lt;- sample(1:nrow(veri2), 10, replace = FALSE)\norneklem1 # satır numaraları\n\n [1] 48 33 44 22 62 32 13 20 31 68\n\n\n\n# veri2'den satırları çek\nveri2[orneklem1, ]\n\n           y       x1          x2 grup\n48  8.876980 4.440014  0.55033342    A\n33 23.299257 6.074151  0.03298634    C\n44 22.141873 7.602747 -1.21173412    A\n22 13.531749 4.738430 -0.75797969    A\n62 14.647966 4.397212 -0.83934161    A\n32 15.229202 4.645914  0.36120324    B\n13 21.869445 5.480926 -1.29430617    B\n20 13.544229 4.432650 -0.81930303    A\n31  8.205689 5.511757  1.15564069    A\n68 18.665672 5.063605 -0.38702450    B\n\n\n\nBenzer şekilde bir veri setinden bootstrap örneklemleri oluşturulabilir:\n\n\nsatirno &lt;- sample(1:nrow(veri2), nrow(veri2), replace = TRUE)\nboot1 &lt;- veri2[satirno, ]\nhead(boot1)\n\n          y       x1          x2 grup\n9  15.81754 4.175777 -0.30418122    B\n82 16.91902 5.462336  1.01054814    C\n88 19.94786 5.522218  0.06778983    C\n30 22.04715 6.504578 -0.05704647    B\n86 12.84222 5.398138 -0.15774072    A\n84 24.63868 5.773252 -0.69241029    C\n\n\n\n\n2.8.2 Koşullu işlem\n\nKoşullu işlemleri if else komutlarını kullanarak yapabiliriz. Kullanım örneği:\n\n\nif (condition) {\n  ....\n} else {\n    ....\n  }\n\n\nNümerik örnek:\n\n\n\na &lt;- seq(1,10,1)\nb &lt;- 85\nc &lt;- \"YTU\"\nif (typeof(b)==\"double\" |  typeof(b)==\"integer\") {\n  print(b) } else {\n    print(\"This is not a numeric object\")\n  }\n\n[1] 85\n\n\n\nx &lt;- -10\nif (x &lt; 0) {\n    print(\"x negatif bir sayıdır\") \n  } else if (x == 0) {\n    print(\"x sıfıra eşittir\") \n  } else {\n    print(\"x pozitif bir sayıdır\")\n  }\n\n[1] \"x negatif bir sayıdır\"\n\n\n\n\n2.8.3 Döngüler\n\nDöngü içinde işlem yapmak için for komutunu kullanabiliriz. Kullanım şablonu:\n\n\nfor (dongu_degiskeni in vektor) { \n  }\n\nBurada dongu_degiskeni sırasıyla vektor içindeki değerleri almaktadır. Örneğin,\n\nfor (i in 1:5) { \n  print(i) \n  }\n\n\nNümerik örnek:\n\n\nfor (i in 1:10){\n  if (i&lt;5) {print(i^2)}\n  else {print(sqrt(i))}\n}\n\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 2.236068\n[1] 2.44949\n[1] 2.645751\n[1] 2.828427\n[1] 3\n[1] 3.162278\n\n\n\nDöngüler üç şekilde oluşturulabilir:\n\nöğeler üzerinde: for (x in A)\nnümerik konum üzerinde: for (i in seq_along(A))\nisimler üzerinde: for (nm in names(A))\n\nDöngüleri hızlandırmanın bir yolu nümerik indisler üzerinde döngüyü çalıştırmak ve ve döngüden önce çıktı için boş bir nesne oluşturmaktır:\n\n\nsonuc &lt;- numeric(length(A))\nfor (i in seq_along(A)) {\n  sonuc[i] &lt;- sqrt(A[i])\n  }\n\n\n\n2.8.4 Fonksiyonel İşlemler\n\nlapply() bir liste ya da vektörün tüm elemanlarına bir fonksiyonu uygular ve aynı uzunlukta bir çıktı içinde saklar. Böylece işlemleri döngü içinde yapmaya gerek kalmayabilir.\nÖrnek: mtcars veri setindeki değişkenlerin aritmetik ortalamalarını bulunuz. Bir data frame aynı zamanda bir liste olduğundan lapply() kullanılabilir:\n\n\n\nliste_ort &lt;- lapply(mtcars, mean)  # \nunlist(liste_ort)\n\n       mpg        cyl       disp         hp       drat         wt       qsec \n 20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n        vs         am       gear       carb \n  0.437500   0.406250   3.687500   2.812500 \n\n\n\nlapply() içinde kendi yazdığımız fonksiyonları da kullanabiliriz.\nÖrnek: bir veri çerçevesinin sütunlarındaki kayıp gözlemleri (NA) sayınız. Veri setimiz aşağıdaki gibi olsun:\n\n\nset.seed(456)\nx1 &lt;- runif(100)\nx2 &lt;- runif(100)\nx3 &lt;- rnorm(100)\nx4 &lt;- rnorm(100)\nnapoz1 &lt;- sample(1:100, sample(1:10, 1), replace = FALSE)\nnapoz2 &lt;- sample(1:100, sample(1:10, 1), replace = FALSE)\nx1[napoz1] &lt;- NA\nx2[napoz2] &lt;- NA\ndata &lt;- data.frame(x1, x2, x3, x4)\nhead(data)\n\n         x1        x2          x3           x4\n1 0.0895516 0.2530410  0.11815133  0.293886215\n2 0.2105123 0.1337840  0.86990262  1.052402224\n3 0.7329553 0.3987728 -0.09193621 -0.006435601\n4 0.8521335 0.2829084  0.06889879 -0.404523473\n5 0.7883979 0.7513620 -1.68242675 -0.080917045\n6 0.3319600 0.8058037  1.11695555 -1.072424293\n\n\n\nna_sayisi &lt;- function(x) {\n  sum(is.na(x))\n}\nunlist(lapply(data, na_sayisi))\n\nx1 x2 x3 x4 \n 8  4  0  0 \n\n\n\n# ya da daha basit olarak \nunlist(lapply(data, function(x) sum(is.na(x))))\n\nx1 x2 x3 x4 \n 8  4  0  0 \n\n\n\nsapply() ve vapply() fonksiyonelleri lapply() gibi çalışır. Ancak çıktı olarak atomik vektör oluştururlar\n\n\n# data sütunları nümerik mi?\nsapply(data, is.numeric)\n\n  x1   x2   x3   x4 \nTRUE TRUE TRUE TRUE \n\n\n\n# data sütunlarında NA sayısı \nsapply(data, function(x) sum(is.na(x)))\n\nx1 x2 x3 x4 \n 8  4  0  0 \n\n\n\n# vapply() için çıktı vektörünün türünü bildirmemiz gerekir\nvapply(data, is.numeric, logical(1))\n\n  x1   x2   x3   x4 \nTRUE TRUE TRUE TRUE \n\n\n\n# data sütunlarında NA sayısı \nvapply(data, function(x) sum(is.na(x)), numeric(1))\n\nx1 x2 x3 x4 \n 8  4  0  0 \n\n\nsapply() interaktif uygulamalarda vapply() ise programlamada önerilir.\n\nMatris veya çok boyutlu diziler için apply() kullanılabilir:\n\n\n# 200 x 5 boyutlu bir uniform matris oluştur \nset.seed(789)\nX &lt;- matrix(runif(1000), ncol = 5)\ncolnames(X) &lt;- letters[1:5]\nhead(X)\n\n              a          b            c         d          e\n[1,] 0.69989436 0.29265239 0.0007847089 0.1423423 0.85313937\n[2,] 0.09349887 0.09354572 0.5411858680 0.9821530 0.05266862\n[3,] 0.01188682 0.34495804 0.0488849813 0.1806375 0.67594448\n[4,] 0.59160635 0.21537353 0.3234363657 0.9168293 0.45698617\n[5,] 0.49214944 0.72085409 0.1213557085 0.8762951 0.30602751\n[6,] 0.02016358 0.92697327 0.9060655029 0.9215866 0.31179128\n\n\n\n# X'in sütun ortalamalarını bul \napply(X, 2, mean) # satırlar için margin=1, sütunlar için ise 2\n\n        a         b         c         d         e \n0.4848826 0.5282805 0.5045356 0.4875399 0.5228984"
  },
  {
    "objectID": "R-base.html#R-fonksiyon",
    "href": "R-base.html#R-fonksiyon",
    "title": "2  R Programına Giriş",
    "section": "2.9 R Fonksiyonları",
    "text": "2.9 R Fonksiyonları\n\nR’da bütün işlemler fonksiyonlarla yapılır. Tipik bir R fonksiyonu girdiler (argümanlar) ve çıktılardan oluşur.\nÖrneğin mean() fonksiyonu skor girdisiyle çalıştırılırsa aritmetik ortalamalar elde edilir:\n\n\nmean(skor)\n\n[1] NA\n\n\nBurada çıktının ortalama değil NA olması öğelerden birinin NA olmasından kaynaklanır. Kayıp gözlemleri dışlayarak ortalamayı hesaplayalım:\n\nmean(skor, na.rm = TRUE) # ya da mean(skor, TRUE)\n\n[1] 80\n\n\nKullanıcı girmezse na.rm = FALSE değerini alır ve sonuç NA olur.\nBenzer şekilde, örneklem standart sapması için\n\nsd(skor, na.rm = TRUE)\n\n[1] 13.98213\n\n\nBir R fonksiyonunun girdilerini görmek istersek args() komutunu kullanabiliriz:\n\nargs(sd) \n\nfunction (x, na.rm = FALSE) \nNULL\n\n\nFonksiyonu ekrana yazdırmak istersek parantez olmadan ismini yazmamız yeterli olur:\n\nsd\n\nfunction (x, na.rm = FALSE) \nsqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), \n    na.rm = na.rm))\n&lt;bytecode: 0x00000270682624a8&gt;\n&lt;environment: namespace:stats&gt;\n\n\nKendi fonksiyonlarımızı yazmak için function() komutunu kullanabiliriz. Bu fonksiyon aşağıdaki sözdizimine sahiptir:\n\nfonksiyon_ismi &lt;- function(girdi1, girdi2) {\n  ... işlemler ...\n  }\n\nÖrnek: Bir sayının tek mi çift mi olduğunu bulan bir fonksiyon yazalım:\n\ntek_cift &lt;- function(x) {\n    if (x == 0) {\n      print(\"Girdiğiniz sayı sıfırdır!\")\n    } else if (x %% 2 == 0) {\n      print(\"Çift sayı\") \n    } else {\n      print(\"Tek sayı\")\n    }\n}\n\n\n# tek_cift() fonksiyonunu kullanabiliriz\ntek_cift(4) \n\n[1] \"Çift sayı\"\n\ntek_cift(5L) \n\n[1] \"Tek sayı\"\n\n\nR fonksiyonları polimorfiktir; yani aynı fonksiyon, farklı tipte nesnelerle çalıştığında farklı davranışlar gösterebilir. Bu özellik, print(), summary() veya plot() gibi genel işlevlerin, farklı tipte nesneler için özelleştirilmiş çıktılar üretmesini sağlar."
  },
  {
    "objectID": "R-base.html#R-paket",
    "href": "R-base.html#R-paket",
    "title": "2  R Programına Giriş",
    "section": "2.10 R Paketleri",
    "text": "2.10 R Paketleri\nPaketler ya da kütüphaneler belirli bir görevi yerine getirmek için tasarlanmış fonksiyonlardan oluşur. R kurulumuyla gelen temel paketler şunlardır:\n\nrownames(installed.packages(priority=\"base\"))\n\n [1] \"base\"      \"compiler\"  \"datasets\"  \"graphics\"  \"grDevices\" \"grid\"     \n [7] \"methods\"   \"parallel\"  \"splines\"   \"stats\"     \"stats4\"    \"tcltk\"    \n[13] \"tools\"     \"utils\"    \n\n\nR programının güçlü yanlarından biri kullanıcılar tarafından yazılmış paketlerin yüklenmesiyle geliştirilebilmesidir.\nÖrneğin, {corrplot} paketi korelasyon matrisini görselleştirir:\n\ninstall.packages(\"corrplot\", repos='http://cran.us.r-project.org')\n\nDetaylar için bkz https://cran.r-project.org/web/packages/corrplot/index.html.\n\nAlternatif olarak aynı işlem RStudio menüsünden de yapılabilir: Tools&gt;InstallPackages ilgili pencerede “{corrplot}” paket ismini yazmamız gerekir.\nPaketi kullanabilmek için önce yüklememiz daha sonra ise aktif hale getirmemiz gerekir:\n\n\nlibrary(corrplot)\nkor_matris &lt;- cor(mtcars)\ncorrplot(kor_matris)\n\n\n\n\nKomut satırında ?corrplot yazarak yardım dosyasını inceleyebiliriz (detaylı dokümantasyon dosyaları için help(package = \"corrplot\") komutu kullanılabilir) . Korelasyon matrisini nümerik değerleri kullanarak da görselleştirebiliriz. Yardım dosyasında da görüleceği gibi method=\"number\" opsiyonu bu amaç için kullanılabilir:\n\ncorrplot(kor_matris, method = \"number\")\n\n\n\n\nPakete ilişkin örnekleri çalıştırmak için komut satırında aşağıdaki kodu çalıştırınız:\n\nexample(corrplot)\n\nPakete ilişkin diğer bilgiler için packageDescription(\" \") komutu kullanılabilir:\n\npackageDescription(\"corrplot\")\n\nBirden fazla paketi yüklemek istersek:\n\ninstall.packages(\"corrplot\", \"MASS\")\n\nR varsayılan paket deposu CRAN (The Comprehensive R Archive Network) üzerinden bu iki paketi yüklemeye çalışır. CRAN deposu en popüler yollardan biri olsa da paket yüklemenin başka yolları da vardır. Örneğin, {devtools} paketi ile github üzerinden ya da yerel olarak paketler yüklenebilir.\nR topluluğu, kullanıcılar tarafından geliştirilen fonksiyonlar ve paketlerle her geçen gün büyümektedir. CRAN (Comprehensive R Archive Network) ve GitHub gibi platformlar aracılığıyla binlerce paket, R kullanıcılarının hizmetine sunulmuştur. Bu paketler, özel veri analizi ihtiyaçlarına yönelik çözüm sunar ve kullanıcıların kendi fonksiyonlarını yazarak R’ın yeteneklerini genişletmelerine olanak tanır.\nÖrneğin, belirli bir alanda çokça kullanılan bir analiz tekniği için henüz bir yerleşik R fonksiyonu yoksa, bir kullanıcı bu işlevi kendisi tanımlayabilir ve daha sonra bunu bir paket haline getirerek topluluğa katkıda bulunabilir. Bu, R’ın açık kaynaklı yapısının en büyük avantajlarından biridir. R ekosistemi, sürekli gelişen ve büyüyen bir yapıya sahiptir, bu da veri analistleri ve araştırmacılar için büyük bir avantaj sağlar.\nSon yıllarda Tidyverse adlı paketler kümesi, R kullanıcıları arasında büyük bir popülerlik kazanmıştır. Tidyverse, veri analizi süreçlerini daha okunabilir, tutarlı ve etkin hale getiren bir dizi paket içerir. Bu paketlerden özellikle dplyr ve ggplot2, veri işleme ve görselleştirme konusunda standart hale gelmiştir.\n\ndplyr: Bu paket, veri manipülasyonu için optimize edilmiş fonksiyonlar sağlar. Verileri filtrelemek, sıralamak, gruplamak ve özetlemek gibi işlemler, dplyr’ın sade ve anlaşılır sözdizimiyle çok daha kolay bir hale gelmiştir. Örneğin, filter(), mutate(), summarize() gibi fonksiyonlar, veri setleri üzerinde hızlı ve verimli işlemler yapmayı sağlar.\nggplot2: Görselleştirme konusunda R kullanıcılarının başvurduğu temel araçlardan biri olan ggplot2, veri görselleştirmeyi estetik ve esnek bir şekilde yapmayı sağlar. ggplot2, karmaşık grafikler üretmek için basit ve modüler bir yaklaşım sunar.\n\nTidyverse paketler topluluğu hakkında daha fazla bilgi için bkz. https://www.tidyverse.org/. Ayrıca kısa bir giriş için bkz. https://htastan.github.io/R-Giris/R-Tidyverse.html."
  },
  {
    "objectID": "R-base.html#R-dizin",
    "href": "R-base.html#R-dizin",
    "title": "2  R Programına Giriş",
    "section": "2.11 Çalışma dizini",
    "text": "2.11 Çalışma dizini\ngetwd() komutu ile güncel dizini görebiliriz:\n\ngetwd()\n\nBunu değiştirmek istersek setwd(\"/tam/adres/\") komutunu kullanabiliriz. Dizin adresinde \\ yerine / kullanıldığına dikkat ediniz:\n\nsetwd(\"C:/Users/Folder/Another-Folder/R-uygulama-1\")\n\nTipik olarak bu R dosyaları başka bilgisayarlarda çalışmaz. Her bilgisayarda bu adreslerin tekrar tanımlanması gerekebilir. Bu da hatalara davetiye çıkarır.\nRStudio’da R proje klasörü oluşturarak çalışma dizininin otomatik olarak algılanmasını sağlayabiliriz. Bir R projesi yardımıyla dosyaların başka bilgisayarlarda da çalışması mümkün olur."
  },
  {
    "objectID": "R-base.html#R-gorsel",
    "href": "R-base.html#R-gorsel",
    "title": "2  R Programına Giriş",
    "section": "2.12 Görselleştirme",
    "text": "2.12 Görselleştirme\n\n2.12.1 Plot fonksiyonu\nplot(x, y) iki nümerik vektör girdisini kullanarak grafiği çizer.\n\n\n\n\n\nŞekil 2.4: R plot fonksiyonu\n\n\n\n\n?base::plot() komutu ile girdi açıklamaları ve diğer özellikleri incelenebilir.\n\n\n\n\n\nŞekil 2.5: R plot fonksiyonu\n\n\n\n\n\n\n\nŞekil 2.6: Plot fonksiyonunda sembol (pch) ve çizgi tipleri (lty)\n\n\nŞekil 2.6 plot() fonksiyonunda kullanılan sembolleri ve çizgi tiplerini göstermektedir.\n\n\n2.12.2 Eğri çizimi\nTemel R’da bunun için curve() kullanılabilir. Yardım dosyasına ulaşmak için ?curve.\nÖrnekler:\n\n# a linear function\ncurve(1+2*x, from=-2, to=2, xlab=\"x\", ylab=\"\" )\n# add a quadratic function\ncurve(1+2*x-2*x^2, add = TRUE, col = \"red\" )\n# cubic\ncurve(1+2*x-2*x^2+3*x^3, add = TRUE, col = \"blue\" )\n\n\n\n\nKendi cebirsel fonksiyonlarımızı function() ile oluşturup curve() ya da plot() yardımıyla çizebiliriz:\n\n# fonksiyonu tanımla\nfun1 &lt;- function(x) 2*sin(x)+cos(x)\n# eğriyi çiz\ncurve(fun1, -pi, pi, n = 100) \n\n\n\n\n\n# focus on the interval -2 &lt; x &lt; 2\nplot(fun1, -2, 2)"
  },
  {
    "objectID": "R-base.html#çözümlü-alıştırmalar",
    "href": "R-base.html#çözümlü-alıştırmalar",
    "title": "2  R Programına Giriş",
    "section": "2.13 Çözümlü Alıştırmalar",
    "text": "2.13 Çözümlü Alıştırmalar\n\nAlıştırma 2.1 1’den 50’ye kadar sayıları içeren bir vektör oluşturun. Bu vektör içinden 7’nin katlarını bulun.\n\n# 1'den 50'ye kadar sayılar\nvektor &lt;- 1:50\n# 7'nin katları\nvektor[vektor %% 7 == 0]\n\n[1]  7 14 21 28 35 42 49\n\n\n\n\nAlıştırma 2.2 100 ile 200 arasındaki sayılardan sadece çift olanları içeren bir vektör oluşturun.\n\n# 100 ile 200 arasındaki çift sayılar\nvektor2 &lt;- 100:200\nvektor2[vektor2 %% 2 == 0]\n\n [1] 100 102 104 106 108 110 112 114 116 118 120 122 124 126 128 130 132 134 136\n[20] 138 140 142 144 146 148 150 152 154 156 158 160 162 164 166 168 170 172 174\n[39] 176 178 180 182 184 186 188 190 192 194 196 198 200\n\n\n\n\nAlıştırma 2.3 5 elemanlı iki sayısal vektör oluşturun ve bu iki vektör arasında element-wise (eleman bazında) toplama ve çarpma işlemleri yapın.\n\n# İki vektör oluşturma\nv1 &lt;- c(1, 2, 3, 4, 5)\nv2 &lt;- c(6, 7, 8, 9, 10)\n# Toplama ve çarpma\nv1 + v2\n\n[1]  7  9 11 13 15\n\nv1 * v2\n\n[1]  6 14 24 36 50\n\n\n\n\nAlıştırma 2.4 10 elemanlı bir sayısal vektör oluşturun ve bu vektörün ilk yarısını ve son yarısını ayrı ayrı toplayın.\n\n# 10 elemanlı vektör\nv3 &lt;- 1:10\n# İlk ve son yarısını toplama\nsum(v3[1:5])\n\n[1] 15\n\nsum(v3[6:10])\n\n[1] 40\n\n\n\n\nAlıştırma 2.5 4x4’lük bir matris oluşturun ve bu matrisin ikinci satırını ve üçüncü sütununu yazdırın.\n\n# Matris oluşturma\nmatris &lt;- matrix(1:16, nrow = 4)\n# İkinci satır ve üçüncü sütun\nmatris[2, ]\n\n[1]  2  6 10 14\n\nmatris[, 3]\n\n[1]  9 10 11 12\n\n\n\n\nAlıştırma 2.6 İki farklı 3x3’lük matris oluşturun ve bu matrisleri toplayın.\n\n# İki matris oluşturma ve toplama\nm1 &lt;- matrix(1:9, nrow = 3)\nm2 &lt;- matrix(9:1, nrow = 3)\nm1 + m2\n\n     [,1] [,2] [,3]\n[1,]   10   10   10\n[2,]   10   10   10\n[3,]   10   10   10\n\n\n\n\nAlıştırma 2.7 5x5’lik bir matris oluşturun ve bu matrisin köşegen elemanlarını (diagonal elements) bulun.\n\n# 5x5 matris\nmatris2 &lt;- matrix(1:25, nrow = 5)\n# Köşegen elemanlar\ndiag(matris2)\n\n[1]  1  7 13 19 25\n\n\n\n\nAlıştırma 2.8 3x3’lük bir matris oluşturun ve bu matrisin her elemanının karesini alın.\n\n# 3x3 matris ve kareler\nmatris3 &lt;- matrix(1:9, nrow = 3)\nmatris3^2\n\n     [,1] [,2] [,3]\n[1,]    1   16   49\n[2,]    4   25   64\n[3,]    9   36   81\n\n\n\n\nAlıştırma 2.9 Çeşitli veri tipleri içeren bir liste oluşturun ve bu listenin belirli bir elemanını başka bir değerle değiştirin.\n\n# Liste oluşturma ve değiştirme\nliste &lt;- list(sayi = 10, metin = \"Merhaba\", mantik = TRUE)\nliste\n\n$sayi\n[1] 10\n\n$metin\n[1] \"Merhaba\"\n\n$mantik\n[1] TRUE\n\nliste$metin &lt;- \"Güle güle\"\nliste\n\n$sayi\n[1] 10\n\n$metin\n[1] \"Güle güle\"\n\n$mantik\n[1] TRUE\n\n\n\n\nAlıştırma 2.10 İç içe (nested) bir liste oluşturun ve iç içe listenin bir alt elemanına nasıl erişileceğini gösterin.\n\n# İç içe liste\nic_ice_liste &lt;- list(sayilar = 1:5, harfler = letters[1:5], liste = liste)\nic_ice_liste$liste$metin\n\n[1] \"Güle güle\"\n\n\n\n\nAlıştırma 2.11 İsim, yaş ve gelir bilgilerini içeren bir veri çerçevesi oluşturun ve geliri 50,000’in üzerinde olan kişileri filtreleyin.\n\n# Veri çerçevesi oluşturma ve filtreleme\ndf &lt;- data.frame(Isim = c(\"Ali\", \"Veli\", \"Ayşe\"), Yas = c(32, 45, 25), Gelir = c(50000, 60000, 45000))\ndf\n\n  Isim Yas Gelir\n1  Ali  32 50000\n2 Veli  45 60000\n3 Ayşe  25 45000\n\ndf[df$Gelir &gt; 50000, ]\n\n  Isim Yas Gelir\n2 Veli  45 60000\n\n\n\n\nAlıştırma 2.12 Farklı şehirlerde yaşayan kişilerin bilgilerini içeren bir veri çerçevesi oluşturun ve her şehirde kaç kişinin yaşadığını hesaplayın.\n\n# Şehir bilgisi içeren veri çerçevesi\nsehir_df &lt;- data.frame(Isim = c(\"Ali\", \"Veli\", \"Ayşe\"), Sehir = c(\"İstanbul\", \"Ankara\", \"İstanbul\"))\ntable(sehir_df$Sehir)\n\n\n  Ankara İstanbul \n       1        2 \n\n\n\n\nAlıştırma 2.13 1’den 100’e kadar olan sayıları içeren bir vektör oluşturun ve bu vektördeki asal sayıları bulun.\n\n# Asal sayıları bulma \n# Bir asal sayı, yalnızca 1 ve kendisi olmak üzere tam olarak iki pozitif \n# böleni olan 1'den büyük bir doğal sayıdır.\n#\nasal_sayilar &lt;- c()\nfor (i in 2:100) {\n    if (i == 2) {\n        asal_sayilar &lt;- c(asal_sayilar, i)\n    } else {\n        asal_mi &lt;- TRUE\n        for (j in 2:(i-1)) {\n            if (i %% j == 0) {\n                asal_mi &lt;- FALSE\n                break\n            }\n        }\n        if (asal_mi) {\n            asal_sayilar &lt;- c(asal_sayilar, i)\n        }\n    }\n}\nasal_sayilar\n\n [1]  2  3  5  7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97\n\n\n\n\nAlıştırma 2.14 Bir karakter vektörü oluşturun ve her bir karakter dizisinin uzunluğunu for döngüsü kullanarak hesaplayın.\n\n# Karakter vektörü ve uzunlukları\nkelimeler &lt;- c(\"elma\", \"armut\", \"kiraz\")\nuzunluklar &lt;- c()\nfor (kelime in kelimeler) {\n  uzunluklar &lt;- c(uzunluklar, nchar(kelime))\n}\nuzunluklar\n\n[1] 4 5 5\n\n\n\n\nAlıştırma 2.15 İki sayı alıp bu sayıların geometrik ortalamasını döndüren bir fonksiyon yazın.\n\n# Geometrik ortalama fonksiyonu\ngeo_ortalama &lt;- function(a, b) {\n  sqrt(a * b)\n}\ngeo_ortalama(10,20)\n\n[1] 14.14214\n\n\n\n\nAlıştırma 2.16 Bir sayı dizisi alıp bu dizideki en büyük ve en küçük değerleri döndüren bir fonksiyon yazın.\n\n# Max ve min döndüren fonksiyon\nmax_min &lt;- function(sayilar) {\n  c(max = max(sayilar), min = min(sayilar))\n}\nmax_min(1:10)\n\nmax min \n 10   1"
  },
  {
    "objectID": "R-base.html#problemler",
    "href": "R-base.html#problemler",
    "title": "2  R Programına Giriş",
    "section": "2.14 Problemler",
    "text": "2.14 Problemler\n\nProblem 2.1 Bir hafta boyunca (Pazartesi’den Pazar’a) her gün ölçülen maksimum sıcaklıklar (20, 22, 21, 23, 25, 27, 26) olsun. Bu vektörü tanımlayın ve sıcaklık değişimlerini gösteren bir başka vektör hesaplayın (her günün sıcaklığının bir önceki günden farkı).\n\n\nProblem 2.2 Bir sınavdan alınan puanlar şöyledir: (70, 85, 90, 75, 60, 65, 75, 80). Bu puanların aritmetik ortalamasını hesaplayın. Bu puanların ortalamadan ne kadar sapma gösterdiğini içeren bir vektör oluşturun.\n\n\nProblem 2.3 8x8’lik bir matris kullanarak bir satranç tahtası oluşturun. Siyah kareler için 1, beyaz kareler için 0 kullanın. heatmap() ile görselleştirin.\n\n\nProblem 2.4 Beş şehir arasındaki mesafeleri içeren bir matris oluşturalım:\n\nset.seed(1)\nmesafeler &lt;- matrix(sample(100:500, 25, replace = TRUE), nrow = 5)\nrownames(mesafeler) &lt;- c(\"A\",\"B\",\"C\",\"D\",\"E\")\ncolnames(mesafeler) &lt;- c(\"G\",\"H\",\"J\",\"K\",\"L\")\nmesafeler\n\n    G   H   J   K   L\nA 423 286 429 136 389\nB 266 406 362 204 461\nC 228 184 428 316 481\nD 398 376 178 465 188\nE 369 461 312 264 388\n\n\nÖrneğin A şehri ile G şehri arasındaki mesafe 423 km’dir. Buna göre birbirine en yakın ve en uzak şehirleri bulun.\n\n\nProblem 2.5 İnsanların isim, yaş ve mesleklerini içeren aşağıdaki liste oluşturulmuştur:\n\nkişiler &lt;- list(c(\"Ali\", 35, \"Mühendis\"), \n                c(\"Ayşe\", 28, \"Doktor\"), \n                c(\"Mehmet\", 42, \"Öğretmen\"))\n\nBuna göre yaşı 30’dan büyük olan kişilerin sayısını bulun.\n\n\nProblem 2.6 Çeşitli ürünlerin adı, fiyatı ve stok miktarını içeren bir veri çerçevesi oluşturulmuştur:\n\nürünler &lt;- data.frame(Ürün = c(\"Kalem\", \"Defter\", \"Silgi\"), \n                      Fiyat = c(1.50, 2.00, 0.75), \n                      Stok = c(12, 8, 15))\nürünler\n\n    Ürün Fiyat Stok\n1  Kalem  1.50   12\n2 Defter  2.00    8\n3  Silgi  0.75   15\n\n\nStok miktarı 10’dan az olan ürünleri listeleyin.\n\n\nProblem 2.7 Fibonacci serisi, her sayının kendisinden önce gelen iki sayının toplamı olduğu bir sayı dizisidir. Seri genellikle 0 ve 1 ile başlar, ardından her yeni sayı, önceki iki sayının toplamı olarak oluşturulur. Matematiksel olarak ifade edersek, Fibonacci serisinin \\(F_n\\)inci terimi aşağıdaki gibi tanımlanır: \\[\nF_n = F_{n-1} + F_{n-2}\n\\] Burada \\(F_0=0\\) ve \\(F_1=1\\)’dir.\nBuna göre, ilk 20 Fibonacci sayısını hesaplayın ve bir vektörde saklayın.\n\n\nProblem 2.8 Öğrencilerin aldığı dersler ve bu derslerdeki notları içeren bir liste oluşturun. Her öğrenci için genel not ortalamasını hesaplayan bir fonksiyon yazın.\n\n\nProblem 2.9 Türkçe bir harfin alfabede kaçıncı harf olduğunu veren bir fonksiyon yazınız."
  },
  {
    "objectID": "R-base.html#footnotes",
    "href": "R-base.html#footnotes",
    "title": "2  R Programına Giriş",
    "section": "",
    "text": "https://www.r-project.org/about.html↩︎\nDetaylar için bkz. https://www.r-project.org/foundation/↩︎\nhttps://cran.r-project.org/↩︎\nBkz. https://en.wikipedia.org/wiki/IEEE_754↩︎"
  },
  {
    "objectID": "Betimsel.html#anakütle-ve-örneklem",
    "href": "Betimsel.html#anakütle-ve-örneklem",
    "title": "3  Betimsel İstatistik",
    "section": "3.1 Anakütle ve Örneklem",
    "text": "3.1 Anakütle ve Örneklem\nBir veri kümesi ilgilendiğimiz birimlere ilişkin ölçümlerden ya da kayıtlardan oluşur. Gözlem birimi kişi, hanehalkı, tüketici, firma, şehir, bölge, ülke vb olabilir. Pratikte karşılaştığımız veri kümeleri, tüm birimlerin verilerini içeren bir anakütle ya da bu birimlerin belirli bir kısmını kapsayan bir örneklem olabilir.\n\nTanım 3.1 (Anakütle (popülasyon, evren)) Araştırma yapılan birim ya da nesnelere ilişkin eksiksiz veri kümesine anakütle (ya da evren/popülasyon) adı verilir. Anakütle, araştırma sorusuyla doğrudan ilgilidir ve genellikle çok geniş bir veri kümesini temsil eder.\n\nBir ülke ya da şehirdeki tüm hanehalkları, bir üniversitedeki tüm öğrenciler, bir endüstrideki tüm çalışanlar ya da bir fabrikada bir günde üretilen tüm ürünler anakütleyi oluşturabilir. Anakütle genellikle çok büyük olduğundan, her birimi gözlemlemek zor veya yüksek maliyetli olabilir. Bu durum, araştırmacıları birimlerin tamamını gözlemlemek yerine anakütlenin bir alt kümesi olan örneklem ile çalışmaya yönlendirir. İstatistiksel çıkarsamanın temel amacı, örneklem verilerinden hareketle anakütle hakkında bilgi edinmek ve genellemeler yapmaktır.\n\nTanım 3.2 (Parametre) Anakütleyi tanımlayan ve anakütlenin belirli bir özelliğine ilişkin bilgi içeren sabit değerlere parametre denir. Örneğin, Türkiye’deki tüm hanehalklarının ortalama geliri bir parametredir. Bir fabrikanın tüm ürünlerinin ortalama ağırlığı veya bir okuldaki tüm öğrencilerin başarı ortalaması birer parametredir.\n\nAnakütle doğrudan gözlenemiyorsa parametreleri hesaplamak mümkün olmaz. Anakütle hakkında çıkarım yapmanın ve bilinmeyen parametreleri tahmin etmenin bir yolu anakütlenin tamamını gözlemlemek yerine daha küçük bir alt kümesine ilişkin bilgi toplamaktır.\n\nTanım 3.3 (Örneklem) Anakütle hakkında bilgi edinmek amacıyla belirli yöntemlerle seçilen anakütlenin bir alt kümesine örneklem (sample) adı verilir.\n\nÖrneklem anakütleden daha küçük olduğu için bilgi toplamak daha kolay ve ucuzdur. Bir şehirde yaşayan tüm hanelere ulaşmak yerine, bu anakütleyi temsil edebilen 500 gözlemli bir örneklem oluşturulabilir. Toplam öğrenci sayısı 40000 olan bir üniversitede, tesadüfi olarak seçilmiş 100 öğrenciden oluşan bir örneklem kullanılarak çıkarım ve genellemeler yapılabilir.\n\nTanım 3.4 (İstatistik) Örneklemden hesaplanan ve anakütle parametrelerini tahmin etmek için kullanılan değerlere istatistik denir. İstatistikler, örneklem verilerinden elde edilen ve anakütle hakkında bilgi veren ölçümlerdir. Örneğin, bir şehirdeki rassal seçilmiş 1000 hanehalkının ortalama geliri, bir üniversitedeki 200 öğrencinin ortalama notu veya bir fabrikada üretilen 500 ürünün ortalama ağırlığı birer istatistiktir.\n\nParametre ile istatistik birbiriyle karıştırılmamalıdır. Parametre anakütleye ilişkin sabitlerdir ve genellikle pratikte bilinmezler. İstatistikler ise örnekleme ilişkin değerlerdir ve sabit değildir. Başka bir örneklem çektiğimizde istatistikler de değişir. İstatistikleri rassal (tesadüfi) değişken olarak düşünebiliriz.\nAnakütlenin daha küçük bir temsili olarak düşünebileceğimiz örneklemi uygun yöntemlerle inceleyerek anakütle hakkında genellemeler ve çıkarımlar yapabiliriz. Temsili bir örneklem, anakütlenin özelliklerini doğru bir şekilde yansıtmalıdır. Örneklem ne kadar iyi seçilirse, anakütle hakkında o kadar güvenilir genellemeler yapılabilir. Yanlış veya eksik bir örneklem, yanıltıcı sonuçlara ve yanlış çıkarımlara yol açabilir.\nAnakütleden örneklem almanın çok çeşitli yolları vardır. En sık kullanılan iki yöntem basit rassal örnekleme ve tabakalı örneklemedir. Basit rassal örneklemede her birimin örneklemde olma olasılığı eşittir. Tabakalı örneklemede, anakütle belirli özelliklere göre homojen alt gruplara (tabakalara) ayrılır ve her tabaka içinde rassal örneklemler çekilir. Örneğin, bir okulda öğrenci gruplarını sınıf düzeylerine göre (9. sınıf, 10. sınıf, vb.) ayırarak her sınıftan belirli sayıda öğrenci seçilerek anakütlenin daha iyi temsil edilmesi sağlanabilir. Bunlara ek olarak, küme örneklemesi ve sistematik örnekleme gibi daha ileri örnekleme teknikleri de mevcuttur. Bu yöntemler, anakütlenin yapısına ve araştırmanın amacına bağlı olarak tercih edilebilir.\nBu bölümde inceleyeceğimiz araçlar veri kümesinin anakütle mi yoksa örneklem mi olduğuna göre değişebilir. Ancak çoğu kavram ve araç her iki veri türüne de uygulanabilir. Bazı kavram ve araçların tanımları anakütle ve örneklem için ayrı ayrı yapılmıştır.\nAnakütle ya da örneklem verileri bilgisayarlarda çeşitli biçimlerde işlenebilir (vektör, liste, matris, veri çerçeveleri vb). Pratikte yaygın olarak bir spreadsheet formatında ya da R’ın veri çerçeveleri formatında saklayabiliriz. Bir veri çerçevesi yapı olarak spreadsheet formatına benzer. Satırlarda gözlem birimleri ve sütunlarda değişkenler yer alır. Hücrelerde ise gözlem değerleri bulunur. Örneğin tüm hanehalklarından oluşan bir anakütleden çekilmiş 2000 gözlemli bir rassal örneklem:\n\nload(\"Data/hane_ornek.RData\")\nstr(hane_ornek)\n\nClasses 'tbl_df', 'tbl' and 'data.frame':   2000 obs. of  13 variables:\n $ hane_no                    : int  7373 6751 3699 9620 2483 6488 5909 7628 3576 1958 ...\n $ hane_kisi_sayisi           : num  3 1 3 4 6 3 2 2 3 2 ...\n $ yillik_gelir               : num  61379 57773 20679 66531 55288 ...\n $ aylik_gelir                : num  5115 4814 1723 5544 4607 ...\n $ aylik_harcama              : num  2992 3730 2187 2978 5178 ...\n $ tasarruf                   : chr  \"Evet\" \"Hayır\" \"Hayır\" \"Evet\" ...\n $ saglik_merkezi_erisim      : num  5 2 1 2 2 2 2 2 1 2 ...\n $ saglik_merkezi_erisim_olcek: chr  \"Çok zor\" \"Kolay\" \"Çok kolay\" \"Kolay\" ...\n $ zor_egitim_erisim          : num  5 2 1 2 2 2 2 2 1 2 ...\n $ zor_egitim_erisim_olcek    : chr  \"Çok zor\" \"Kolay\" \"Çok kolay\" \"Kolay\" ...\n $ sigara                     : num  1 2 2 1 1 1 1 2 2 1 ...\n $ ucretli_spor               : num  2 2 2 2 2 2 2 2 2 2 ...\n $ ozel_sigorta               : num  1 2 2 2 2 2 2 2 2 2 ...\n\n\nBu veri kümesinde hanede yaşayan kişi sayısı, hanenin yıllık ve aylık geliri ve harcaması, tasarruf yapıp yapmadığı gibi çeşitli bilgiler bulunmaktadır.\n\nhead(hane_ornek[,1:6])\n\n  hane_no hane_kisi_sayisi yillik_gelir aylik_gelir aylik_harcama tasarruf\n1    7373                3     61379.14    5114.928       2992.17     Evet\n2    6751                1     57772.75    4814.396       3729.79    Hayır\n3    3699                3     20679.15    1723.263       2186.61    Hayır\n4    9620                4     66531.14    5544.262       2978.47     Evet\n5    2483                6     55287.64    4607.303       5178.31    Hayır\n6    6488                3     50860.69    4238.391       2347.71    Hayır\n\n\nSütunlarda yer alan değişkenler gözlem birimlerine (hanehalklarına) ilişkin çeşitli bilgiler içerir. Hanehalkı bir adreste (konutta) yaşayan tüm bireylerden oluşan topluluk olarak tanımlanır. Yukarıdaki örnekte, birinci satırdaki 7373 numaralı hanehalkı 3 kişiden oluşmaktadır, yıllık geliri 61379 TL’dir ve tasarruf yapmaktadır. 2483 numaralı hanehalkı ise 6 kişiden oluşmaktadır, yıllık geliri 55287 TL’dir ve tasarruf yapmamaktadır.\nTipik olarak bu veriler gözlem birimleriyle yapılan anketlerle toplanır. İktisatta ve diğer sosyal bilim alanlarında kullanılan verilerin önemli bir kısmı, anket ve araştırma sonuçlarına dayanmaktadır. Türkiye’de bu tür verilerin en önemli kaynaklarından biri Türkiye İstatistik Kurumu (TÜİK)’dur. TÜİK, hem makro hem de mikro düzeyde veri üretmek için düzenli aralıklarla çeşitli anketler ve araştırmalar gerçekleştirir. Mikro veriler, bireyler, hanehalkları veya firmalar gibi küçük birimlerin davranışlarını anlamak için kullanılır ve iktisadi analizlerde yaygın olarak kullanılır.\nTÜİK’in iktisatta sıkça kullanılan mikro verileri topladığı başlıca anketler ve veri kümeleri şunlardır:\n\nHanehalkı İşgücü Araştırması (HİA): Türkiye’de işgücü piyasasına ilişkin istatistikleri üretmek amacıyla yapılan bu anket, işgücü, istihdam, işsizlik ve işgücüne katılım gibi temel göstergeleri sağlar.\nHanehalkı Bütçe Araştırması (HBA): Hanehalklarının gelir, tüketim ve harcama alışkanlıklarını ölçmek için yapılan bu anket, gelir dağılımı, yoksulluk ve tüketim eğilimleri gibi önemli konularda veri sunar. Hanehalkı tüketim sepeti ve ağırlıkları HBA ile belirlenir ve tüketici fiyat endeksinin hesaplanmasında kullanılır.\nGelir ve Yaşam Koşulları Araştırması (GYKA): Hanehalklarının gelir kaynakları, yaşam standartları ve yoksulluk durumlarına ilişkin bilgi sağlayan bu anket, gelir eşitsizliği, sosyal hareketlilik ve refah düzeyini ölçmeye yönelik detaylı veriler içerir.\nSanayi ve Hizmet İstatistikleri: Türkiye’deki firmaların üretim, istihdam, yatırım ve yenilikçilik faaliyetlerini ölçen bu araştırmalar, firma düzeyinde iktisadi analizler için değerli mikro veriler sağlar. Özellikle iktisadi büyüme, verimlilik analizleri ve sanayi dinamikleri üzerine yapılan çalışmalarda sıkça kullanılır.\n\nBu verilere ve TÜİK tarafından derlenen diğer veri tabanlarına ilişkin daha fazla bilgi için bkz. https://www.tuik.gov.tr/Kurumsal/Mikro_Veri."
  },
  {
    "objectID": "Betimsel.html#veri-türleri",
    "href": "Betimsel.html#veri-türleri",
    "title": "3  Betimsel İstatistik",
    "section": "3.2 Veri Türleri",
    "text": "3.2 Veri Türleri\nVeriler araştırma türüne göre deneysel veya gözlemsel olabilir. Verilerin toplanma biçimine ve zamanın nasıl ele alındığına göre de sınıflandırılabilir.\n\n3.2.1 Deneysel Veriler\nDeneysel veriler, araştırmacının bir veya daha fazla değişkeni kontrol ederek, bu değişkenlerin diğer değişkenler üzerindeki etkilerini gözlemlediği çalışmalardan elde edilir. Deneysel araştırmalarda temel amaç, belirli bir müdahalenin (örneğin yeni bir eğitim modelinin) bir hedef değişken ya da sonuç (örneğin sınav performansı) üzerindeki nedensel etkisini test etmektir.\nDeney süreci kabaca aşağıdaki adımlardan oluşur:\n\nHipotez geliştirme: Araştırmacı, deney tasarımına teorik modellerden veya önceki bilimsel çalışmalardan hareketle oluşturulan bir hipotezle başlar. Bu hipotez, bir veya daha fazla bağımsız değişkenin (müdahale edilen faktör) hedef değişken (sonuç) üzerindeki etkilerine ilişkin sınanabilir bir önermedir. Örneğin, bir eğitimci yeni bir eğitim tekniğinin ilköğretim düzeyindeki öğrencilerin akademik performansları üzerindeki etkisine ilişkin bir hipotez oluşturur. Bu hipotez yeni tekniğin etkisiz olduğunu söyleyebilir.\nGrupların belirlenmesi: Araştırma katılımcıları (denekler), genellikle ilgili anakütleden rastgele olarak, kontrol grubu ve deney grubu olmak üzere ikiye ayrılır. Kontrol grubu, müdahaleye maruz kalmazken, deney grubu müdahaleyi alır. Anakütleden tesadüfi örnekleme ile çekildiği varsayımı altında kontrol ve deney grupları her açıdan birbirine benzer olacaktır. Böylece hedef değişkende meydana gelen değişimler müdahaleye (tedaviye) atfedilebilir ve nedensel etki ölçülebilir.\nMüdahale (tedavi/manipülasyon): Tedavi ya da müdahaleden önce hedef değişken ölçümleri (örneğin öğrenci performansı) her iki grup için yapılır. Daha sonra deney grubuna müdahale edilir, yani araştırmacı bağımsız değişkeni değiştirir (örneğin, yeni bir eğitim yöntemi uygulamak). Kontrol grubu karşılaştırma amacıyla tedavi ya da müdahaleden etkilenmez.\nVeri toplama: Müdahaleden sonra, hedef değişken üzerindeki etkiler ölçülür (örneğin, sınav sonuçları) ve her iki grup için kaydedilir.\nSonuçların analizi: Müdahalenin etkilerini değerlendirmek için istatistiksel analizler yapılır ve hipotez test edilir. Eğer gerçekten tedavinin bir etkisi varsa, kontrol ve deney grupları arasında anlamlı bir fark oluşacaktır. Eğitim örneğimizde katılımcıların diğer özelliklerinin sabit kaldığı varsayımı altında deney grubunda ortalama performanstaki bir artış yeni programın etkisi olarak yorumlanabilir.\n\nBu derste istatistiksel çıkarsama başlığı altında, iki grup arasında ortalamada fark olup olmadığını nasıl sınayacağımızı öğreneceğiz.\n\n\n3.2.2 Gözlemsel Veriler\nGözlemsel veriler, araştırmacının herhangi bir müdahalede bulunmadığı, doğal süreçlerin izlendiği verilerden oluşur. Gözlemsel verilerin deneysel verilerden en önemli farkı araştırmacının deney ve kontrol gruplarını rassal bir şekilde oluşturamamasıdır. Gözlemsel veriler genellikle anket çalışmaları ve idari kayıtlardan elde edilen verilerdir. Bu tür araştırmalar, bazı özel durumlar dışında, nedensellik yerine değişkenler arasındaki ilişkileri incelemek için yapılır.\nGözlemsel verilerle yapılan çalışmalar, kontrol edilemeyen dış faktörlerin bulunabileceği ve bu nedenle nedensellikten ziyade korelasyonun ortaya çıkabileceği türden çalışmalardır. Örneğin gelir düzeyi ile eğitim seviyesi arasındaki ilişkiyi inceleyen bir araştırmacı, bireylerin eğitim düzeylerini değiştiremez; sadece mevcut veriler üzerinden gözlem yapar.\nAçıkça deney yapılmasa da, bazı kısıtlayıcı varsayımlar altında, gözlemsel veriler kullanılarak nedensel çıkarım yapılması mümkündür. Deney-benzeri veriler (quasi-experimental data) deney ve kontrol gruplarının kendiliğinden oluştuğu gözlemsel verilerdir. Örneğin, birbirine çok benzer iki şehirden biri belirli bir tarihte çok sayıda göç almış olsun. Göç alan şehir (deney grubu) göç almayan şehirle (kontrol grubu) karşılaştırılabilir; örneğin göçün istihdam ya da fiyatlar üzerindeki etkisi incelenebilir. Rassal atama yapılmadığı için (göç kendiliğnden oluşuyor) bu tür verilerden nedensel çıkarım yapılabilmesi için bazı özel varsayımların yapıldığı ileri düzey ekonometrik tekniklere ihtiyaç duyulur.\n\n\n3.2.3 Veri Organizasyonuna Göre\nVeriler ölçüm ve toplanma biçimine, ve zamanın niteliğine göre dört farklı başlık altında toplanabilir:\n\nYatay kesit veri (Cross-sectional data): Belirli bir zaman diliminde, birden fazla birimden (birey, hanehalkı, firma, şehir, vb.) toplanan verileri ifade eder. Yatay kesit verilerin kaynağı çoğunlukla idari kayıtlar ya da bilimsel anketlerdir. Bu anketleri araştırmacı kendi tasarlayacağı gibi diğer kurum ve kuruluşlar tarafından da hazırlanabilir. Örneğin, TÜİK tarafından her yıl yapılan hanehalkı ve fert araştırmaları (HHBA, HIA, vb) bir anket sonucunda farklı kişilere ait yaş, gelir ve eğitim düzeyi gibi bilgiler içerir. Gelir İdaresi Başkanlığı tarafından belirli bir yılda vergi mükelleflerinin bilanço ve gelir tablosu gibi finansal raporlarından oluşturulan idari kayıtlar da yatay kesit veri kümesi oluşturur.\nZaman serisi (Time series data): Aynı birimden, birbirini düzenli biçimde takip eden belirli zaman dilimlerinde alınan verileri ifade eder. Doğal olarak verilerin bir zaman sırası (kronoloji) vardır ve bu değiştirilemez. Örneğin, bir ülkenin yıllık GSYİH değerleri, aylık enflasyon oranları, bir finansal varlığın günlük değerleri ve getirileri zaman serisi verisidir. Bu veri türü özellikle finans ve makroiktisat alanlarında geliştirilen teori ve hipotezlerin değerlendirilmesinde, geleceğe dönük öngörü yapılmasında, zaman içerisindeki eğilimlerin ve dalgalanmaların analizinde kullanılır.\nBirleştirilmiş yatay kesit (Pooled cross-sectional data): Farklı zaman dilimlerinde toplanmış yatay kesit verilerinin birleştirilmesiyle oluşturulan veri kümesidir. İki boyutludur; hem zaman hem de yatay kesite ilişkin bilgi içerir ancak yatay kesit birimleri takip edilmez. Bu tür veriler, farklı dönemlerdeki birimlerin özelliklerini inceleme imkanı sunar. Örneğin, TÜİK hanehalkı bütçe anketleri her yıl ilgili anakütleden rassal örnekleme yöntemiyle farklı birimlerden veri toplar. Bu farklı hanelerden oluşan yatay kesit verileri bir araya getirerek birleştirilmiş yatay kesit veri kümesi elde edebiliriz. Böylece hanehalkı tüketiminin zaman içindeki eğilimini inceleyebiliriz.\nPanel veri (Panel or longitudinal data): Aynı birimlerin belirli zaman dilimlerinde gözlemlenmesiyle oluşturulan veri kümesidir. Örneğin, belirli bir grup bireyin yıllık gelir düzeyleri üzerinde yapılan bir araştırma panel veri olarak kabul edilir. Bir sektördeki firmaların zaman içindeki yatırım kararları ve buna ilişkin değişkenler bir panel veri kümesi oluşturur. Bu tür iki boyutlu veri, hem zaman içindeki değişimleri hem de birimler arası ilişkileri analiz etme olanağı sağlar.\n\n\nÖrnek 3.1 Panel veriye bir örnek olarak ülkelerarası Gapminder verisi gösterilebilir. Bu veri kümesinde, ülkelerin 5 yıllık dönemlerdeki yaşam beklentisi, nüfus, kişi başına düşen gayri safi yurt içi hasıla (GSYİH) gibi değişkenler yer alır. Bu verilerle ülkelerin yıllar boyunca gelişimini izlemek mümkündür.\n\n# install.packages(\"gapminder\") # önceden yüklenmeli\nlibrary(gapminder)\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n\nYukarıda bu veri kümesinin ilk 6 satırı yazdırılmıştır. Zaman boyutu year, birim boyutu country ile temsil edilmiştir. Ülkelerin her 5 yıllık dönem için bir gözlemi vardır (her değişken için). Birleşik veri yapısından görüldüğü gibi hem zaman hem de yatay kesit boyutunu bir arada içerir. Böylece hem zaman içindeki değişimi hem de birimler arasındaki ilişkileri inceleyebiliriz.\n\n\n\n\n\nŞekil 3.1: Bir panel veri örneği: Avrupa Ülkelerinde Kişi Başına Düşen GSYİH (1952-2007) (kaynak: Gapminder)\n\n\n\n\nŞekil 3.1 Gapminder panel veri kümesinde yer alan Avrupa ülkelerinin kişi başına GSYİH grafiğini göstermektedir. Panel veri bize zamansal değişimleri ve birimlerin arasındaki ilişkileri gözlemleme fırsatı sunar. Şekil 3.1 tüm ülkeleri arkaplanda gösterirken, sadece Türkiye’yi öne çıkarıyor. Böylece, Türkiye’yi diğer Avrupa ülkelerinin kişi başına düşen GSYİH verileri arasında açık bir şekilde görebiliyoruz."
  },
  {
    "objectID": "Betimsel.html#nicel-değişkenler",
    "href": "Betimsel.html#nicel-değişkenler",
    "title": "3  Betimsel İstatistik",
    "section": "3.3 Nicel Değişkenler",
    "text": "3.3 Nicel Değişkenler\nBetimsel analizde karşılaşılan değişkenler farklı özelliklere ve ölçüm düzeylerine sahip olabilir. Değişkenleri genel olarak nicel (kantitatif) ve nitel (kalitatif) olmak üzere ikiye ayırabiliriz. Nicel değişkenler kendi içinde aralık değişkenleri ve oransal değişkenler olmak üzere ikiye ayrılır.\n\n3.3.1 Aralık Ölçeği\nAralık (interval) değişkenleri, ölçülen değerler arasındaki “aralığın” veya “farkın” anlamlı olduğu değişkenlerdir. Bu tür değişkenler, sıralı bir şekilde düzenlenebilir ve aralarındaki farklar sabit ve anlamlıdır.\nAralık değişkenlerinin en önemli özelliklerinden biri, sıfır noktasının keyfi veya anlamsız olmasıdır. Yani, sıfır değeri mutlak bir sıfırı (yokluk, hiçlik) temsil etmez. Örneğin, sıcaklık ölçümleri (Celsius veya Fahrenheit) bir aralık değişkenidir; burada sıfır derece sıcaklığın yokluğunu ifade etmez.\nAralık değişkenleri üzerinde toplama ve çıkarma işlemleri anlamlıdır, ancak çarpma ve bölme işlemleri genellikle anlamlı değildir. Bu, sıfır noktasının keyfi olmasından kaynaklanır.\n1950-2023 döneminde bazı illerdeki ortalama sıcaklar şöyledir:\n\n# Bazı illerin yıllık ortalama sıcaklıkları, Celsius derece\n# 1950-2023 dönem ortalaması\ntempC &lt;- data.frame(il = c(\"İstanbul\", \"Ankara\", \"İzmir\", \"Ardahan\"), \n                    ort_sicaklik = c(15.3, 12, 18, 3.7))\ntempC\n\n        il ort_sicaklik\n1 İstanbul         15.3\n2   Ankara         12.0\n3    İzmir         18.0\n4  Ardahan          3.7\n\n\nYıllık sıcaklık ortalamalarına göre bu dört bölge arasında en sıcak il İzmir, en soğuk il ise Ardahan’dır. Ancak buradan hareketle İzmir’in Ardahan’dan yaklaşık 5 kat daha sıcak olduğunu söyleyemeyiz.\nSıfır noktasının keyfiliğini görmenin bir yolu Celsius-Fahrenheit dönüştürmesi yapmaktır. Sıcaklık \\(X\\) \\(^{\\circ}C\\) ise Fahrenheit cinsinden sıcaklık \\[\nY = 1.8X+32\n\\] olur. Buna göre santigrat cinsinden 0 noktası Fahrenheit cinsinden 32 \\(^{\\circ}F\\) dereceye karşılık gelir. Bu yeni değişkeni ekleyelim:\n\ntempC$Fahrenheit &lt;- 1.8*tempC$ort_sicaklik + 32\ntempC\n\n        il ort_sicaklik Fahrenheit\n1 İstanbul         15.3      59.54\n2   Ankara         12.0      53.60\n3    İzmir         18.0      64.40\n4  Ardahan          3.7      38.66\n\n\nSuyun donma noktası keyfi olarak tanımlandığı için değerlerin birbirlerine oranları alınmaz. Aralıklar anlamlı bir biçimde yorumlanabilir. Her iki sıcaklık derecesi cinsinden 0 noktasının sıcaklığın olmadığı anlamına gelmediğine dikkat ediniz.\n\n\n3.3.2 Oransal Ölçek\nOransal (ratio) değişkenler, hem aralıkların hem de oranların anlamlı olduğu nicel değişkenlerdir. Oransal ölçekli değişkenler anlamlı bir şekilde sıralanabilir, aralarındaki farklar ve oranlar yorumlanabilir. Oransal değişkenlerin en belirgin özelliği, mutlak sıfır noktasına sahip olmalarıdır. Bu, sıfır değerinin tam bir yokluk veya var olmama durumunu ifade ettiği anlamına gelir. Örneğin, ağırlık ve uzunluk ölçümleri oransal değişkenlere örnektir; sıfır ağırlık ya da sıfır uzunluk, hiçbir şeyin olmadığını gösterir.\nOransal değişkenler üzerinde tüm aritmetik işlemler (toplama, çıkarma, çarpma, bölme) anlamlıdır. Bu özellik, bu tür değişkenlerin analizinde daha geniş bir esneklik sağlar. İktisat, işletme, finans, ve sosyal bilim alanlarındaki bir çok değişken bu sınıfa girer. Örneğin hanelerin aylık gelir ve harcamaları oransal değişkenlerdir.\n\n\n# A tibble: 6 × 3\n  hane_no aylik_gelir aylik_harcama\n    &lt;int&gt;       &lt;dbl&gt;         &lt;dbl&gt;\n1    7373       5115.         2992.\n2    6751       4814.         3730.\n3    3699       1723.         2187.\n4    9620       5544.         2978.\n5    2483       4607.         5178.\n6    6488       4238.         2348.\n\n\nBuna göre ilk hane aylık ortalama gelirinin yaklaşık %58’ini harcamaktadır. 3699 nolu hane ise gelirinden daha fazlasını harcamaktadır (yaklaşık %27 daha fazla). Her iki değişken için 0 değeri mutlak yokluğu ifade etmektedir. Ancak veri kümesinde bazı gözlemlerde tam olarak 0 değerini almaları gerekmez. Bu örneklemde aylık ortalama gelir ve harcaması 0 olan bir hane yoktur."
  },
  {
    "objectID": "Betimsel.html#nitel-değişkenler",
    "href": "Betimsel.html#nitel-değişkenler",
    "title": "3  Betimsel İstatistik",
    "section": "3.4 Nitel Değişkenler",
    "text": "3.4 Nitel Değişkenler\nNitel (kalitatif) değişkenler nominal ve ordinal olmak üzere iki gruba ayrılır.\n\n3.4.1 Nominal ölçek\nNominal değişkenler, sıralama veya hiyerarşi içermeyen kategorik değişkenlerdir. Bu değişken türü, etiketler veya isimler kullanarak verileri kategorize eder. Örneğin, cinsiyet, kan grubu, medeni durum gibi değişkenler nominal ölçeklidir.\nHanehalkı harcama örnekleminde tasarruf değişkeni bu gruba girer:\n\nhead(hane_ornek[,c(\"hane_no\", \"aylik_gelir\", \"aylik_harcama\", \"tasarruf\")])\n\n# A tibble: 6 × 4\n  hane_no aylik_gelir aylik_harcama tasarruf\n    &lt;int&gt;       &lt;dbl&gt;         &lt;dbl&gt; &lt;chr&gt;   \n1    7373       5115.         2992. Evet    \n2    6751       4814.         3730. Hayır   \n3    3699       1723.         2187. Hayır   \n4    9620       5544.         2978. Evet    \n5    2483       4607.         5178. Hayır   \n6    6488       4238.         2348. Hayır   \n\n\nBu örneklemde tasarruf değişkeni iki karakterden oluşan değerler alır: hane tasarruf yapıyorsa “Evet”, yapmıyorsa “Hayır”.\n\ntable(hane_ornek$tasarruf)\n\n\n Evet Hayır \n  520  1480 \n\n\nBuna göre 520 hane tasarruf yapabiliyorken 1480 hane tasarruf yapmamaktadır.\nVeri kümelerinde bazı durumlarda nominal (kategorik) değişkenlere sayısal değerler atanabilir. Bu durum, özellikle veri analizi ve modelleme süreçlerinde dikkat edilmesi gereken önemli bir konudur. Nominal değişkenlerin sayısal değerler alması, yanlış analiz sonuçlarına yol açabilir. Bu nedenle, aşağıdaki noktalara dikkat edilmelidir:\n\nNominal Değişkenlerin Tanımı: Nominal değişkenler, belirli kategorilere ayrılmış veriler olup, bu kategoriler arasında herhangi bir sıralama veya sayısal ilişki yoktur. Örneğin: cinsiyet (Erkek = 1, Kadın = 2) veya renk (Kırmızı = 1, Mavi = 2, Yeşil = 3).\nSayısal Değerlerin Yanlış Yorumu: Nominal değişkenlere atanan sayısal değerler, sayısal işlemler için kullanılmamalıdır. Örneğin, “Erkek” ve “Kadın” için 1 ve 2 sayılarının atanması, bu sayıların arasında bir büyüklük veya sıralama ilişkisi olduğu anlamına gelmez.\nKategorik Verileri Kodlama: Kategorik verilerin sayısal modellere dahil edilmesi gerektiğinde, genellikle ikili (binary) temsil (“one-hot encoding”, “dummy variable”) gibi yöntemler kullanılır. Bu yöntemler, her kategoriyi ayrı bir ikili (0/1) değişken olarak temsil eder.\n\nÖrneğin hanehalkı veri kümesinde sigara değişkeni hanede sigara içen olup olmadığına ilişkin bilgi vermektedir:\n\nhane_sigara &lt;- head(hane_ornek[,c(\"hane_no\", \"sigara\")])\nhane_sigara\n\n# A tibble: 6 × 2\n  hane_no sigara\n    &lt;int&gt;  &lt;dbl&gt;\n1    7373      1\n2    6751      2\n3    3699      2\n4    9620      1\n5    2483      1\n6    6488      1\n\n\nBu değişken hanede sigara içen biri varsa 1, yoksa 2 değerini alan nominal bir değişkendir. Sigara’yı ikili (0/1) değişken biçiminde yeniden kodlayabiliriz:\n\n# \"sigara\" sütununu kategorik değişken olarak tanımlama\nhane_sigara$sigara_faktor &lt;- factor(hane_sigara$sigara, \n                                    levels = c(1, 2), \n                                    labels = c(\"Evet\", \"Hayır\")\n                                    )\n# kukla değişken olarak tanımla \nsigara_kukla &lt;- model.matrix(~ sigara_faktor - 1, data = hane_sigara)\ncbind(hane_sigara, sigara_kukla)\n\n  hane_no sigara sigara_faktor sigara_faktorEvet sigara_faktorHayır\n1    7373      1          Evet                 1                  0\n2    6751      2         Hayır                 0                  1\n3    3699      2         Hayır                 0                  1\n4    9620      1          Evet                 1                  0\n5    2483      1          Evet                 1                  0\n6    6488      1          Evet                 1                  0\n\n\nsigara_faktorEvet sigara içenlerin olduğu bir hanede 1, diğerlerinde 0 değerini almaktadır. sigara_faktorHayır ise sigara içilmeyen hanelerde 1, diğerlerinde ise 0 değerini almaktadır.\n\n\n3.4.2 Ordinal ölçek\nOrdinal değişkenler, sıralama veya derecelendirme içeren kategorik değişkenlerdir. Bu tür değişkenlerde, kategoriler arasında bir sıra veya hiyerarşi vardır. Ordinal değişkenler, sıralanabilir kategoriler içerir. Kategoriler arasındaki farklar sabit veya standart değildir. Örnek olarak, eğitim seviyesi, memnuniyet dereceleri, ürün kalite dereceleri verilebilir.\nÖrneğin memnuniyet bir ürünün değerlendirmesine ilişkin 6 gözlem içeren bir faktör değişkenidir:\n\nmemnuniyet &lt;- factor(c(\"Düşük\", \"Orta\", \"Yüksek\", \"Orta\", \"Orta\", \"Yüksek\"), \n                     order = TRUE, \n                     levels = c(\"Düşük\", \"Orta\", \"Yüksek\"))\nmemnuniyet\n\n[1] Düşük  Orta   Yüksek Orta   Orta   Yüksek\nLevels: Düşük &lt; Orta &lt; Yüksek\n\n\nHane verilerinde yer alan saglik_merkezi_erisim ve zor_egitim_erisim değişkenleri sıralı kategorik değişkenlerdir:\n\nveri &lt;- hane_ornek[1:10,c(\"saglik_merkezi_erisim\", \"saglik_merkezi_erisim_olcek\")]\nveri\n\n# A tibble: 10 × 2\n   saglik_merkezi_erisim saglik_merkezi_erisim_olcek\n                   &lt;dbl&gt; &lt;chr&gt;                      \n 1                     5 Çok zor                    \n 2                     2 Kolay                      \n 3                     1 Çok kolay                  \n 4                     2 Kolay                      \n 5                     2 Kolay                      \n 6                     2 Kolay                      \n 7                     2 Kolay                      \n 8                     2 Kolay                      \n 9                     1 Çok kolay                  \n10                     2 Kolay                      \n\n\nHanenin bulunduğu yerden sağlık merkezlerine erişimin kolaylığına ilişkin bilgi içeren bu değişken 5 seviyeden oluşur. Bu seviyeler 1-5 arasında sayısal değerlerle ifade edilmiştir. Buna göre 1 (Çok kolay), 2 (Kolay), 3 (Orta), 4 (Zor) ve 5 (Çok zor). saglik_merkezi_erisim_olcek bu bilgileri karakter formatında içerir. İstenirse bu değişken faktör değişkeni olarak da tanımlanabilir."
  },
  {
    "objectID": "Betimsel.html#betimsel-merkezi",
    "href": "Betimsel.html#betimsel-merkezi",
    "title": "3  Betimsel İstatistik",
    "section": "3.5 Merkezi Eğilim Ölçüleri",
    "text": "3.5 Merkezi Eğilim Ölçüleri\nBetimsel analizde, bir veri kümesinin genel eğilimini ya da merkezini özetleyen bazı temel ölçülere ihtiyaç duyarız. Bu ölçüler, veri kümesindeki değerlerin nerede toplandığını gösterir ve bize verinin genel yapısı hakkında bilgi verir. Merkezi eğilim ölçüleri, veri dağılımının tipik ya da ortalama bir değerini temsil etmeye çalışır. İstatistikte en yaygın kullanılan merkezi eğilim ölçüleri ortalama, medyan ve moddur.\n\n3.5.1 Ortalama\nOrtalama, genellikle bir veri kümesinin merkezini ya da “tipik” değerini gösteren en yaygın kullanılan ölçüdür. Gündelik hayatta da sıklıkla kullanılan bu kavram aslında iki farklı şekilde karşımıza çıkar: anakütle ortalaması ve örneklem ortalaması. Bu iki kavram birbirine benzer görünse de, aralarındaki farkları anlamak istatistiksel analizlerde oldukça önemlidir.\n\nTanım 3.5 (Anakütle ortalaması, \\(\\mu\\)) \\(N\\) elemanlı bir anakütleye ilişkin verilerin anakütle ortalaması, bu değerlerin toplamınının gözlem sayısına bölünmesiyle bulunur: \\[\n\\mu  =\\frac{1}{N}\\sum_{i=1}^N x_i\n\\tag{3.1}\\]\n\nAnakütle ortalaması, \\(\\mu\\), bir araştırmanın hedefi olan tüm birimlerden oluşan veri kümesinin ortalamasıdır. Örneğin, bir şehirde yaşayan tüm insanların ortalama geliri veya bir fabrikanın ürettiği tüm ürünlerin ortalama ağırlığı anakütle ortalamasını temsil eder. Anakütle ortalaması, teorik olarak tüm birimleri kapsayan bir hesaplamadır ve genellikle pratikte tam olarak gözlemlenemeyebilir.\n\nÖrnek 3.2 hane_anakutle.RData tüm hanehalklarına ilişkin bilgi içeren bir veri kümesi olsun. R’ın mean() fonksiyonunu kullanarak bu anakütlede ortalama hane büyüklüğünü, ortalama aylık geliri ve ortalama aylık harcamayı hesaplayalım:\n\nload(\"Data/hane_anakutle.RData\")\n# anakütle hacmi\nN &lt;- nrow(hane_anakutle)\nort_kisi &lt;- mean(hane_anakutle$hane_kisi_sayisi)\nort_gelir &lt;- mean(hane_anakutle$aylik_gelir)\nort_harcama &lt;- mean(hane_anakutle$aylik_harcama)\nanakutle_ort &lt;- cbind(N, ort_kisi, ort_gelir, ort_harcama)\nprint(anakutle_ort)\n\n         N ort_kisi ort_gelir ort_harcama\n[1,] 10000   3.5339  3532.476    3198.499\n\n\nAnakütlede ortalama hane büyüklüğü yaklaşık 3.5 kişi, ortalama aylık gelir yaklaşık 3532 TL, ve ortalama aylık harcama yaklaşık 3198 TL’dir.\n\n\nTanım 3.6 (Örneklem ortalaması, \\(\\bar{x}\\)) Eğer elimizde bir anakütleden çekilmiş \\(n\\) boyutlu bir örneklem varsa bu durumda örneklem ortalaması \\[\n\\bar{x}  =\\frac{1}{n}\\sum_{i=1}^n x_i\n\\tag{3.2}\\] olarak tanımlanır.\n\nBu tanımlar matematiksel olarak eşdeğer olsalar da yorumlarının farklı olduğuna dikkat ediniz. Örneklem ortalaması, anakütle yerine, anakütleyi temsil eden daha küçük bir alt küme olan örneklemden hesaplanan ortalamadır. Örneğin, bir şehirde yaşayan 1000 kişilik bir örneklem seçildiğinde, bu kişilerin ortalama geliri örneklem ortalaması olarak adlandırılır. Başka bir örneklem çekildiğinde \\(\\bar{x}\\) da değişir, yani sabit değildir (rassal değişken). İlerleyen bölümlerde örneklem ortalaması ile anakütle ortalamasına ilişkin nasıl çıkarım yapıldığını öğreneceğiz.\n\nÖrnek 3.3 Anakütleden 10 öğrenci rassal olarak seçilmiş ve GPA değerleri kaydedilmiştir: 3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9.\n\ngpa &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9)\nmean(gpa)\n\n[1] 2.94\n\n\nNotların örneklem ortalaması 2.94 olarak bulunmuştur. Bu değer anakütlenin merkezine ilişkin çıkarımlar yapmak amacıyla kullanılabilir.\n\nÖrneklem ortalaması tüm gözlem değerlerine eşit ağırlık (\\(1/n\\)) verir: \\[\n\\bar{x}  =\\frac{1}{n}\\sum_{i=1}^n x_i = \\frac{1}{n}x_1+\\frac{1}{n}x_2+\\ldots+\\frac{1}{n}x_n.\n\\]\nVerilerde çok büyük ya da çok küçük değerler varsa ortalama bu değerlere duyarlı olur (bkz. Şekil 3.2).\n\n\n\n\n\n\n\n(a) Ortalama (0 hariç)\n\n\n\n\n\n\n\n(b) Ortalama (0 dahil)\n\n\n\n\nŞekil 3.2: Merkezi eğilim: Ortalama\n\n\nŞekil 3.2 (a), notu 0 olan gözlem hariç tutulduğunda ortalamanın 71.5 olduğunu göstermektedir. Bu durumda, öğrencilerin çoğunluğunun aldığı puanlar 60-80 aralığındadır ve ortalama bu merkezi yansıtmaktadır. Şekil 3.2 (b) ise 0 puanının dahil edildiği durumu göstermektdir. Bu durumda uç değer ortalamayı aşağıya çekmiştir ve 65 olmuştur. Görüldüğü gibi sadece bir adet uç değer (0 puanı) bile ortalamanın ciddi şekilde düşmesine neden olmuştur.\n\nÖrnek 3.4 Hane anakütlesinden 200 gözlemlik bir rassal örneklem çekelim ve örneklem ortalamalarını hesaplayalım:\n\nset.seed(468) # replikasyon için \nind &lt;- sample(1:N, # 1,2,...,N tamsayı vektörü\n              size = 200, # çekilecek örneklem büyüklüğü\n              replace = FALSE # yerine koymadan çek\n              )\nhead(ind)\n\n[1] 9793 8772 7081 5267 3628 7585\n\n\nsample() fonksiyonunu kullanarak 1-10000 arasındaki tamsayı kümesinden tesadüfi olarak 200 tanesini yerine koymadan çektik ve ind nümerik (tamsayı) vektörünü oluşturduk. Daha sonra bu gözlemlere karşılık gelen satırları seçerek örneğimizi oluşturacağız:\n\nornek1 &lt;- hane_anakutle[ind,]\nhead(ornek1[,1:5])\n\n# A tibble: 6 × 5\n  hane_no hane_kisi_sayisi yillik_gelir aylik_gelir aylik_harcama\n    &lt;int&gt;            &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;         &lt;dbl&gt;\n1    9793                6       25243.       2104.         3087.\n2    8772                1       51826.       4319.         3458.\n3    7081                5       25784.       2149.         2241.\n4    5267                4       80636        6720.         3296.\n5    3628                2       62835.       5236.         2076.\n6    7585                3       46443.       3870.         2517.\n\n\nÖrneklem ortalamalarını hesaplayalım:\n\nn &lt;- nrow(ornek1)\nort_kisi &lt;- mean(ornek1$hane_kisi_sayisi)\nort_gelir &lt;- mean(ornek1$aylik_gelir)\nort_harcama &lt;- mean(ornek1$aylik_harcama)\norneklem_ort &lt;- cbind(n, ort_kisi, ort_gelir, ort_harcama)\nprint(orneklem_ort)\n\n       n ort_kisi ort_gelir ort_harcama\n[1,] 200     3.59  3668.868    3333.335\n\n\n200 haneden oluşan bu rassal örneklemdeki ortalama hane büyüklüğü 3.59, ortalama aylık gelir yaklaşık 3669 TL, ve ortalama aylık harcama yaklaşık 3333 TL’dir.\n\n\n\n3.5.2 Medyan\nMedyan, veriler küçükten büyüğe sıralandığında tam ortada yer alan değerdir. Eğer veri setinde çift sayıda gözlem varsa, ortadaki iki değerin ortalaması alınır.\n\nÖrnek 3.5 GPA verisi için medyanı hesaplayalım. Burada gözlem sayısı \\(n=10\\) olduğu için sıralanmış verilerde \\(n/2\\) ile \\(n/2 +1\\) pozisyonundaki değerlerin ortalamasıdır:\n\ngpa &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9)\nrbind(`sıra_no`=1:10, `sıralanmış_gpa`=sort(gpa))\n\n               [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\nsıra_no         1.0    2  3.0  4.0  5.0  6.0  7.0  8.0  9.0  10.0\nsıralanmış_gpa  1.8    2  2.5  2.8  2.9  3.1  3.2  3.5  3.7   3.9\n\n\n5 ve 6 pozisyonundaki değerlerin ortalaması \\((2.9+3.1)/2=3\\) medyanı verir. R programında median() fonksiyonu ile:\n\nmedian(gpa)\n\n[1] 3\n\n\nbulunabilir.\nGözlem sayısı, \\(n\\), tek sayı olduğunda sıralanmış veride tam ortadaki değer medyanı verir. Veri kümesine bir gözlem daha ekleyelim ve medyanı hesaplayalım.\n\ngpa2 &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9, 2.6)\nrbind(`sıra` = 1:11, `sıralı_gpa`=sort(gpa2))\n\n           [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11]\nsıra        1.0    2  3.0  4.0  5.0  6.0  7.0  8.0  9.0  10.0  11.0\nsıralı_gpa  1.8    2  2.5  2.6  2.8  2.9  3.1  3.2  3.5   3.7   3.9\n\n\n\\(n=11\\) olduğuna göre \\((n+1)/2=6\\) pozisyonundaki değer medyandır. Buna göre medyan 2.9 olur.\n\nmedian(gpa2)\n\n[1] 2.9\n\n\n\nMedyan ortalamaya kıyasla uç değerlere daha az duyarlıdır (bkz. Şekil 3.3).\n\n\n\n\n\n\n\n(a) Medyan (sıfırlar hariç)\n\n\n\n\n\n\n\n(b) Medyan (sıfırlar dahil)\n\n\n\n\nŞekil 3.3: Merkezi eğilim: Medyan\n\n\nŞekil 3.3 (a) öğrencilerin bir dersten aldıkları notların nokta grafiğini (her nokta bir öğrenciyi temsil etmektedir) ve merkeze ilişkin ölçüleri göstermektedir. Bu verilerde medyan 72.5 olarak hesaplanmıştır. Ortalamanın ise 71.5 olduğunu görüyoruz. Medyanın ve ortalamanın birbirine oldukça yakın olduğunu ve merkezi iyi yansıttılarını söyleyebiliriz.\nŞekil 3.3 (b) ise 0 değerini alan üç gözlemin dahil edildiği grafiği göstermektedir. Ortalamanın ciddi şekilde düşerek 55 olduğunu, medyanın ise 70’e gerilediğini görüyoruz. Burada ilginç olan nokta, uç değerlerin ortalamayı büyük ölçüde düşürmesine rağmen medyanın daha stabil kalmasıdır. Medyan, uç değerlere karşı daha dirençlidir çünkü veri setinin ortadaki değerine bakar, aşırı küçük veya aşırı büyük değerlerden etkilenmez.\n\nÖrnek 3.6 Hanehalkı anakütlesi ve örneklemde hane kişi sayısı, aylık gelir ve aylık harcama için medyanları hesaplayalım.\n\nmed_kisi &lt;- median(hane_anakutle$hane_kisi_sayisi)\nmed_gelir &lt;- median(hane_anakutle$aylik_gelir)\nmed_harcama &lt;- median(hane_anakutle$aylik_harcama)\nanakutle_medyan &lt;- cbind(med_kisi, med_gelir, med_harcama)\nanakutle_medyan\n\n     med_kisi med_gelir med_harcama\n[1,]        3  2800.215    2509.655\n\n\n\nmed_kisi &lt;- median(ornek1$hane_kisi_sayisi)\nmed_gelir &lt;- median(ornek1$aylik_gelir)\nmed_harcama &lt;- median(ornek1$aylik_harcama)\nornek_medyan &lt;- cbind(med_kisi, med_gelir, med_harcama)\nornek_medyan\n\n     med_kisi med_gelir med_harcama\n[1,]        3  3005.905     2531.81\n\n\nHem anakütlede hem de örneklemde medyan hane büyüklüğü 3 kişidir. Aylık gelir ve harcama değişkenlerinin örneklem medyanları anakütle medyanlarından biraz daha yüksektir.\n\n\n\n3.5.3 Mod (En sık değer)\nBir veri kümesinin modu en çok tekrar eden değer ya da değerler olarak tanımlanır. Verilerde mod olmayabilir ya da birden fazla olabilir.\n\nÖrnek 3.7 Aşağıdaki veri kümesinin modunu bulalım. R table() fonksiyonunu kullanarak her bir değerin kaç kere tekrar ettiğini görebiliriz:\n\nv1 &lt;- c(7, 2, 7, 3, 7, 1, 3, 4, 7, 3, 2, 2, 4, 8, 5, 6, 7, 9, 1)*10\ntable(v1)\n\nv1\n10 20 30 40 50 60 70 80 90 \n 2  3  3  2  1  1  5  1  1 \n\n\nSıklık değerlerini küçükten büyüğe doğru sıralayalım:\n\nsort(table(v1))\n\nv1\n50 60 80 90 10 40 20 30 70 \n 1  1  1  1  2  2  3  3  5 \n\n\nBuna göre mod veri kümesinde 5 kere tekrar eden 70 değeridir (bkz. Şekil 3.4).\n\n\n\n\n\nŞekil 3.4: Mod: en sık tekrarlayan değer\n\n\n\n\n\nRda en sık değeri hesaplayan bir komut yoktur. Kendi fonksiyonumuzu yazıp kullanabiliriz.\n\nÖrnek 3.8 Girdi olarak bir nümerik ya da faktör değişkenini alıp modu hesaplayan bir R fonksiyonu yazınız.\nÇözüm:\n\n# x vektörünün modunu hesaplayan fonksiyon\nmod &lt;- function(x) {\n  # Faktör değişkenleri karakter dizilerine dönüştür\n  if (is.factor(x)) {\n    x &lt;- as.character(x)\n  }\n  # sıklık tablosu oluştur\n  tablo &lt;- table(x)\n  max_freq &lt;- max(tablo)\n  modes &lt;- names(tablo)[which(tablo == max_freq)]\n  \n  # Eğer x numerikse, sonucu numerik yap\n  if (is.numeric(x)) {\n    return(as.numeric(modes))\n  }\n  \n  # Değilse, karakter olarak döndür\n  return(modes)\n}\n\nÖnceki örnekteki veri kümesine uygulayalım:\n\nmod(v1)\n\n[1] 70\n\n\n\n\nÖrnek 3.9 Bir değişkenin birden fazla modu olabilir. Örneğin aşağıdaki veri kümesinde\n\nv2 &lt;- c(3, 2, 5, 3, 7, 2, 3, 4, 5, 3, 3, 2, 4, 5, 5, 6, 7, 8, 5)*10\ntable(v2)\n\nv2\n20 30 40 50 60 70 80 \n 3  5  2  5  1  2  1 \n\n\n30 ve 50 değerleri beşer kere tekrar etmiştir.\n\nmod(v2)\n\n[1] 30 50\n\n\n\n\nÖrnek 3.10 Hane örnekleminde sağlık merkezlerine erişimin zorluğuna ilişkin bilgi içeren saglik_merkezi_erisim değişkeninin modunu hesaplayınız.\nFrekans tablosunu oluşturalım:\n\ntable(ornek1$saglik_merkezi_erisim)\n\n\n  1   2   3   4   5 \n 22 102  27  35  14 \n\n\nBuna göre en sık gözlenen değer 2’dir (Kolay).\n\ntable(ornek1$saglik_merkezi_erisim_olcek)\n\n\nÇok kolay   Çok zor     Kolay      Orta       Zor \n       22        14       102        27        35 \n\n\nsaglik_merkezi_erisim_olcek karakter değişkenini kullanarak bir faktör değişkeni oluşturalım:\n\n# Faktör değişkeni tanımlama\nornek1$saglik_merkezi_erisim_faktor &lt;- factor(\n  ornek1$saglik_merkezi_erisim_olcek,\n  levels = c(\"Çok kolay\", \"Kolay\", \"Orta\", \"Zor\", \"Çok zor\"),\n  ordered = TRUE\n)\n\nprint(levels(ornek1$saglik_merkezi_erisim_faktor))\n\n[1] \"Çok kolay\" \"Kolay\"     \"Orta\"      \"Zor\"       \"Çok zor\"  \n\n\nBu faktör değişkeninin sıklık tablosunu oluşturalım.\n\ntable(ornek1$saglik_merkezi_erisim_faktor)\n\n\nÇok kolay     Kolay      Orta       Zor   Çok zor \n       22       102        27        35        14 \n\n\nBu tablodan da görüleceği gibi en sık cevap “Kolay”’dır (bkz. Şekil 3.5).\n\n\n\n\n\nŞekil 3.5: En sık değer: sağlık merkezine erişimin kolaylığı\n\n\n\n\nYazdığımız fonksiyonu kullanarak da modu bulabiliriz:\n\nmod(ornek1$saglik_merkezi_erisim)\n\n[1] 2\n\nmod(ornek1$saglik_merkezi_erisim_olcek)\n\n[1] \"Kolay\"\n\n\n\nSıralı nominal (ordinal) değişkenler için mod ve medyan genellikle anlamlı bir bilgi içerir. Yukarıdaki sonuçlardan hareketle hanenin bulunduğu yerden sağlık merkezine erişimin zorluğuna ilişkin en çok verilen cevap “Kolay”’dır. Ancak nominal ve ordinal değişkenlerin nümerik temsilleri üzerinden ortalamaları yorumlarken dikkatli olmak gerekir. Özellikle sıralama aralıklarının eşit olmadığı durumlarda ortalamanın yanı sıra medyan ve modun kullanılması tercih edilebilir.\n\nÖrnek 3.11 Eğitim düzeyine ilişkin 6 gözlemli bir karakter vektörü verilmiş olsun:\n\ndiploma &lt;- c(\"İlkokul\", \"Lise\", \"Üniversite\", \"Lise\", \"Lise\", \"Üniversite\")\n\ndiploma karakter vektöründen hareketle bir faktör değişkeni oluşturalım:\n\negitim_seviyesi &lt;- factor(diploma,\n                          levels = c(\"İlkokul\", \"Lise\", \"Üniversite\"),\n                          ordered = TRUE)\n\negitim_seviyesi en son kazanılan diploma bilgisini içeren bir faktör değişkenidir:\n\negitim_seviyesi\n\n[1] İlkokul    Lise       Üniversite Lise       Lise       Üniversite\nLevels: İlkokul &lt; Lise &lt; Üniversite\n\n\nFaktör değişkeni sayısal değere dönüştürüldüğünde eğitim düzeyinin sırasını yansıtacak şekilde ilkokul için 1, lise için 2, üniversite için 3 değerini almaktadır.\n\nas.numeric(egitim_seviyesi)\n\n[1] 1 2 3 2 2 3\n\n\n\nortalama_egitim &lt;- mean(as.numeric(egitim_seviyesi))\nprint(ortalama_egitim)\n\n[1] 2.166667\n\n\n\nmod(egitim_seviyesi)\n\n[1] \"Lise\"\n\n\n\nmedian(as.numeric(egitim_seviyesi))\n\n[1] 2\n\n\nOrtadaki ve en sık rastlanan eğitim düzeyi “2” ya da “Lise”’dir.\n\n\n\n3.5.4 Geometrik ortalama\nGeometrik ortalama büyüme ve getiri oranları veya yüzdeleri hesaplamak için uygun bir ölçüdür. Aritmetik ortalamanın yanı sıra, özellikle büyüme oranlarının ortalamasını hesaplamada daha doğru sonuçlar verebilir. Geometrik ortalama gözlem değerlerinin çarpımının \\(n\\)-kökü olarak tanımlanır:\n\\[\n\\bar{x}_g = \\sqrt[n]{x_1\\cdot x_2\\cdot \\ldots\\cdot x_n}=\\left(x_1\\cdot x_2\\cdot \\ldots\\cdot x_n \\right)^{1/n}=\\left( \\prod_{i=1}^n x_i \\right)^{1/n}\n\\tag{3.3}\\] Bu formüldeki \\(\\prod_{i=1}^n x_i\\), 1’den \\(n\\) kadar tüm değerlerin çarpımını gösteren çarpım işlemcisidir.\nÖzellikle finansta getiri oranlarının geometrik ortalaması daha doğru bir şekilde ortalama davranışı yansıtabilir. \\(g_i\\) getiri oranı ise, geometrik ortalama \\[\n\\bar{x}_g = \\left( \\prod_{i=1}^n (1+g_i) \\right)^{1/n} -1\n\\tag{3.4}\\] olarak tanımlanır.\n\nÖrnek 3.12 Bir yatırımcı 1000 TL’lik anaparayı bir finansal varlığa yatırmıştır. Varlığın değeri 1. yılda 1200 TL, 2. yılda 1260 TL, 3. yılda 1134 TL, 4. yılda 1304.1 TL, ve 5. yılda 1238.9 TL olmuştur. Yıllık ortalama getiri yüzde kaçtır?\nÇözüm:\nÖnce her yılın getirisini hesaplayalım:\n\nyıl getirisi: \\[\n\\frac{1200}{1000} - 1 = 0.20\n\\]\nyıl getirisi: \\[\n\\frac{1260}{1200} - 1 = 0.05\n\\]\nyıl getirisi: \\[\n\\frac{1134}{1260} - 1 = -0.10\n\\]\nyıl getirisi: \\[\n\\frac{1304.1}{1134} - 1 = 0.15\n\\]\nyıl getirisi: \\[\n\\frac{1238.9}{1304.1} - 1 = -0.05\n\\] Aritmetik ortalamayı hesaplarsak \\[\n\\bar{x} = \\frac{0.2+0.05-0.10+0.15-0.05}{5}=0.05\n\\] buluruz. Yani aritmetik ortalamaya göre varlık her yıl ortalama \\(\\%5\\) büyümüştür. Ancak bu yanıltıcı olabilir.\n\n\n\nTablo 3.1: 1000 TL yatırımın yıllık getirileri ve dönem sonu değeri\n\n\n\n\n\n\n\n\n\n\n\nYıl\nDeğer\nGetiri\nAritmetik Ortalama Getiri\nAritmetik Ortalama Değer\nGeometrik Ortalama Getiri\nGeometrik Ortalama Değer\n\n\n\n\n1\n1200\n%20\n%5\n1050\n%4.378\n1043.8\n\n\n2\n1260\n%5\n%5\n1102.5\n%4.378\n1089.48\n\n\n3\n1134\n-%10\n%5\n1157.6\n%4.378\n1137.2\n\n\n4\n1304.1\n%15\n%5\n1215.5\n%4.378\n1186.9\n\n\n5\n1238.9\n-%5\n%5\n1276.28\n%4.378\n1238.9\n\n\n\n\nŞimdi geometrik ortalamayı hesaplayalım: \\[\n\\text{Geometrik Ortalama} = \\left( (1 + 0.20) \\times (1 + 0.05) \\times (1 - 0.10) \\times (1 + 0.15) \\times (1 - 0.05) \\right)^{\\frac{1}{5}} - 1\n\\] \\[\n= \\left( 1.20 \\times 1.05 \\times 0.90 \\times 1.15 \\times 0.95 \\right)^{\\frac{1}{5}} - 1= 1.2389^{\\frac{1}{5}} - 1=1.0438 - 1 = 0.0438\n\\]\n\n# \ng &lt;- c(1.2,1.05,0.9,1.15,0.95)\nprod(g)^(1/5)-1\n\n[1] 0.04377502\n\n\nBuna göre finansal varlık yılda ortalama yaklaşık \\(\\%4.38\\) büyümüştür. Bu aritmetik ortalamaya göre daha düşük bir ortalama getiriye işaret etmektedir.\nTablo 3.1 yatırımın yıllara göre getirilerini ve dönem sonu değerini göstermektedir. Her yıl bu ortalama oranda büyürse 5 yıl sonundaki değere ulaşılmaktadır. Aritmetik ortalama ile hesapladığımızda ise daha büyük bir değere ulaşıyoruz."
  },
  {
    "objectID": "Betimsel.html#sıra-istatistikleri-kantiller-ve-yüzdelikler",
    "href": "Betimsel.html#sıra-istatistikleri-kantiller-ve-yüzdelikler",
    "title": "3  Betimsel İstatistik",
    "section": "3.6 Sıra İstatistikleri, Kantiller ve Yüzdelikler",
    "text": "3.6 Sıra İstatistikleri, Kantiller ve Yüzdelikler\nVeriyi betimlemedeki en önemli araçlardan biri gözlemlerin küçükten büyüğe doğru sıralanmasıdır. Elimizde \\(x_1,x_2,\\ldots,x_n\\) gibi bir örneklem olduğunu düşünelim. Bu değerleri artan şekilde sıralayalım: \\[\nx_{(1)}, x_{(2)},x_{(3)},\\ldots,x_{(n)}\n\\] Burada sıralamada \\(k\\)nci konumda yer alan değer, \\(x_{(k)}\\), \\(k\\) sıra istatistiğidir. Örneğin \\(x_{(1)}\\) en küçük (minimum), \\(x_{(n)}\\) en büyük (maximum) değeri gösterir. \\[\nx_{(1)} = \\min(x_1,x_2,\\ldots,x_n)\n\\] \\[\nx_{(n)} = \\max(x_1,x_2,\\ldots,x_n)\n\\]\n\nÖrnek 3.13  \n\ngpa &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9)\nrbind(`sıra` = 1:10, `sıralı_gpa` = sort(gpa))\n\n           [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\nsıra        1.0    2  3.0  4.0  5.0  6.0  7.0  8.0  9.0  10.0\nsıralı_gpa  1.8    2  2.5  2.8  2.9  3.1  3.2  3.5  3.7   3.9\n\n\nBu sıralı veri kümesinden hareketle \\[\nx_{(1)} = 1.8,~~ x_{(2)}=2.0,~~ x_{(3)}=2.50,\\ldots,~~  x_{(10)}=3.9\n\\] yazabiliriz.\n\nSıra istatistiklerini kullanarak gözlemlerin yüzde kaçının küçük olacağı değerleri bulabiliriz. Gözlemlerin yaklaşık olarak \\(\\%(k/n)100\\) kadarı \\(x_{(k)}\\) değerinden küçük olacaktır. Bu istatistikler verinin değişkenliği ve yayılımı hakkında önemli bilgiler verebilir.\n\nTanım 3.7 (Kantil) Bir veri kümesini belirli sayıda eşit parçaya bölen değerlere kantil (quantile) adı verilir. Bu değerler, veri setindeki gözlemlerin belirli bir yüzdesinin altında veya üstünde kalan değerleri gösterir. Kantiller, sıra istatistikleri kullanılarak hesaplanır.\nUygulamada genellikle gözlemleri ikiye, dörde, ona ya da yüze bölen kantil değerleri kullanılır.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTanım 3.8 (Kartil (Çeyreklik, Dördebölen, Quartile)) Çeyreklikler, kantillerin özel bir durumudur ve gözlemleri dört eşit parçaya böler:\n\nBirinci Çeyrek (\\(Q_1\\)): Gözlemlerin %25’inin altında kaldığı değeri gösterir.\nİkinci Çeyrek (\\(Q_2\\)) veya Medyan: Gözlemlerin %50’sinin altında kaldığı değeri gösterir (medyan).\nÜçüncü Çeyrek (\\(Q_3\\)): Gözlemlerin %75’inin altında kaldığı değeri gösterir.\n\nBu çeyrekler, veri setinin yayılımı ve merkezi eğilimi hakkında bilgi verir. Çeyrekler, sıra istatistikleri kullanılarak hesaplanır.\nSıralanmış \\(n\\) gözlemli bir örneklemde, \\(k = \\frac{n+1}{4}=0.25(n+1)\\) olmak üzere, \\(j\\) kartili aşağıdaki formül ile bulunabilir:\n\\[\\begin{align*}\nQ_j &= \\begin{cases}\n    x_{(jk)} & \\text{ } jk \\text{ bir tamsayı ise} \\\\\n    x_{\\lfloor jk \\rfloor} + (jk - \\lfloor jk \\rfloor) \\cdot (x_{\\lfloor jk \\rfloor + 1} - x_{\\lfloor jk \\rfloor}) & \\text{  } jk \\text{ bir tamsayı değilse}\n    \\end{cases} \\\\\n\\end{align*}\\]\nBurada \\(\\lfloor \\cdot \\rfloor\\) bir sayıyı aşağı yuvarlayan taban fonksiyonunudur; \\(a=1.85\\) ise \\(\\lfloor a \\rfloor=1\\) olur. Yani \\(a\\)’dan büyük olmayan en büyük tamsayı 1’dir. Benzer şekilde tavan fonksiyonu, \\(\\lceil \\cdot \\rceil\\), tanımlanabilir. Tavan fonksiyonu \\(a\\)’dan küçük olmayan en küçük tamsayı olarak tanımlanır, bu durumda \\(\\lceil a \\rceil=2\\) olur.\n\n\nÖrnek 3.14 Örneğin 11 gözlemli bir veri kümesinde birinci kartili, \\(Q_1\\), hesaplamak istediğimizi düşünelim. \\(k=0.25(11+1)=3\\) bir tamsayı olduğu için birinci kartil \\(Q_1=x_{(k)}=x_{(3)}\\), yani üçüncü sıradaki gözlem olur.\nÖrnek olarak öğrenci notları verisini düşünelim:\n\ngpa &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9, 2.7)\nrbind(`sıra` = 1:11, `sıralı_gpa` = sort(gpa))\n\n           [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11]\nsıra        1.0    2  3.0  4.0  5.0  6.0  7.0  8.0  9.0  10.0  11.0\nsıralı_gpa  1.8    2  2.5  2.7  2.8  2.9  3.1  3.2  3.5   3.7   3.9\n\n\nBurada \\(x_{(3)}=2.5\\) olduğu için birinci kartil \\(Q_1=2.5\\) olarak bulunur.\n\n\nÖrnek 3.15 \\(n=10\\) gözlemli bir veri kümesinde ise \\(0.25(10+1)=2.75\\) bir tamsayı olmadığı için ikinci ve üçüncü sıradaki değerlerin interpolasyonu ile bulunur. Örneğin,\n\nx &lt;- c(1:10)*10\nrbind(`sıra` = 1:10, `sıralı_x` = sort(x))\n\n         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\nsıra        1    2    3    4    5    6    7    8    9    10\nsıralı_x   10   20   30   40   50   60   70   80   90   100\n\n\nveri kümesinde \\(j=1\\) kartili\n\\[\\begin{align*}\nQ_1 &= x_{(2)} + (2.75 - 2) \\cdot (x_{(3)} - x_{(2)})\\\\\n    &= 20+ 0.75\\cdot(30-20)\\\\\n    &= 27.5\n\\end{align*}\\]\nolur. Yani, 3. sıradaki gözlem (30) ile 2. sıradaki gözlem (20) arasındaki farkın dörtte üçünü (0.75*10=7.5) 2. sıradaki gözleme ekliyoruz.\nİkinci kartili hesaplayalım. \\(j=2\\), \\(jk=0.5(11)=5.5\\) ve \\(\\lfloor jk \\rfloor=5\\) olduğuna göre\n\\[\\begin{align*}\nQ_2 &= x_{(5)} + (5.5-5) \\cdot (x_{(6)} - x_{(5)})\\\\\n    &= 50+ 0.5\\cdot(60-50)\\\\\n    &= 55  \n\\end{align*}\\]\nbulunur. 5. ve 6. sıradaki gözlemlerin farkının yarısını alıyoruz (0.5*10=5) ve 5. gözleme ekliyoruz. Bu aynı zamanda medyandır.\nÜçüncü kartili, \\(Q_3\\), hesaplayalım. Bu durumda \\(j=3\\), \\(jk=0.75(11)=8.25\\) ve \\(\\lfloor jk \\rfloor=8\\) olduğuna göre\n\\[\\begin{align*}\nQ_3 &= x_{(8)} + (8.25-8) \\cdot (x_{(9)} - x_{(8)})\\\\\n    &= 80+ 0.25\\cdot(90-80)\\\\\n    &= 82.5  \n\\end{align*}\\]\nbulunur. 8. ve 9. sıradak gözlemlerin farkının dörtte birini 8. sıradaki gözleme ekliyoruz.\n\nR’da kantillerin ve çeyrekliklerin hesaplanmasında quantile() fonksiyonu kullanılabilir. Bu fonksiyon kantillerin hesaplanmasında farklı algoritmalar kullanır. Kullanıcılar type girdisini seçerek istedikleri algoritmaya göre kantilleri hesaplayabilirler. Bu algoritmalar interpolasyonun türüne göre farklılaşmaktadır. R’ın varsayılan algoritması Hyndman ve Fan yöntemini (type = 7) kullanmaktadır:\n\nquantile(x, probs = c(0.25, 0.5, 0.75), type = 7)\n\n 25%  50%  75% \n32.5 55.0 77.5 \n\n\nBu algoritma ile bulunan kartiller biraz farklıdır. Yukarıda açıkladığımız yöntemi uygulamak için type=6 opsiyonu kullanılabilir:\n\nquantile(x, probs = c(0.25, 0.5, 0.75), type = 6)\n\n 25%  50%  75% \n27.5 55.0 82.5 \n\n\nKüçük veri kümelerinde farklılık gösterse de bu algoritmalar daha büyük verilerde birbirine yaklaşık sonuçlar verir.\n\nÖrnek 3.16 Hanehalkı örnekleminde aylık gelirin kartillerini bulalım.\n\n# type=7\nquantile(hane_ornek$aylik_gelir, \n         probs = c(0.25, 0.5, 0.75), \n         type = 7)\n\n     25%      50%      75% \n1883.234 2863.117 4529.665 \n\n\n\n# type=6\nquantile(hane_ornek$aylik_gelir, \n         probs = c(0.25, 0.5, 0.75), \n         type = 6)\n\n     25%      50%      75% \n1883.143 2863.117 4531.803 \n\n\nHer iki yöntem birbirine benzer sonuçlar vermiştir. Buna göre hanehalklarının %25’inin aylık geliri 1883 TL’den, %50’sinin 2863 TL’den, ve %75’inin 4530 TL’den düşüktür.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTanım 3.9 (Yüzdelik) Yüzdelikler (percentile), kantillerin bir başka özel durumudur ve veri kümesini yüzdelik dilimlere böler. Örneğin, 90. yüzdelik dilim, veri setindeki gözlemlerin %90’ının bu değerin altında olduğunu belirtir.\nGenel olarak \\(p\\) yüzdeliği gözlemlerin yaklaşık %\\(p\\) kadarının küçük olduğu değere eşittir. Sıralanmış bir veri kümesinde \\((n+1)p/100\\) pozisyonundaki değer olarak bulunabilir. Benzer şekilde ondalıklar (decile) da tanımlanabilir.\n\n\nÖrnek 3.17 R’da yüzdelikleri hesaplamak için quantile() fonksiyonu kullanılabilir:\n\n# R ile kantil hesabı  \nquantile(hane_ornek$yillik_gelir, \n         probs = c(0.1, 0.25, 0.9))\n\n     10%      25%      90% \n15583.23 22598.81 81032.53 \n\n\nBuna göre hanelerin %10’unun yıllık geliri 15583.23 TL’den düşüktür. Benzer şekilde 22598.81 TL’den daha az yıllık geliri olan hanelerin oranı %25’dir. Hanelerin %90’ının geliri 81032.53 TL’den düşüktür."
  },
  {
    "objectID": "Betimsel.html#betimsel-degiskenlik",
    "href": "Betimsel.html#betimsel-degiskenlik",
    "title": "3  Betimsel İstatistik",
    "section": "3.7 Değişkenlik Ölçüleri",
    "text": "3.7 Değişkenlik Ölçüleri\nBir veri kümesindeki merkezi eğilimin yanı sıra, değerlerin ne kadar yayıldığını ya da birbirinden ne kadar farklı olduğunu belirlemek, verilerin doğasını anlamak için önemlidir. Değişkenlik ölçüleri, bu yayılımı ölçmek ve verilerin dağılımı hakkında bilgi sahibi olmak için kullanılır.\n\n\n\n\n\n\n\n(a) Birinci sınav sonucu, ortalama = 75\n\n\n\n\n\n\n\n(b) İkinci sınav sonucu, ortalama = 75\n\n\n\n\nŞekil 3.6: Ortalaması aynı değişkenliği farklı iki veri kümesi\n\n\nŞekil 3.6 iki sınav sonucuna ilişkin notları göstermektedir. Her iki sınavın ortalaması 75’dir. Birinci sınavın notları ortalama çevresinde daha dar bir aralıkta dağılmaktadır. İkinci sınavın sonuçları ise daha geniş bir aralıkta değerler almaktadır.\n\n3.7.1 Aralık\nAralık (range), verideki en büyük ve en küçük değer arasındaki farktır. Sıralanmış gözlemlerde \\[\n\\mbox{Aralık} = x_{(n)} - x_{(1)}\n\\] formülüyle kolayca bulunabilir. Şekil 3.6 verilerine göre birinci sınavın aralığı \\(85-65=20\\), ikinci sınavın aralığı ise \\(95-52=43\\) olarak bulunur. Ortalaması aynı olan bu veri kümelerinde aralığı daha geniş olan daha yüksek değişkenliğe sahiptir diyebiliriz.\nAralık ölçüsü değerlerin genel dağılımı hakkında bir fikir verse de tek başına çok kısıtlı bir bilgi sağlar. Özellikle uç değerlerin varlığı aralığı doğrudan etkiler. Örneğin notları 0 ve 100 olan iki öğrenci olsaydı aralık 100 olurdu. Uç değerlere fazla duyarlı olduğu için aralık yerine dağılımın yüzde ellilik orta kısmındaki değerler aralığına bakmak isteyebiliriz. Buna kartiller aralığı denir.\n\n\n3.7.2 Kartiller Aralığı\nKartiller, daha önce tanımladığımız gibi, gözlemlerin dört eşit parçaya bölündüğü noktalardır. Veriler küçükten büyüğe sıralandığında, ilk, ikinci (medyan), ve üçüncü kartiller hesaplanır. Kartiller aralığı üçüncü kartil ile birinci kartil arasındaki fark olarak tanımlanır:\n\\[\nIQR  = Q_3-Q_1\n\\tag{3.5}\\] Burada \\(Q_3\\) gözlemlerin %75’inin küçük olduğu üçüncü kartil değerini, \\(Q_1\\) ise %25’inin küçük olduğu birinci kartil değerini göstermektedir.\n\nÖrnek 3.18 13 öğrencinin not verisi aşağıdaki gibidir.\n\nnot &lt;- c(48, 55, 87, 58, 63, 77, 90, 68, 85, 80, 60, 52, 66)\nrbind(sira = 1:length(not), sirali_not = sort(not))\n\n           [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\nsira          1    2    3    4    5    6    7    8    9    10    11    12    13\nsirali_not   48   52   55   58   60   63   66   68   77    80    85    87    90\n\n\nBuna göre medyan (\\(Q_2\\)) yedinci sıradaki değerdir: 66. Birinci ve üçüncü kartiller ise\n\nkartiller &lt;- quantile(not, probs = c(0.25, 0.5, 0.75), type = 6)\nkartiller\n\n 25%  50%  75% \n56.5 66.0 82.5 \n\n\n\\(Q_1=56.5\\) ve \\(Q_3=82.5\\) olarak bulunur. Öğrencilerin %25’i 56.5’den, %75’i 82.5’den düşük not almıştır. Bu ikisi arasındaki fark\n\nIQR &lt;- kartiller[3]-kartiller[1]\nIQR\n\n75% \n 26 \n\n\nkartiller aralığıdır, \\(IQR=26\\). Bu dağılımın ortasında yer alan gözlemlerin aralığı olarak düşünülebilir. Özellikle uç değerlerin varlığı durumunda aralık yerine dördebölenler aralığı tercih edilebilir.\n\n\n\n3.7.3 Varyans\nVaryans bir veri kümesinde merkez çevresindeki değişkenliğin bir ölçüsüdür. Verilerin anakütleye ya da örnekleme ait olmasına göre farklı şekilde tanımlanır. Örneklem ya da anakütle varyansını hesaplamanın ilk adımı her bir gözlem değerinin ortalamaya olan uzaklığının hesaplanmasıdır.\nOrtalaması \\(\\mu=\\sum_i X_i/N\\) olan bir anakütlede gözlem değerlerini \\((X_1, X_2,\\ldots,X_N)\\) ile gösterelim. Tipik elemanı \\(X_i\\) olan bu gözlem kümesinde her bir değerin anakütle ortalaması ile farkını, \\(X_i-\\mu\\), hesaplayabiliriz. Böylece her bir gözlemin \\[\n(X_1-\\mu),(X_2-\\mu),(X_3-\\mu),\\ldots,(X_n-\\mu)\n\\] merkeze olan uzaklığını bulabiliriz. Fark pozitif işaretliyse bu gözlemin ortalamanın üzerinde, negatif işaretliyse ortalamanın altında olduğunu gösterir. Mutlak büyüklüğü ise uzaklığa ilişkin bilgi içerir.\nBu farklardan hareketle bir değişkenlik ölçütü oluşturabilir miyiz? Ortalamadan farkların toplamını aldığımızı düşünelim:\n\\[\\begin{align}\n\\nonumber \\sum_{i=1}^N (X_i-\\mu)&= (X_1-\\mu)+(X_2-\\mu)+(X_3-\\mu)+\\ldots +(X_N-\\mu)\\\\\n    &= (X_1+X_2+X_3+\\ldots+X_N)-N\\mu\\\\\n\\nonumber    &= N\\mu - N\\mu\\\\\n\\nonumber    &= 0\n\\end{align}\\]\nBurada \\(X_i\\)’lerin toplamının tanım gereği \\(N\\mu\\) olduğuna dikkat ediniz. Bu farkların toplamı, gözlem kümesi ne olursa olsun 0 olduğu için bir değişkenlik ölçütü olamaz.\nOrtalamadan büyük ve küçük olan gözlemlere eşit ağırlık veren bir değişkenlik ölçütü geliştirmenin bir yolu bu farkların karesini almaktır: \\[\n(X_1-\\mu)^2,(X_2-\\mu)^2,(X_3-\\mu)^2,\\ldots,(X_n-\\mu)^2\n\\] Ortalamadan uzaklığın karelerinin toplamından hareketle bir değişkenlik ölçütü oluşturabiliriz. Buna varyans adı verilir.\n\nTanım 3.10 (Anakütle varyansı, \\(\\sigma^2\\)) Anakütle varyansı, gözlem değerlerinin anakütle ortalamasına olan uzaklığının karelerinin toplamının gözlem sayısına bölünmesiyle bulunur: \\[\n\\sigma^2  =\\frac{1}{N}\\sum_{i=1}^N (X_i-\\mu)^2\n\\tag{3.6}\\]\nGenellikle \\(\\sigma^2\\) ile gösterilir ve sigma-kare şeklinde okunur. Varyans hiç bir zaman negatif olamaz. Tüm gözlemler aynı değere eşitse, yani sabit gözlemler için varyans 0 olur.\nAşağıda verilen kısa yol formülüyle ortalamadan farkları almadan da varyansı hesaplayabiliriz:\n\\[\\begin{align}\n\\nonumber \\sigma^2 &= \\frac{1}{N}\\sum_{i=1}^N (X_i-\\mu)^2\\\\\n\\nonumber    &= \\frac{1}{N}\\sum_{i=1}^N (X_i^2-2\\mu X_i + \\mu^2)\\\\\n    &= \\frac{1}{N}\\sum_{i=1}^N X_i^2-2\\mu \\frac{1}{N}\\sum_{i=1}^N X_i + \\frac{1}{N}N\\mu^2\\\\\n\\nonumber    &= \\frac{1}{N}\\sum_{i=1}^N X_i^2-2\\mu^2 + \\mu^2\\\\\n\\nonumber    &= \\frac{1}{N}\\sum_{i=1}^N X_i^2-\\mu^2\n\\end{align}\\]\n\n\nÖrnek 3.19 \\(X\\) değişkeninin anakütle değerleri \\((65,70,75,80,85,80,85,65,70)\\) olsun. Anakütle ortalaması \\(\\mu = 75\\) olmak üzere Tablo 3.2 varyans hesaplaması için gerekli büyüklükleri göstermektedir.\n\n\nTablo 3.2: \\(N=9\\) gözlemli bir anakütle için varyans hesaplama tablosu\n\n\n\n\n\n\n\n\n\n\\(i\\)\n\\(X_i\\)\n\\(X_i - \\mu\\)\n\\((X_i - \\mu)^2\\)\n\\(X_i^2\\)\n\n\n\n\n1\n65\n-10\n100\n4225\n\n\n2\n70\n-5\n25\n4900\n\n\n3\n75\n0\n0\n5625\n\n\n4\n80\n5\n25\n6400\n\n\n5\n85\n10\n100\n7225\n\n\n6\n80\n5\n25\n6400\n\n\n7\n85\n10\n100\n7225\n\n\n8\n65\n-10\n100\n4225\n\n\n9\n70\n-5\n25\n4900\n\n\nToplam\n675\n0\n500\n51125\n\n\n\n\nBu tablodan hareketle anakütle varyansı \\[\n\\sigma^2  =\\frac{1}{N}\\sum_{i=1}^N (X_i-\\mu)^2 = 500/9=55.56\n\\] olarak bulunur. Kısa yol formülünü kullanarak \\[\n\\sigma^2  = \\frac{1}{N}\\sum_{i=1}^N X_i^2-\\mu^2 = 51125/9 - 75^2 = 55.56\n\\] aynı sonuca ulaşılabilir.\n\nBenzer şekilde, örneklem varyansı gözlemlerin örneklem ortalamasından farkının kareler toplamına dayanır. Elimizde bir örneklem olduğu için anakütle ortalamasını \\(\\mu\\) bilmeyiz. Bu nedenle varyans formülünde \\(\\mu\\) için iyi bir tahminci kullanmamız gerekir. Anakütle ortalamasının yansız bir tahmincisi örneklem ortalamasıdır. Böylece ölçütümüzü her bir örneklem değerinin aritmetik ortalamaya olan uzaklığının karesine dayandırabiliriz.\n\\(n\\) gözlemli bir örneklemi \\((x_1, x_2,\\ldots,x_n)\\) ile gösterelim. Örneklem ortalaması \\(\\bar{x}=\\sum_i X_i/n\\) olsun. Tipik elemanı \\(x_i\\) olan bu gözlem kümesinde her bir değerin örneklem ortalaması ile farkını, \\(x_i-\\bar{x}\\), hesaplayabiliriz. Böylece her bir gözlemin \\[\n(x_1-\\bar{x}),(x_2-\\bar{x}),(x_3-\\bar{x}),\\ldots,(x_n-\\bar{x})\n\\] örneklem ortalamasına ne kadar uzak olduğunu bulabiliriz. Anakütle ortalamasından farkların toplamının 0 olduğunu göstermiştik. Örneklem ortalamasından farkların toplamının da 0 olduğu kolayca gösterilebilir:\n\\[\\begin{align}\n\\nonumber \\sum_{i=1}^n (x_i-\\bar{x})&= (x_1-\\bar{x})+(x_2-\\bar{x})+(x_3-\\bar{x})+\\ldots +(x_n-\\bar{x})\\\\\n    &= (x_1+x_2+x_3+\\ldots+x_N)-n \\bar{x}\\\\\n\\nonumber    &= n \\bar{x} - n \\bar{x}\\\\\n\\nonumber    &= 0\n\\end{align}\\]\n\nTanım 3.11 (Örneklem varyansı, \\(s^2\\)) \\(n\\) gözlemli bir veri kümesi için örneklem varyansı \\[\ns^2  =\\frac{1}{n-1}\\sum_{i=1}^N (x_i-\\bar{x})^2\n\\tag{3.7}\\] olarak tanımlanır. Burada fark karelerinin toplamının gözlem sayısına değil, \\(n-1\\)’e bölündüğüne dikkat ediniz. Daha sonra detalı olarak inceleyeceğimiz gibi, örneklem varyansı, \\(s^2\\), bilinmeyen anakütle varyansının sapmasız/yansız bir tahmincisidir.\n\nÖrneklem varyansının kısa yol formülü aşağıda türetilmiştir:\n\\[\\begin{align}\n\\nonumber s^2 &= \\frac{1}{n-1}\\sum_{i=1}^n (x_i-\\bar{x})^2\\\\\n\\nonumber     &= \\frac{1}{n-1}\\sum_{i=1}^n (x_i^2-2\\bar{x} x_i + \\bar{x}^2)\\\\\n    &= \\frac{1}{n-1}\\left( \\sum_{i=1}^n x_i^2 - 2\\bar{x} \\sum_{i=1}^n x_i + n\\bar{x}^2 \\right)\\\\\n\\nonumber    &= \\frac{1}{n-1}\\left( \\sum_{i=1}^n x_i^2-2n\\bar{x}^2 + n\\bar{x}^2 \\right)\\\\\n\\nonumber    &= \\frac{1}{n-1}\\left( \\sum_{i=1}^n x_i^2-n\\bar{x}^2 \\right)\n\\end{align}\\]\n\nÖrnek 3.20 Hanahalkı anakütlesinden 7 gözlemli bir örneklem rassal olarak çekilmiştir. Hanelerin aylık harcama tutarları TL cinsinden aşağıda verilmiştir: \\[\n\\{2600, 3600, 2150, 3600, 5250, 2350, 3200\\}\n\\]\n\n\nTablo 3.3: \\(n=7\\) gözlemli harcama örneklemi varyans hesaplama tablosu\n\n\n\n\n\n\n\n\n\n\\(i\\)\n\\(x_i\\)\n\\(x_i - \\bar{x}\\)\n\\((x_i - \\bar{x})^2\\)\n\\(x_i^2\\)\n\n\n\n\n1\n2600\n-650\n422500\n6760000\n\n\n2\n3600\n350\n122500\n12960000\n\n\n3\n2150\n-1100\n1210000\n4622500\n\n\n4\n3600\n350\n122500\n12960000\n\n\n5\n5250\n2000\n4000000\n27562500\n\n\n6\n2350\n-900\n810000\n5522500\n\n\n7\n3200\n-50\n2500\n10240000\n\n\nToplam\n22750\n0\n6690000\n80627500\n\n\n\n\nÖrneklem ortalaması \\(\\bar{x}=22750/7=3250\\) TL’dir. Örneklem varyansı \\[\ns^2  =\\frac{1}{n-1}\\sum_{i=1}^N (x_i-\\bar{x})^2=\\frac{1}{7-1}6,690,000.00=1,115,000\n\\] olarak bulunur. Kısa yol formülüyle de bulunabilir: \\[\\begin{align}\n\\nonumber s^2 &= \\frac{1}{n-1}\\left( \\sum_{i=1}^n x_i^2-n\\bar{x}^2 \\right)\\\\\n              &= \\frac{1}{7-1}\\left( 80627500-7\\cdot 3250^2\\right) \\\\\n\\nonumber    &= \\left( 80627500-73937500\\right)/6\\\\\n\\nonumber    &= 1115000\n\\end{align}\\]\nR ile harcama verisi için örneklem varyansını hesaplayalım:\n\nharcama &lt;- c(2600, 3600, 2150, 3600, 5250, 2350, 3200)\nort &lt;- mean(harcama)\ndf &lt;- data.frame(x = harcama,\n                 x_xbar = harcama-ort, \n                 x_xbar2 = (harcama-ort)^2, \n                 x2 = harcama^2)\ndf\n\n     x x_xbar x_xbar2       x2\n1 2600   -650  422500  6760000\n2 3600    350  122500 12960000\n3 2150  -1100 1210000  4622500\n4 3600    350  122500 12960000\n5 5250   2000 4000000 27562500\n6 2350   -900  810000  5522500\n7 3200    -50    2500 10240000\n\n\nBuradan örneklem varyansı\n\nn &lt;- length(harcama)\nsum(df[, \"x_xbar2\"])/(n-1)\n\n[1] 1115000\n\n\nolur. Örneklem varyansı var() fonksiyonu ile de bulunabilir:\n\nvar(harcama)\n\n[1] 1115000\n\n\n\nVaryans (örneklem ya da anakütle) sadece negatif olmayan değerler alır, yani ya 0 olur ya da pozitif değerler alır. Varyansın 0 olması verilerde değişkenlik olmadığı anlamına gelir (sabit değerlerden oluşur). Diğer taraftan varyansın mutlak yorumu karelerinin alınmasından dolayı zordur. Verilerin ölçü birimi cinsinden yorumu kolaylaştırmak için standart sapma kullanılabilir.\n\n\n3.7.4 Standart Sapma\nHarcama verisinde ortalama 3750 TL’ye karşılık varyans 1115000 olarak bulunmuştu. Bu değeri nasıl yorumlayabiliriz? Varyansın tanımında ortalamaya uzaklığın karesini aldığımız için değişkenin ölçü birimi ile yorum yapamayız. Orijinal ölçü birimine dönmek için varyansın karekökünü alabiliriz. Böylece hanelerin aylık harcaması 3750 TL ve standart sapması 1056 TL’dir diyebiliriz.\n\nTanım 3.12 (Anakütle standart sapması, \\(\\sigma\\)) Anakütle standart sapması, anakütle varyansının (pozitif) kareköküdür:\n\\[\n\\sigma = \\sqrt{\\sigma^2}  =\\sqrt{\\frac{1}{N}\\sum_{i=1}^N (X_i-\\mu)^2}\n\\tag{3.8}\\]\n\n\nTanım 3.13 (Örneklem standard sapması, \\(s\\)) Örneklem standart sapması, örneklem varyansının (pozitif) kareköküdür:\n\\[\ns = \\sqrt{s^2}  =\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^n (x_i-\\bar{x})^2}\n\\tag{3.9}\\]\n\nStandart sapma verilerin yayılımını daha kolay yorumlamak için kullanılabilir. Daha düşük bir standart sapma, verilerin ortalamaya daha yakın dağıldığını, yüksek bir standart sapma ise verilerin daha geniş bir aralıkta yayıldığını gösterir.\n\n\n3.7.5 Chebyshev Teoremi\nAnakütle standart sapmasını yorumlamanın bir yolu, verilerin ne kadarının ortalamadan kaç standart sapma uzağında olduğunun bulunmasıdır. Chebyshev teoremi ya da kuralı bunun için her anakütle için geçerli bir yol sunar.\n\nTeorem 3.1 (Chebyshev) Ortalaması \\(\\mu\\) ve standart sapması \\(\\sigma\\) olan bir anakütlede, \\(k&gt;1\\) olmak üzere, verilerin en az \\[\n\\% ~\\left( 1-\\frac{1}{k^2} \\right)\\times100\n\\tag{3.10}\\] kadarı ortalamadan en çok \\(k\\) standart sapma uzaklıktadır.\nÖrneğin, \\(k=2\\) ise, verilerin \\(\\%~100(1-1/4)=\\% ~75\\) kadarı 2 standart sapma içinde yer alır. Alt sınırı \\(\\mu-2\\sigma\\) ve üst sınırı \\(\\mu+2\\sigma\\) olan bir aralık belirlersek verilerin yaklaşık %75’i bu aralık içinde yer alacaktır.\nBenzer şekilde \\(k=3\\) ise verilerin %\\(100(1-1/9)\\) yani % 88.89 kadarı 3 standart sapma içinde yer alır.\n\nChebyshev teoreminin bu versiyonu simetrik olsun olmasın her dağılım için geçerlidir. Simetrik dağılımlar için daha spesifik bir aralık belirlenebilir.\n\nTeorem 3.2 (Chebyshev (Normal dağılım)) Çan biçimli simetrik dağılmış bir anakütle için verilerin yaklaşık\n\n\\(\\%68\\)’i ortalamadan \\(1\\) standart sapma uzaklıkta, yani \\(\\mu \\pm\\sigma\\) aralığı içinde,\n\n\\(\\%95\\)’i ortalamadan \\(2\\) standart sapma uzaklıkta, yani \\(\\mu \\pm 2\\sigma\\) aralığı içinde, ve\n\\(\\%99.7\\)’si ortalamadan \\(3\\) standart sapma uzaklıkta, yani \\(\\mu \\pm 3\\sigma\\) aralığı içinde\n\nyer alır.\n\n\n\n\n\n\nŞekil 3.7: Chebyshev teoreminin simetrik dağılım versiyonu: gözlemlerin %95’i 2 standart sapma içinde yer alır\n\n\n\n\n\nÖrnek 3.21 Ortalaması \\(\\mu=50\\) ve varyansı \\(\\sigma^2=100\\) olan normal dağılmış bir anakütlede gözlemlerin %95’i \\(\\mu-2\\sigma=30\\) ve \\(\\mu+2\\sigma=70\\) aralığı içinde yer alır. Şekil 3.7 bu aralığı göstermektedir. Gözlemlerin %68’i bir standart sapma içinde, yani, 40-60 aralığında değerler almaktadır. Gözlemlerin neredeyse tamamı 3 standart sapma içindedir (20-80).\n\n\nÖrnek 3.22 Türkiye’de il düzeyinde 2013 yılı mutluluk verilerini anakütle olarak düşünelim:\n\nload(\"Data/mutluluk.rda\")\nxbar &lt;- mean(mutluluk$mutluluk)\ns2 &lt;- var(mutluluk$mutluluk)\ns &lt;- sd(mutluluk$mutluluk)\nz &lt;- (mutluluk$mutluluk-xbar)/s\nc(ortalama = xbar, varyans = s2, stdsapma = s)\n\nortalama  varyans stdsapma \n61.15284 56.74699  7.53306 \n\n\nDağılım hakkında ek bir bilgimiz olmadığını varsayalım. Buna göre mutluluk düzeyi ortalaması 61 ve standart sapması 7.5 olan bir dağılıma sahiptir. Buradan hareketle gözlemlerin yaklaşık %75’inin 46 ile 76 arasında değerler aldığını söyleyebiliriz. Simetrik bir dağılıma sahipse verilerin %95’i bu aralıkta yer alacaktır.\n\n\n\n3.7.6 Değişkenlik Katsayısı\nDeğişkenlik katsayısı (coefficient of variation, CV) verideki değişkenliğin ortalamaya göre ne kadar büyük olduğunu gösteren istatistiksel bir ölçüttür. Varyasyon ya da değişkenlik katsayısı, standart sapmanın, ortalamaya oranının yüzdesi olarak hesaplanır ve genellikle yüzde ile ifade edilir. Bu katsayı, birimlerden bağımsız olduğu için farklı birimlere sahip verileri karşılaştırmak için uygundur.\n\nTanım 3.14 (Anakütle değişkenlik katsayısı) Anakütle standart sapmasının anakütle ortalamasına oranı olarak \\[\nCV = \\%100\\cdot \\frac{\\sigma}{\\mu}\n\\tag{3.11}\\] tanımlanır.\n\n\nTanım 3.15 (Örneklem değişkenlik katsayısı) Örneklem standart sapmasının örneklem ortalamasına oranı olarak \\[\n\\widehat{CV} = \\%100\\cdot \\frac{s}{\\bar{x}}\n\\tag{3.12}\\] tanımlanır.\n\nGörece yüksek bir CV gözlemlerin ortalama göre daha fazla değişkenliğe sahip olduğunu gösterir. Veriler daha yayıktır.\n\nÖrnek 3.23 Bir grup öğrencinin iki sınava ait sonuçları şöyledir: \\[\n\\mbox{1. Sınav:}\\quad \\bar{x}=74,\\quad s=8\n\\] \\[\n\\mbox{2. Sınav:}\\quad \\bar{x}=52,\\quad s=15\n\\] Örneklem değişkenlik katsayılarını bulun ve yorumlayın.\nÇözüm: \\[\n\\mbox{1. Sınav:}\\quad \\widehat{CV} = \\%100\\cdot \\frac{s}{\\bar{x}}=\\%100\\cdot \\frac{8}{74}=\\%10.81\n\\] \\[\n\\mbox{2. Sınav:}\\quad \\widehat{CV} = \\%100\\cdot \\frac{s}{\\bar{x}}=\\%100\\cdot \\frac{15}{52}=\\% 28.85\n\\] Buna göre 2. sınavın varyasyon katsayısı daha yüksektir. İkinci sınavda notlar ortalamaya göre daha büyük değişkenlik gösterir. Bu oranlar, standart sapmanın büyüklüğünün tek başına yeterli olmadığını vurgular. Örneğin, her iki sınavın standart sapması aynı olsaydı bile, ortalamaları farklı olduğu için değişkenlik katsayıları farklı olurdu. CV yardımıyla iki farklı sınavın performanslarını ve göreceli değişkenliklerini daha anlamlı bir şekilde kıyaslayabiliyoruz."
  },
  {
    "objectID": "Betimsel.html#betimsel-bicim",
    "href": "Betimsel.html#betimsel-bicim",
    "title": "3  Betimsel İstatistik",
    "section": "3.8 Biçim Ölçüleri",
    "text": "3.8 Biçim Ölçüleri\nVerilerin dağılımının simetrikliği, uçlarda ve merkezdeki davranışları (örneğin basıklık ve kuyruk kalınlığı), görsel araçlarla birlikte analiz edildiğinde anlamlı bilgiler sağlar. Bu bölümde, dağılımın şeklini betimleyen istatistikleri inceleyeceğiz. Özellikle histogram, kutu grafiği ve yoğunluk grafikleriyle çalışırken, bu biçim ölçülerini de kullanacağız.\n\n3.8.1 Çarpıklık\nÇarpıklık, bir dağılımın simetrik olup olmadığı hakkında bilgi verir. Simetrik bir dağılımın sağ ve sol tarafı birbirine benzer bir şekle sahiptir. Böyle bir dağılım için medyan değeri ortalama değerine eşittir.\nÖrneklem çarpıklık katsayısı \\[\nc = \\frac{m_3}{s^3} = \\frac{{\\frac{1}{n} \\sum_{i=1}^{n} (x_i - \\bar{x})^3}}{{\\left( \\frac{1}{n-1} \\sum_{i=1}^{n} (x_i - \\bar{x})^2 \\right)^{3/2}}}\n\\tag{3.13}\\] formülüyle hesaplanabilir. Burada \\(c\\) örneklem çarpıklık katsayısını, \\(\\bar{x}\\) örneklem ortalamasını, \\(s\\) örneklem standart sapmasını göstermektedir. Bu istatistiğin payında yer alan ifade \\(x\\)’in örneklemdeki üçüncü momentidir: \\(m_3\\). Payda her zaman pozitif değerler alırken, pay sıfır, negatif ya da pozitif olabilir: - \\(c=0\\) ise dağılım simetrik, - \\(c&gt;0\\) ise pozitif-çarpık ya da sağa çarpık, - \\(c&lt;0\\) ise sola-çarpıktır (negatif çarpık).\nSimetrik dağılımlar için \\[\nmedyan=ortalama=mod\n\\] olur.\nSağa çarpık dağılımlar için \\[\nortalama &gt; medyan\n\\] olur. Bunun nedeni sağa çarpık dağılımlarda büyük değerlerin fazla ağırlığa sahip olmasıdır.\nSola çarpık dağılımlar için ise \\[\nmedyan &gt; ortalama\n\\] olur.\n\nÖrnek 3.24 Aşağıdaki not ortalaması verisinde çarpıklık katsayısını R ile hesaplayınız.\n\ngpa &lt;- c(3.2, 1.8, 2.5, 2.8, 3.7, 3.1, 2.9, 2.0, 3.5, 3.9)\n\nDenklem 3.13 formülündeki bileşenleri hesaplayalım:\n\ngpa_ort &lt;- mean(gpa)\ngpa_medyan &lt;- median(gpa)\ngpa_s &lt;- sd(gpa)\ngpa_carpiklik &lt;- sum((gpa - gpa_ort)^3) / (length(gpa) * gpa_s^3)\ngpa_carpiklik\n\n[1] -0.2658297\n\n\nÇarpıklık katsayısı yaklaşık \\(-0.27\\) olarak bulundu. Bu değer negatif olduğu için dağılımın hafif sola çarpık olduğunu söyleyebiliriz. Örneklem ortalaması (2.94) medyandan (3) biraz daha küçük bulunmuştur.\nÖrneklem çarpıklık katsayısını hesaplayan aşağıdaki gibi bir R fonksiyonu da yazabiliriz:\n\n# örneklem çarpıklık katsayısı için fonksiyon\n# Bu fonksiyon, örneklemdeki üçüncü merkezi momenti ve standart sapmayı \n# kullanarak çarpıklık katsayısını hesaplar\ncarpiklik &lt;- function(x) {\n  n &lt;- length(x)\n  mean_x &lt;- mean(x)\n  sd_x &lt;- sd(x)\n  carpiklik &lt;- sum((x - mean_x)^3) / (n * sd_x^3)\n  return(carpiklik)\n}\n\nBu fonksiyonu kullanarak\n\ncarpiklik(gpa)\n\n[1] -0.2658297\n\n\nbuluruz.\n\n\nÖrnek 3.25 Yukarıda yazdığımız carpiklik() fonksiyonunu kullanarak hanahalkı örneklemindeki aylık harcama değişkeninin çarpıklık katsayısını hesaplayınız. Örneklem ortalaması ve medyanını da hesaplayınız ve yorumlayınız.\n\ncarpiklik(hane_ornek$aylik_harcama)\n\n[1] 5.98572\n\n\nAylık hane harcamasının çarpıklık katsayısı yaklaşık 5.99 olarak bulunmuştur. Bu değişken sağa çarpık bir dağılıma sahiptir. Başka bir ifadeyle hanelerin önemli bir kısmı düşük ve orta düzeydeki değerlerde yoğunlaşmıştır. Aylık harcama düzeyi arttıkça hane sayısı azalmaktadır.\nBöyle bir dağılımda göreceli yüksek ve uç değerlerin varlığı ortalamanın yüksek çıkmasına neden olabilir. Bu değişken için\n\nmean(hane_ornek$aylik_harcama)\n\n[1] 3261.177\n\nmedian(hane_ornek$aylik_harcama)\n\n[1] 2584.41\n\n\nörneklem ortalaması 3261.18 TL, örneklem medyanı ise 2584.41 TL olarak bulunmuştur. Tipik olarak ortalamanın medyandan büyük olması çarpıklığın pozitif olduğuna işaret eder. Genel olarak fertlerin ya da hanelerin gelir dağılımları sağ kuyruğun daha uzun olduğu, yani düşük ve orta gelirli gözlemlerin ağırlıkta olduğu bir davranışa sahiptir.\n\nÇarpıklık dağılımın simetrikliğine ilişkin bilgi verir. Basıklık katsayısı ise kuyrukların (merkezden uzak değerlerin) dağılımına ilişkin bilgi içerir. Bu ölçüleri dağılım grafiklerini incelerken tekrar ele alacağız.\n\n\n3.8.2 Basıklık\nBasıklık, bir dağılımın tepesi etrafında nasıl yoğunlaştığını ve kuyrukların ne kadar uzun olduğunu belirten bir ölçüdür. Örneklem basıklık katsayısı \\[\nb = \\frac{m_4}{s^4} = \\frac{\\frac{1}{n} \\sum_{i=1}^{n} (x_i - \\bar{x})^4}{\\left(\\frac{1}{n} \\sum_{i=1}^{n-1} (x_i - \\bar{x})^2\\right)^2}  \n\\tag{3.14}\\] formülüyle hesaplanabilir (büyük örneklemlerde). Burada \\(b\\) örneklem basıklık katsayısını, \\(\\bar{x}\\) örneklem ortalamasını, \\(s\\) örneklem standart sapmasını göstermektedir. Bu istatistiğin payında yer alan ifade \\(x\\)’in örneklemdeki dördüncü merkezi momentidir (\\(m_4\\)). Basıklık katsayısı her zaman pozitif değerler alır.\nBasıklık katsayısı genellikle normal dağılıma göre değerlendirilir. Normal dağılım için basıklık 3 değerini alır. Eğer \\(b&gt;3\\) ise dağılım normal dağılıma göre daha basıktır; yani kuyrukları daha kalındır (leptokurtosis). Tersi durumda \\(b&lt;3\\) ise dağılım normale göre daha ince kuyruklara sahiptir.\n\nÖrnek 3.26 Basıklık katsayısını hesaplayan kurtosis_hesapla() isimli bir R fonksiyonu yazınız. bist100.rda veri kümesinde yer alan getiri değişkeni için basıklık katsayısını hesaplayınız.\n\n# Basıklık (kurtosis) hesaplayan fonksiyon\nkurtosis_hesapla &lt;- function(x) {\n  n &lt;- length(x)\n  mean_x &lt;- mean(x)\n  m4 &lt;- sum((x - mean_x)^4) / n\n  s2 &lt;- sum((x - mean_x)^2) / n\n  kurtosis &lt;- m4 / (s2^2)\n  return(kurtosis)\n}\n\n\nload(\"Data/bist100.rda\")\nkurtosis_hesapla(bist100$getiri[-1])\n\n[1] 8.066876\n\n\nBasıklık katsayısı yaklaşık 8.07 olarak bulunmuştur. Bu değer 3’ten büyük olduğu için normal dağılıma göre getirinin daha kalın kuyruklara sahip olduğunu söyleyebiliriz."
  },
  {
    "objectID": "Betimsel.html#görsel-özet-araçlar",
    "href": "Betimsel.html#görsel-özet-araçlar",
    "title": "3  Betimsel İstatistik",
    "section": "3.9 Görsel özet araçlar",
    "text": "3.9 Görsel özet araçlar\nİncelediğimiz sayısal özet istatistikler, verilerin temel özelliklerini anlamak için önemli bir ilk adımdır. Bu istatistiklerin yanı sıra, verilerin görsel temsili karmaşık sayı yığınlarının daha iyi anlaşılmasını sağlar. Bu alt bölümde öğreneceğimiz görsel araçlar, sayısal özet bilgilerin yanı sıra verilerdeki eğilimleri, dağılımları ve ilişkileri daha açık bir şekilde ortaya koyar. Görsel araçlar, verilerin ardındaki hikayeyi anlatmada güçlü bir araç olarak işlev görür. Örneğin, bir histogram, verinin dağılımını etkili bir şekilde gösterirken, bir kutu grafiği (box plot), çeyrek değerleri ve olası uç değerleri görsel olarak sunar.\nVerilerin görselleştirilmesinde değişkenin türüne göre uygun araçların seçilmesi gerekir. Kategorik değişkenler için frekans tabloları, çubuk çizimleri, pasta çizimi gibi araçlar uygundur. Sürekli değişkenler için ise histogram, dal-yaprak çizim, kutu çizimi gibi araçlar kullanılabilir.\n\n3.9.1 Frekans tabloları ve kategorik değişkenler\nKategorik değişkenlerin gözlem kümesindeki sayısını ve oranını (yüzde) kolayca hesaplayarak bir tablo haline getirebilir ve görselleştirebiliriz. Kategorik (nominal ya da ordinal) değişkenlerin veri kümesindeki sıklığını ya da frekansını hesaplamak için R’da table() ve prop.table(table()) fonksiyonları kullanılabilir.\nÖrneğin, hanelerde sigara içenlerin sayısını ve oranını bulmak istediğimizi düşünelim. hane_ornek.RData verisinden hareketle\n\nload(\"Data/hane_ornek.RData\")\ntable(hane_ornek$sigara)\n\n\n   1    2 \n1036  964 \n\nprop.table(table(hane_ornek$sigara))\n\n\n    1     2 \n0.518 0.482 \n\n\nbulunur. Hanelerin yaklaşık % 51.8’inde (1036 hane) sigara içilmektedir (kategori = 1). Yaklaşık %48.2 hanede ise (964 hane) sigara içilmemektedir (kategori = 2).\nKategorik değişkenlerin frekansları çeşitli araçlarla görselleştirilebilir. Bunlardan biri çubuk çizimidir (barplot). Örneğin, sağlık merkezlerine erişim kolaylığını hanelerin nasıl değerlendirdiğini özetlemek istiyorsak, her kategorinin sıklığını gösteren bir tablo ve çubuk çizimi oluşturabiliriz:\n\nfrekans_tablosu &lt;- sort(\n  table(hane_ornek$saglik_merkezi_erisim_olcek), \n  decreasing = TRUE)\nfrekans_tablosu\n\n\n    Kolay       Zor Çok kolay      Orta   Çok zor \n      982       387       269       212       150 \n\n# Frekans (yüzdelik)\nfrekans_tablosu_yuzde &lt;- prop.table(frekans_tablosu) * 100\nfrekans_tablosu_yuzde\n\n\n    Kolay       Zor Çok kolay      Orta   Çok zor \n    49.10     19.35     13.45     10.60      7.50 \n\nbarplot(table(hane_ornek$saglik_merkezi_erisim_olcek), \n        ylim = c(0,1000))\n\n\n\n\nŞekil 3.8: Çubuk çizimi: sağlık merkezine erişimin kolaylığı\n\n\n\n\nŞekil 3.8 hanelerin sağlık merkezlerine erişim kolaylığına ilişkin 1-5 skalasında verdikleri cevapların çubuk çizimini göstermektedir. Bu grafiği sıklığa göre büyükten küçüğe sıralayarak çizebiliriz. Şekil 3.9 bu grafiği göstermektedir.\n\n# çubuk çizimi \nbarplot(frekans_tablosu, # sıklık tablosu\n        ylim = c(0,1000) # y ekseninin sınırları\n        )\ntext(x = barplot(frekans_tablosu, plot=FALSE), \n     y = frekans_tablosu, \n     label = paste0(round(frekans_tablosu_yuzde, 1), \"%\"), \n     pos = 1, cex = 0.8, col = \"black\")\n\n\n\n\nŞekil 3.9: Sıralanmış çubuk çizimi: sağlık merkezine erişimin kolaylığı\n\n\n\n\nBuna göre hanelerin %49.1’i sağlık merkezlerine ulaşımın kolay olduğunu düşünmektedir. Sağlık merkezlerine erişimin zor olduğunu düşünen hanelerin oranı %19.4, çok zor olduğunu söyleyen hanelerin oranı ise %7.5’tir.\nUygulamalarda yaygın olarak kullanılan başka bir grafik türü pasta grafiğidir. Şekil 3.10 pie() fonksiyonu ile çizilmiş örnek bir pasta grafiğini göstermektedir.\n\npie(frekans_tablosu, col = blues9)\n\n\n\n\nŞekil 3.10: Pasta grafiği: sağlık merkezine erişimin kolaylığı\n\n\n\n\nBelirli bir aralıkta herhangi bir değeri alabilen sayısal değişkenleri görselleştirmenin bir çok yöntemi mevcuttur. İzleyen alt bölümlerde bunları ele alacağız.\nFrekans (sıklık) tablosu özellikle büyük boyutlu sayısal verilerin yorumlanmasında yardımcı olabilir. Bunun için veriler az sayıda gruplara (sınıflara) ayrılır ve her bir sınıfa kaç gözlem düştüğü yani sıklığı (frekansı) hesaplanır. Bu sıklıklar yüzde olarak da ifade edilebilir.\n\nÖrnek 3.27 Bir eğitim seminerine katılanların yaşları kaydedilmiştir: \\[\nx=(22, 24, 27, 28, 30, 32, 35, 37, 40, 46).\n\\] Bu veriyi birbirine eşit 4 parçaya ayıralım. Birinci grup: 15-25 yaş grubu 15 yaşında ya da daha büyük ve 25 yaşından küçük bireyleri kapsar. İkinci grup 25-35 yaş grubudur ve 25 (dahil) ile 35 (hariç) yaşları arasındaki bireyleri kapsar. Tablo 3.4 bu yaş verilerinin sıklık tablosunu göstermektedir.\n\n\nTablo 3.4: Katılımcıların yaş dağılımı\n\n\n\n\n\n\n\n\n\nSınıf\nSıklık (frekans)\nYüzde Sıklık\nBirikimli sıklık\n% Birikimli sıklık\n\n\n\n\n15-25\n2\n% 20\n2\n% 20\n\n\n25-35\n4\n% 40\n6\n% 60\n\n\n35-45\n3\n% 30\n9\n% 90\n\n\n45-55\n1\n% 10\n10\n% 100\n\n\n\n\nFrekans tablosuna (Tablo 3.4) göre 2 gözlem, yani verilerin % 20’si 15-25 aralığında değerler almaktadır. Verilerin % 40’ı 25-35, % 30’u ise 35-45 aralığındadır.\nSayısal verilerin sınıflara ayrılmasında cut() fonksiyonu kullanılabilir:\n\nyas &lt;- c(22, 24, 27, 28, 30, 32, 35, 37, 40, 46)\nyas_grup &lt;- cut(yas, \n                breaks = c(15, 25, 35, 45,55), \n                right = FALSE # sağ sınır dahil değil\n                )\n\n# Gruplanmış yaş verisindeki frekansları hesaplayalım\nfrekanslar &lt;- table(yas_grup)\nprint(frekanslar)\n\nyas_grup\n[15,25) [25,35) [35,45) [45,55) \n      2       4       3       1 \n\nprop.table(frekanslar)\n\nyas_grup\n[15,25) [25,35) [35,45) [45,55) \n    0.2     0.4     0.3     0.1 \n\n\n\n\nÖrnek 3.28 32 gözlemden oluşan bir otomobil kümesinde araçların beygir gücü aşağıdaki gibidir:\n\nbeygir_gucu &lt;- mtcars$hp \n# Veriyi 4x8 tablo haline getirmek için yeniden şekillendir\nmatrix_data &lt;- matrix(beygir_gucu, nrow = 4, byrow = TRUE)\nmatrix_data\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]\n[1,]  110  110   93  110  175  105  245   62\n[2,]   95  123  123  180  180  180  205  215\n[3,]  230   66   52   65   97  150  150  245\n[4,]  175   66   91  113  264  175  335  109\n\n\n\nstripchart() fonksiyonunu kullanarak verilerin basit bir görsel özetini oluşturun.\nGözlemleri 5 sınıfa bölün ve frekans tablosunu hazırlayın. X ekseninde sınıflar Y ekseninde sınıf içindeki gözlemler olmak üzere bir çubuk çizimi hazırlayın.\n\nÇözüm\nŞekil 3.11 beygir gücü verisinin nokta grafiğini göstermektedir.\n\n# Verilerin basit bir görsel özetini stripchart() kullanarak oluştur\nstripchart(beygir_gucu, \n           method = \"stack\", \n           main = \" \", \n           xlab = \"Beygir Gücü\", \n           col = \"blue\", \n           pch = 16)\n\n\n\n\nŞekil 3.11: Nokta grafiği: otomobillerin beygir gücü\n\n\n\n\n\n# Beygir gücü verilerini 5 sınıfa bölmek için sınıf aralıklarını belirle\nbreaks &lt;- seq(min(beygir_gucu), max(beygir_gucu), length.out = 6)\nprint(breaks)\n\n[1]  52.0 108.6 165.2 221.8 278.4 335.0\n\n\nBu sınır noktalarını kullanarak frekans tablosunu oluşturalım:\n\n# Sınıf aralıklarına göre verileri sınıflandır\nbeygir_gucu_cut &lt;- cut(beygir_gucu, \n                       breaks = breaks, \n                       include.lowest = TRUE, # en alt sınırı dahil et\n                       right = FALSE          # sağ sınır hariç\n                       )\n\n# Frekans tablosunu oluştur\nfreq_table &lt;- table(beygir_gucu_cut)\nfreq_table\n\nbeygir_gucu_cut\n [52,109) [109,165) [165,222) [222,278) [278,335] \n       10         9         8         4         1 \n\n\n\\([52,109)\\) aralığında (52 dahil, 109 hariç) 10 gözlem, \\([109, 165)\\) aralığında (109 dahil, 165 hariç) 9 gözlem bulunmaktadır. Şekil 3.12 bu frekans tablosunun çubuk çizimini göstermektedir.\n\n# Frekans tablosunu çubuk grafiği olarak çiz\nbarplot(freq_table, \n        main = \" \", \n        xlab = \"Beygir Gücü Sınıfları\", \n        ylab = \"Frekans\", \n        col = \"lightblue\",  \n        space=0,\n        border = \"black\")\n\n\n\n\nŞekil 3.12: Beygir gücü frekans dağılımı: çubuk çizimi\n\n\n\n\nAralıklar x ekseninde ve frekanslar y ekseninde olacak şekilde çubuk yerine nokta ile de gösterebiliriz (bkz. Şekil 3.13):\n\n# Sınıf isimlerini al\nclasses &lt;- names(freq_table)\n\n# Çubuk grafiği yerine noktalar ve dikey çizgiler kullanarak grafiği çiz\nplot(as.numeric(freq_table), \n     type = \"p\", \n     main = \"\",\n     xlab = \"Beygir Gücü Sınıfları\", \n     ylab = \"Frekans\",\n     col = \"blue\", \n     pch = 19, \n     xaxt = \"n\", \n     ylim = c(0,12))\n\n# Dikey çizgiler ekle\nsegments(x0 = 1:length(freq_table), \n         y0 = 0, \n         x1 = 1:length(freq_table), \n         y1 = freq_table, \n         col = \"lightblue\", \n         lty = \"dashed\")\n\n# X ekseni etiketlerini ekle\naxis(1, at = 1:length(classes), labels = classes)\n\n# Frekans sayılarını noktaların üzerine yerleştir\ntext(x = 1:length(freq_table), \n     y = freq_table, \n     label = freq_table, \n     pos = 3, \n     cex = 0.8, \n     col = \"black\")\n\n\n\n\nŞekil 3.13: Beygir gücü frekans dağılımı\n\n\n\n\n\nSınıf sayısının ve genişliğinin frekans dağılımını doğrudan etkilediğine dikkat ediniz. Bu grafiğin özel bir versiyonu histogram adını alır. İzleyen bölümlerde bu grafik türünü inceleyeceğiz.\n\n\n3.9.2 Dal-ve-yaprak\nDal-ve-yaprak (Stem-and-Leaf) grafiği, genellikle az sayıda nümerik gözlemin dağılımını görselleştirmek için kullanılan bir yöntemdir. Bu grafik, veri değerlerini basit bir şekilde gruplandırarak dağılımın şeklini gösterir. Özellikle bilgisayar ya da hesaplama araçlarına erişimin olmadığı durumlarda, bir kağıt ve kalemle hızlıca çizilebilir.\nİki basamaklı örnek bir veri kümesinin Dal-ve-yaprak çizimi için aşağıdaki adımlar takip edilebilir:\n\nGözlem değerleri onlar ve birler basamağı alınarak “dal” ve “yaprak” olarak adlandırılan iki parçaya ayrılır. Örneğin 75 değeri için 7 dal ve 5 yaprak olarak alınabilir.\n“Dal” kısmı, veri değerlerinin onlar basamağından oluşur ve genellikle soldan sağa doğru sıralanır.\n“Yaprak” kısmı, veri değerlerinin birler basamağından oluşur ve her bir “dal” için bir dizi yaprak değeri içerir.\nHer bir “dal” için yaprak değerleri, sıralanmış bir şekilde yan yana yazılır.\nSon olarak, her bir dal ile yaprak değerleri arasında bir ayraç kullanılarak dal-ve-yaprak grafiği oluşturulur.\n\nDal ve yaprak kısımları verilerin değerlerine göre belirlenebilir. Örneğin üç basamaklı değerler alan bir veri kümesi için dal kısmı yüzler basamağı, yaprak kısmı birler basamağı olarak seçilebilir.\n\nÖrnek 3.29 Bir sınavdan alınan 100 üzerinden puanların dal-ve-yaprak çizimini oluşturalım:\n\nnot &lt;- c(48, 55, 87, 58, 63, 75, 95, 68, 75, 80, 60, 52, 66)\nstem(not)\n\n\n  The decimal point is 1 digit(s) to the right of the |\n\n  4 | 8\n  5 | 258\n  6 | 0368\n  7 | 55\n  8 | 07\n  9 | 5\n\n\nBurada | işaretinin solunda kalan değerler “stem” (dal), sağında kalan değerler ise “leaf” (yaprak) olarak isimlendirilir. Buna göre bir öğrenci 48, üç öğrenci 50-60 arasında, 4 öğrenci 60-70 arasında not almıştır. Notu 75 olan iki öğrenci vardır. Ayrıca en yüksek notun 95 olduğunu ve 80-90 arasında not alan 2 öğrenci olduğunu görüyoruz.\n\n\nÖrnek 3.30 Beygir gücü veri kümesinin dal-ve-yaprak çizimini hazırlayınız.\nBu veri kümesinde otomobillerin beygir gücü 52 ile 335 arasında değerler almaktadır. Onlar ve yüzler basamağını “dal”, birler basamağını “yaprak” olarak seçersek:\n\nstem(beygir_gucu, scale = 3)\n\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   5 | 2\n   6 | 2566\n   7 | \n   8 | \n   9 | 1357\n  10 | 59\n  11 | 0003\n  12 | 33\n  13 | \n  14 | \n  15 | 00\n  16 | \n  17 | 555\n  18 | 000\n  19 | \n  20 | 5\n  21 | 5\n  22 | \n  23 | 0\n  24 | 55\n  25 | \n  26 | 4\n  27 | \n  28 | \n  29 | \n  30 | \n  31 | \n  32 | \n  33 | 5\n\n\ngrafiğin olası tüm basamakları içerdiğini ve boşluklar oluştuğunu görüyoruz. scale = 1 seçeneğini kullanarak grafiği daha kompakt bir şekilde çizebiliriz:\n\nstem(beygir_gucu, scale = 1)\n\n\n  The decimal point is 2 digit(s) to the right of the |\n\n  0 | 5677799\n  1 | 0011111122\n  1 | 55888888\n  2 | 123\n  2 | 556\n  3 | 4\n\n\nBu grafikte “0” 95’ten küçük iki basamaklı gözlemleri içerir. Bu değerler, 52, 62, 65, 66, 66, 91, ve 93, grafikte sırasıyla, 5, 6, 7, 7, 7, 9, ve 9 “yaprak” değerleriyle gösterilmiştir. Benzer şekilde grafikte yer alan 1 dalları 95 (dahil) ile 200 (hariç) arasındaki gözlemleri temsil etmektedir. 1 dal ve 0 yaprak değeri yaklaşık olarak 100 beygir gücünü, 1 dal ve 1 yaprak değeri yaklaşık 110 beygir gücünü göstermektedir. Diğer değerlerde benzer şekilde yorumlanabilir. Sıralanmış veriler:\n\nsort(beygir_gucu)\n\n [1]  52  62  65  66  66  91  93  95  97 105 109 110 110 110 113 123 123 150 150\n[20] 175 175 175 180 180 180 205 215 230 245 245 264 335\n\n\nEn yüksek değerin (335) dal-ve-yaprak grafiğinde 3 dal ve 4 yaprak değeri ile temsil edildiğine dikkat ediniz.\n\n\nÖrnek 3.31 Türkiye’de il düzeyinde mutluluk endeksinin dal-ve-yaprak yaprak çizimi aşağıdaki gibidir:\n\nstem(mutluluk$mutluluk)\n\n\n  The decimal point is 1 digit(s) to the right of the |\n\n  4 | 2\n  4 | 69\n  5 | 0012222333344\n  5 | 56677777778888889999\n  6 | 0000011111123334444\n  6 | 55555666788\n  7 | 00011122344\n  7 | 5668\n\n\nBuna göre minimum ve maksimum mutluluk endeksleri sırasıyla 42 ve 78 olarak ölçülmüştür. Değerlerin 55-65 arasında yoğunlaştığı görülebilir. Stem basamağının tekrar etmesini istemiyorsak scale=0.5 seçilebilir:\n\nstem(mutluluk$mutluluk, scale=0.5)\n\n\n  The decimal point is 1 digit(s) to the right of the |\n\n  4 | 269\n  5 | 001222233334456677777778888889999\n  6 | 000001111112333444455555666788\n  7 | 000111223445668\n\n\nBu grafik verilerin sayısal özet istatistikleri ile birlikte yorumlanabilir:\n\nsummary(mutluluk$mutluluk)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  41.98   56.54   60.39   61.15   65.57   77.66 \n\n\n\n\n\n3.9.3 Histogram\nSayısal değerler alan bir veri kümesinin dağılımını görselleştirmenin yaygın olarak kullanılan bir yolu gözlemlerin sınıflara ayrılması ve her sınıfa giren gözlem sayısının grafiğinin çizilmesidir. Bu grafik türüne histogram adı verilir.\nHistogram, gözlemleri belirli aralıklara böler ve her aralıktaki gözlem sayısını ya da yüzdesini bir çubuk grafiği olarak gösterir. Bunun için genellikle aşağıdaki adımlar izlenir:\n\nDeğerler aralığını bulun.\nVerileri belirli ve (genel olarak) birbirine eşit sınıflara bölün (gruplayın).\nHer sınıftaki gözlem sayısını hesaplayın.\nHer sınıf ya da aralık için bir çubuk oluşturun ve yüksekliğini o aralıktaki gözlem sayısına (frekans ya da sıklık) göre ayarlayın.\n\n\n\n\n\n\n\n\n(a) Sınıf sayısı çok az\n\n\n\n\n\n\n\n(b) Sınıf sayısı çok fazla\n\n\n\n\nŞekil 3.14: Histogram sınıf sayısına duyarlıdır\n\n\nHistogram çizimindeki en önemli kararlardan biri sınıf ya da aralık sayısının belirlenmesidir. Şekil 3.14 bir veri kümesi için farklı sınıf sayısı tercihlerini göstermektedir. Sınıf sayısı gereğinden az belirlenirse verilerdeki dağılım bilgisi kaybolur. Benzer şekilde sınıf sayısı çok yüksek belirlenirse çubuk sayısı artar, sınıflar arasında boşluklar oluşur ve dağılım fazla inişli çıkışlı olur.\n\n\n\n\n\n\n\n(a) Sınıf sayısı = 6\n\n\n\n\n\n\n\n(b) Sınıf sayısı= 11\n\n\n\n\nŞekil 3.15: Histogramda ideal sınıf seçimi\n\n\nŞekil 3.15 aynı veri kümesi için sınıf sayısının 6 ve 11 olduğu iki durumu göstermektedir. Her iki sınıf sayısı için histogramın şeklinin yaklaşık olarak simetrik olduğunu görüyoruz. Sınıf sayısını ya da sınıf aralıklarını deneme yanılma ile belirlemek de mümkündür. Pratikte gözlem sayısına bağlı olarak sınıf sayısını belirleyebiliriz.\nHistogramdaki sınıf sayısını belirlemek için çeşitli yardımcı formüller önerilmiştir. Sturges formülü, verinin büyüklüğüne bağlı olarak histogramın optimal aralık sayısını aşağıdaki formüle göre hesaplar: \\[\nh = 1+\\log_2(n)\n\\] Burada \\(h\\) sınıf sayısı ve \\(n\\) gözlem sayısıdır. Bu formül,daha büyük veri kümeleri için daha fazla aralık ve daha küçük veri kümeleri için daha az aralık önerir.\nFreedman-Diaconis kuralı, bir histogramın aralık sayısını belirlemek için kullanılan bir başka yöntemdir. Bu kural, veri setinin dağılımını ve büyüklüğünü dikkate alarak histogram aralıklarını belirler. Freedman-Diaconis kuralı şu şekildedir:\n\\[\nbw = 2~IQR(x)~ n^{-1/3}\n\\] Burada \\(bw\\) aralık genişliğini, IQR ise kartiller aralığını temsil etmektedir (\\(Q_3-Q_1\\)).\nScott kuralı, bir histogramın aralık sayısını belirlemek için bir başka yöntemdir. Bu kural, veri setinin standart sapmasını ve büyüklüğünü dikkate alarak histogram aralıklarını belirler. \\[\nbw=3.5sd(x)n^{-1/3}\n\\] Burada \\(sd(x)\\) verilerin örneklem standart sapmasını göstermektedir.\n\n\n\n\n\nŞekil 3.16: Dağılımın çarpıklığı\n\n\n\n\nHistogramın (dağılımın) biçimi ile çarpıklık katsayısı (\\(c\\)) ilişkilidir. Çarpıklık katsayısı \\(c\\)’nin 0 olması dağılımın simetrik olduğu duruma işaret eder (Şekil 3.16 (b)). Çarpıklık katsayısının pozitif olması, yani pozitif çarpıklık, dağılımın sağ kuyruğunun sola göre daha uzun olduğunu gösterir (Şekil 3.16 (c)). Negatif çarpıklık ise sol kuyruğun sağa göre daha uzun olduğunu ifade eder (Şekil 3.16 (a)).\n\nÖrnek 3.32 Mutluluk verileri için önerilen sınıf sayılarını hesaplayalım:\n\nsturges &lt;- nclass.Sturges(mutluluk$mutluluk)\nscott &lt;- nclass.scott(mutluluk$mutluluk)\nfd &lt;- nclass.FD(mutluluk$mutluluk)\nc(Sturges = sturges, Scott=scott, Friedman_Diaconis=fd)\n\n          Sturges             Scott Friedman_Diaconis \n                8                 6                 9 \n\n\n\n\n\n\n\nŞekil 3.17: Histogram: Türkiye’de illerin mutluluk düzeyi\n\n\n\n\nŞekil 3.17 mutluluk endeksinin histogramını göstermektedir. Sınıf sayısı 8 olarak belirlenmiştir. Bu histograma göre mutluluk düzeyinin merkezi eğiliminin 60 civarında olduğunu söyleyebiliriz. Mutluluk düzeyi azaldıkça ve arttıkça frekans azalmaktadır. Bu veri kümesinde ortalama ve medyan, sırasıyla, 61 ve 60 olarak bulunmuştu:\n\nsummary(mutluluk$mutluluk)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  41.98   56.54   60.39   61.15   65.57   77.66 \n\n\nR’da histogramın çiziminde kullanılan istatistikleri görmek istersek aşağıdaki kodu çalıştırabiliriz:\n\nhist_mutluluk &lt;- hist(mutluluk$mutluluk, breaks = 8, plot = FALSE)\nstr(hist_mutluluk)\n\nList of 6\n $ breaks  : int [1:9] 40 45 50 55 60 65 70 75 80\n $ counts  : int [1:8] 1 3 13 22 19 9 10 4\n $ density : num [1:8] 0.00247 0.00741 0.0321 0.05432 0.04691 ...\n $ mids    : num [1:8] 42.5 47.5 52.5 57.5 62.5 67.5 72.5 77.5\n $ xname   : chr \"mutluluk$mutluluk\"\n $ equidist: logi TRUE\n - attr(*, \"class\")= chr \"histogram\"\n\n\nhist() fonksiyonu birbirine eşit aralıklı sınıfları (breaks) ve her sınıfa düşen gözlem sayısını (counts) gösterir. Sınıf (bin) genişliği 5 birimdir. Gri renkte gösterilen dikdörtgenin uzunluğu (y ekseni) o sınıfa düşen gözlem sayısı ile orantılıdır. Sınıf aralıklarının tanımı \\((a, b]\\) (right = TRUE) ya da \\([a,b)\\) (right = FALSE) olarak seçilebilir.\nYoğunluk (density) her sınıfa düşen gözlem sayısının (counts) gözlem sayısı ve sınıf genişliğine oranıyla bulunur. Örneğin 40-45 aralığında sadece 1 gözlem vardır. Toplam gözlem sayısı 81 ve sınıf genişliği 5 olduğu için yoğunluk\n\n1/81/5\n\n[1] 0.002469136\n\n\nyaklaşık 0.00247 olarak bulunur.\n$mids sınıfların orta noktalarını göstermektedir.\n\nSayısal değerler alan bir değişkenin yoğunluk grafiği düzleştirilmiş histogram olarak yorumlanabilir. Sınıf aralıkları daraldıkça (ya da sınıf sayısı arttıkça) histogram yoğunluk fonksiyonuna yaklaşır.\n\n\n\n\n\n\n\n(a)\n\n\n\n\n\n\n\n(b)\n\n\n\n\n\n\n\n\n\n(c)\n\n\n\n\n\n\n\n(d)\n\n\n\n\nŞekil 3.18: Düzleştirilmiş histogram ya da yoğunluk fonksiyonu\n\n\nŞekil 3.18 histogram ve yoğunluk arasındaki ilişkiyi göstermektedir. Bu grafikte sınıf sayısı arttıkça histogramın yoğunluk fonksiyonuna yaklaştığına dikkat ediniz (bkz. Şekil 3.18 (d)). Histogram yorumunda olduğu gibi dağılımın merkezine doğru yaklaştıkça yoğunluk artmaktadır. Görece daha az sıklıkta gerçekleşen değerler için yoğunluk daha düşük değerler alır. İzleyen bölümlerde buradan hareketle olasılıkları nasıl hesaplayabileceğimizi öğreneceğiz.\nR density() fonksiyonunu kullanarak yoğunlukları hesaplayabilir ve görselleştirebiliriz.\n\nÖrnek 3.33 İllere göre mutluluk endeksinin yoğunluk grafiğini çiziniz.\n\n\n\n\n\nŞekil 3.19: Yoğunluk grafiği: Türkiye’de illerin mutluluk düzeyi\n\n\n\n\nYoğunluk ya da düzleştirilmiş histograma göre gözlem değerleri 55-65 arasında “yoğunlaşmaktadır” (Şekil 3.19). Sol ve sağ kuyruklara doğru gidildikçe yoğunluk azalmaktadır.\nHistogram ve yoğunluğu birlikte de çizebiliriz (bkz. Şekil 3.20)\n\n\n\n\n\nŞekil 3.20: Yoğunluk grafiği: Türkiye’de illerin mutluluk düzeyi\n\n\n\n\nYoğunluk fonksiyonunun detayları için yardım dosyasına bakınız, ?density()\n\n\nÖrnek 3.34 hane_ornek veri kümesinde yer alan aylik_harcama değişkeninin histogramını ve yoğunluk fonksiyonunu çiziniz. Özet istatistiklerle birlikte yorumlayınız. Ayrıca, 0.1, 0.90, 0.95 ve 0.98 yüzdelik değerlerini hesaplayınız ve yorumlayınız.\n\nload(\"Data/hane_ornek.RData\")\n\nsturges &lt;- nclass.Sturges(hane_ornek$aylik_harcama)\nscott &lt;- nclass.scott(hane_ornek$aylik_harcama)\nfd &lt;- nclass.FD(hane_ornek$aylik_harcama)\nc(Sturges = sturges, Scott=scott, Friedman_Diaconis=fd)\n\n          Sturges             Scott Friedman_Diaconis \n               12                75               166 \n\n\nbreaks=100 ile histogramı ve yoğunluk fonksiyonunu çizelim. X ekseninin sınırlarını (0, 15000) olarak belirleyelim.\n\n\n\n\n\nŞekil 3.21: Hanehalkı harcama dağılımı\n\n\n\n\nÖzet istatistikler:\n\nsummary(hane_ornek$aylik_harcama)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    215    1708    2584    3261    3948   58994 \n\n\nHistogram ve yoğunluk grafiğinden de görüleceği gibi (bkz. Şekil 3.21) aylık hane harcamaları sağa çarpık bir dağılıma sahiptir. Örneklem ortalaması (3261 TL) medyan hane harcamasından (2584 TL) daha büyüktür. Hanelerinin yaklaşık % 75’inin aylık harcaması 3948 TL’den küçüktür.\n\nquantile(hane_ornek$aylik_harcama, p=c(0.1, 0.9, 0.95, 0.98))\n\n      10%       90%       95%       98% \n 1108.229  5968.419  7802.190 10869.265 \n\n\nHanelerin % 10’u aylık yaklaşık 1108 TL’den daha az harcamaktadır. Dağılımın diğer ucunda, hanelerin % 5’i 7802 TL’den daha fazla, % 2’si ise 10869 TL’den daha fazla harcamaktadır.\n\n\n\n\n\n\n\n\n(a) Basık (platykurtic) dağılım\n\n\n\n\n\n\n\n(b) Normal (mesokurtic) dağılım\n\n\n\n\n\n\n\n(c) Sivri (leptokurtic) dağılım\n\n\n\n\nŞekil 3.22: Dağılımların basıklığı\n\n\nVeri dağılımlarını tanımlarken önemli bir özellik de basıklıktır. Basıklık, dağılımın tepe noktasının sivriliği ya da basıklığı ile ilgilidir. Yani dağılımın uç değerlerde (kuyruklarda) yoğunlaşıp yoğunlaşmadığını gösterir. Basıklık, dağılımların uç noktalarındaki gözlem sayısına göre 3 temel kategoriye ayrılabilir:\n\nDüz Dağılımlar (Platykurtic): Basık dağılımlar, merkezi bölge dışında çok fazla gözlem bulunmayan ve uç değerlerin sayısının az olduğu dağılımlardır. Bu tür dağılımlarda histogramın tepe noktası geniş ve düz olur (Şekil 3.22 (a)). Böyle dağılımlarda kurtosis (basıklık) katsayısı 3’ten küçüktür.\nNormal Dağılımlar (Mesokurtic): Bir normal dağılım, basıklık açısından ortalama bir durumu gösterir. Dağılımın tepe noktası çok sivri ya da çok basık değildir. Normal dağılımın basıklık değeri 3 olarak tanımlıdır (Şekil 3.22 (b)).\nSivri Dağılımlar (Leptokurtic): Uç değerlerde daha fazla gözlem içeren, tepe noktası oldukça sivri olan dağılımlar ise leptokurtik olarak adlandırılır. Bu dağılımlarda uç bölgelerdeki veriler normal dağılıma göre daha yoğundur. Böyle dağılımlar için kurtosis katsayısı 3’ten büyüktür (Şekil 3.22 (c)).\n\n\n\n\n\n\nŞekil 3.23: BIST100 endeksinin günlük getirilerinin histogramı\n\n\n\n\nBasıklık kavramı dağılımın kuyruklardaki ve merkezdeki davranışını incelemede önemlidir. Özellikle verinin uçlardaki davranışı, çeşitli analizler için önemli olabilir. Örneğin bazı finansal varlık getirilerinin dağılımı kalın kuyruklu (leptokurtik) olma eğilimindedir. Böyle bir dağılım, normal dağılıma göre daha sivri bir tepe ve daha kalın kuyruklara sahip olur. Şekil 3.23 BIST100 endeksinin günlük getirilerinin histogramını göstermektedir. Karşılaştırma amacıyla normal dağılımın yoğunluğu da grafiğe eklenmiştir. Bu getiriler için kurtosis değeri 8.07 olarak bulunmuştur. Normal dağılıma kıyasla, çoğu getiri değerinin ortalamaya yakın gerçekleştiğini, ancak uç olayların (aşırı kazanç veya kayıplar) normalden daha sık görüldüğünü söyleyebiliriz.\n\n\n\n\n\n\n\n(a) Tek tepeli (Unimodal) dağılım\n\n\n\n\n\n\n\n(b) Çift tepeli (Bimodal) dağılım\n\n\n\n\n\n\n\n(c) Çok tepeli (Multimodal) dağılım\n\n\n\n\nŞekil 3.24: Dağılımların modalliği\n\n\nHistogram ya da yoğunluk grafikleri dağılımın simetriklik, sağa ve sola çarpıklık gibi özelliklerine ilişkin önemli bilgiler verir. Histogramların önemli bir başka özelliği de modalliktir. Modallik, dağılımda kaç tane tepe noktası (mod) olduğunu gösterir ve verilerin farklı alt gruplara bölünmesi gerektiğine işaret edebilir.\nTek tepeli (unimodal) bir dağılımda, Şekil 3.24 (a) da görüldüğü gibi, histogramın yalnızca bir belirgin tepe noktası vardır. Verinin büyük çoğunluğu belirli bir değerde toplanmıştır. İki tepe noktası olan dağılımlar çift tepeli olarak adlandırılır (Şekil 3.24 (b)). Bu tür dağılımlar, genellikle verinin iki farklı grup veya popülasyondan geldiğini gösterebilir. Örneğin, erkek ve kadın bireylerin boy dağılımı çift tepeli olabilir. Üç veya daha fazla tepe noktası olan dağılımlar çok modlu olarak adlandırılır (Şekil 3.24 (c)). Bu durum, verinin farklı alt gruplardan oluştuğunu veya karmaşık bir yapıya sahip olduğunu gösterebilir.\n\n\n3.9.4 Kutu çizimi\nKutu ya da kutu-bıyık (box-whiskers) çizimi olarak da isimlendirilen bu grafik verinin dağılımı hakkında bilgi verir ve beş-sayı özetinden hareketle oluşturulur. Beş-sayı özeti aşağıdaki bileşenlerden oluşur:\n\nMinimum: Verideki en küçük değer, \\(x_{(1)}\\) sıra istatistiği.\nBirinci Çeyrek (Q1): Verinin %25’inin altında kalan değeri gösterir (birinci kartil).\nMedyan (Q2): Verinin ortasındaki değeri temsil eder. Verinin %50’si bu değerin altındadır (ikinci kartil).\nÜçüncü Çeyrek (Q3): Verinin %75’inin altında kalan değeri gösterir (üçüncü kartil).\nMaksimum: Verideki en büyük değer.\n\n\n\n\n\n\nŞekil 3.25: Kutu grafiği (uç değerlerin olmadığı durum)\n\n\n\n\nŞekil 3.25 uç değerlerin (outlier) olmadığı durum için örnek bir kutu çizimini göstermektedir. Bu grafiğin bileşenleri şunlardır:\n\nKutu: Q1 ve Q3 arasında yer alır ve verinin ortanca %50’sini içerir. Kutunun içinde yer alan çizgi (dikey ya da yatay olabilir) medyanı gösterir. Buradan hareketle merkezi aralığı (IQR) kolayca değerlendirebiliriz.\nBıyıklar (Whiskers): Kutunun her iki ucundan minimum ve maksimum değerlere kadar uzanır. Eğer tüm gözlem değerleri \\(1.5\\times IQR\\) aralığı içindeyse alt ve üst bıyık noktaları aynı zamanda minimum ve maksimum değerlerdir. Ancak bu aralığın dışında değerler varsa bunlar ayrıca gösterilir.\nUç (aşırı) Değerler (Outliers): Q1-1.5IQR’den küçük veya Q3+1.5IQR’den büyük olan değerlerdir. Bunlar kutu ve bıyıkların dışında tekil noktalar olarak gösterilir. Örneğin Şekil 3.26 alt ve üst uç değerlerin olduğu bir veri kümesine ilişkin kutu çizimini göstermektedir. Bu grafikte alt ve üst bıyık ötesindeki noktalar uç değerleri göstermektedir.\n\n\n\n\n\n\nŞekil 3.26: Kutu grafiği (uç değerlerin olduğu durum)\n\n\n\n\nR’da kutu çizimi için boxplot() fonksiyonu kullanılabilir (bkz. Şekil 3.27):\n\nboxplot(x = mutluluk$mutluluk,\n        xlab = \"\",  \n        ylim = c(40,80),\n        ylab = \"Mutluluk endeksi\"\n        )\n\n\n\n\nŞekil 3.27: Türkiye’de illerin mutluluk endeksinin kutu grafiği\n\n\n\n\nMutluluk endeksinin kutu grafiğini 5-sayı özeti ile birlikte yorumlayabiliriz.\n\n# min Q1 median Q3 max\nfivenum(mutluluk$mutluluk)\n\n[1] 41.98 56.54 60.39 65.57 77.66\n\nsummary(mutluluk$mutluluk)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  41.98   56.54   60.39   61.15   65.57   77.66 \n\n\nBuna göre minimum mutluluk düzeyi yaklaşık olarak 42, ilk kartil 56.54, medyan 60.39, üçüncü kartil yaklaşık 66 ve maksimum mutluluk yaklaşık 78’dir. Medyan ve ortalamanın birbirine yakın olması mutluluğun yaklaşık olarak simetrik dağıldığına işaret etmektedir. Kutu çiziminde medyan çizgisinin kartiller aralığın gösteren dikdörtgeni yaklaşık iki eşit parçaya ayırdığına dikkat ediniz.\n\n\n3.9.5 Keman grafiği\nKeman çizimi, kutu-bıyık grafiğinin bir uzantısıdır ve veri dağılımını daha ayrıntılı bir şekilde görselleştirir. Bu grafik türü, son dönemde popülerleşmiştir ve verinin yoğunluk dağılımını da göstermektedir. Keman çiziminin bileşenleri şunlardır:\n\nKutu: Kutu-bıyık grafiğinde olduğu gibi Q1, Q2 (medyan) ve Q3’ü içerir.\nBıyıklar: Minimum ve maksimum değerleri gösterir.\nYoğunluk Eğrisi: Verinin dağılımını görselleştirir ve verinin yoğun olduğu bölgeleri daha geniş, seyrek olduğu bölgeleri ise daha dar gösterir.\n\nKeman grafiği, verinin dağılımını ve yoğunluklarını detaylı bir şekilde anlamamıza yardımcı olur. Bu grafik türü, verinin merkezi eğilimi ve yayılımı, asimetri veya çarpıklık, aşırı değerler ve potansiyel veri anormallikleri hakkında bilgi verir.\nKeman grafiği, kutu-bıyık grafiğine ek olarak verinin yoğunluk dağılımını da içerdiği için, veri analizi ve görselleştirme açısından daha zengin bilgiler sunar.\n\n# Örnek veri seti\nveri &lt;- x\n# Keman grafiği\nlibrary(ggplot2)\ndf &lt;- data.frame(veri = veri)\nggplot(df, aes(x = veri, y = \"\")) + \n  geom_violin(fill = \"lightblue\", color = \"black\") +\n  geom_boxplot(width = 0.3, fill = \"gray\") +\n  theme_minimal() +\n  labs(title = \"Keman Grafiği\", x = \"Değerler\", y = \"\")\n\n\n\n\nŞekil 3.28: Keman grafiği\n\n\n\n\nŞekil 3.28 örnek bir keman grafiğini göstermektedir. Bu grafiğin oluşturulmasında ggplot2() paketi kullanılmıştır. Kutu çiziminin yanı sıra yoğunluk fonksiyonunu şekli de görülmektedir. Buradan haraketle dağılımın yaklaşık olarak simetrik olduğunu söyleyebiliriz.\n\n# Örnek veri seti\nset.seed(123)\nx1 &lt;- rnorm(100, mean = 20, sd = 5)\nx2 &lt;- rnorm(100, mean = 40, sd = 5)\nx &lt;- c(x1, x2)\n# Keman grafiği\nlibrary(ggplot2)\ndf2 &lt;- data.frame(x = x)\nggplot(df2, aes(x = x, y = \"\")) + \n  geom_violin(fill = \"lightblue\", color = \"black\") +\n  geom_boxplot(width = 0.3, fill = \"gray\") +\n  theme_minimal() +\n  labs(title = \"Keman Grafiği\", x = \"Değerler\", y = \"\")\n\n\n\n\nŞekil 3.29: Keman grafiği: iki tepeli dağılım\n\n\n\n\nKutu çiziminin bir eksikliği dağılımın simetrikliği dışında dağılımın şekli hakkında bilgi içermemesidir. Bazı dağılımlarda birden fazla tepe noktası olabilir. Keman çizimi özellikle bu durumda faydalı olabilir. Örnek olarak Şekil 3.29 iki tepeli bir yoğunluğa sahip olan bir değişkenin keman grafiğini göstermektedir."
  },
  {
    "objectID": "Betimsel.html#iki-değişken-arasındaki-ilişkinin-betimlenmesi",
    "href": "Betimsel.html#iki-değişken-arasındaki-ilişkinin-betimlenmesi",
    "title": "3  Betimsel İstatistik",
    "section": "3.10 İki Değişken Arasındaki İlişkinin Betimlenmesi",
    "text": "3.10 İki Değişken Arasındaki İlişkinin Betimlenmesi\nŞimdiye kadar bir değişkenin merkezi eğilimi, yayıklığı, ve dağılımının biçimine ilişkin çeşitli görsel ve sayısal araçları öğrendik. Bu bölümde iki değişken arasındaki ilişkinin nasıl görselleştirilebileceğini ve özetlenebileceğini öğreneceğiz.\nElimizde sürekli değerler alan iki değişkene ilişkin gözlemler olsun. Örneğin, 10 öğrencinin derse devam oranları ile notları aşağıdaki gibidir:\n\n# notlar ve devam oranı\ndevam &lt;- c(80, 75, 70, 90, 91, 60, 86, 95, 83, 70)\nbasari &lt;- c(75, 78, 50, 80, 81, 60, 80, 90, 76, 80)\n\n# Veri çerçevesi oluşturma\nveri1 &lt;- data.frame(`Öğrenci` = 1:10, \n                   `Devam_oranı` = devam, \n                   `Başarı` = basari)\nprint(veri1)\n\n   Öğrenci Devam_oranı Başarı\n1        1          80     75\n2        2          75     78\n3        3          70     50\n4        4          90     80\n5        5          91     81\n6        6          60     60\n7        7          86     80\n8        8          95     90\n9        9          83     76\n10      10          70     80\n\n\nBu veri kümesinde gözlem birimi öğrencilerdir. Her bir öğrenci için derse devam oranı ile not çiftini gözlemliyoruz. Birinci öğrencinin %80 devam oranı ile 100 üzerinden 75 başarıyla dersi tamamladığını görüyoruz. İkinci öğrenci %75 devam ve 78 puan, üçüncü öğrenci %70 devam ve 50 puan değerlerine sahiptir. Bu veri kümesini görsel olarak özetlemenin en pratik yolu X ve Y eksenlerinde bu değişkenlerin olduğu ve gözlem değerlerinin noktalarla ifade edildiği bir serpilme grafiği çizmektir:\n\nplot(x = veri1$`Devam_oranı`, # x ekseni\n     y = veri1$`Başarı`,      # y ekseni\n     col = \"black\",           # renk = siyah\n     pch = 16,                # sembol=içi dolu nokta\n     cex = 1.2,               # sembol büyüklüğü\n     main =\"\",                # başlık\n     ylim=c(50,100),          # y ekseninin sınırları\n     xlim=c(50,100),          # x ekseninin sınırları\n     panel.first = grid(),    # grid çizgileri\n     xlab = \"Derse devam oranı, %\",          # x etiketi\n     ylab = \"Başarı (100 puan üzerinden)\"    # y etiketi  \n     ) \ntext(veri1$`Devam_oranı`, veri1$`Başarı`, \n     labels = veri1$`Öğrenci`,  # öğrenci no ekle\n     cex = 0.9,\n     pos = 3)\n\n\n\n\nŞekil 3.30: Ders devam oranı ve başarı arasındaki serpilme çizimi\n\n\n\n\nŞekil 3.30 öğrencilerin derse devam oranları ile başarı düzeyleri arasındaki ilişkinin serpilme çizimini göstermektedir. Gözlem çiftlerini betimleyen noktaların üzerindeki sayılar öğrencilerin numaralarıdır. Örneğin birinci öğrencinin %80 devam oranı ile 100 üzerinden 75 başarıyla dersi tamamladığını görüyoruz. İkinci öğrenci %75 devam ve 78 puan, üçüncü öğrenci %70 devam ve 50 puan değerlerine sahiptir. Bu grafikten hareketle devam oranı arttıkça başarının yükseldiğini söyleyebiliriz. İki değişken arasında aynı yönlü (pozitif) bir doğrusal ilişki olduğu görülmektedir.\n\nÖrnek 3.35 hane_ornek veri kümesinde yer alan aylik_gelir ve aylik_harcama değişkenlerinin serpilme çizimini oluşturunuz.\nÇözüm\n\nload(\"Data/hane_ornek.RData\")\nplot(x = hane_ornek$aylik_gelir, y = hane_ornek$aylik_harcama, \n     col = \"black\", \n     panel.first = grid(),\n     xlab = \"Aylık hane geliri, TL\", \n     ylab = \"Aylık hane harcaması, TL\"\n     ) \n\n\n\n\nŞekil 3.31: Serpilme grafiği: aylık gelir ve harcama\n\n\n\n\nŞekil 3.31 hanehalkı aylık ortalama gelir ve harcama değerlerinin serpilme grafiğini göstermektedir. Genel olarak gelir düzeyi ile harcama arasında pozitif bir ilişki olduğu söylenebilse de grafiğin sol alt kısmında, gelir ve harcamanın düşük olduğu alanlarda veri noktalarının yoğunlaştığını görülmektedir. Bu, daha fazla hanenin düşük gelir ve düşük harcama seviyelerinde olduğunu gösterir. Gerçekten de özet istatistiklerden\n\nsummary(hane_ornek$aylik_harcama)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    215    1708    2584    3261    3948   58994 \n\nsummary(hane_ornek$aylik_gelir)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  184.7  1883.2  2863.1  3641.4  4529.7 38757.9 \n\n\nhanelerin %75’inin 4530 TL’den az gelire sahip oldukları görülebilir. Şekil 3.32 gelir düzeyi 5000 TL’den az olan alt küme için serpilme çizimini göstermektedir. Bu grafikte gelir ve harcamanın düşük olduğu bölgelerde veri noktalarının yoğunlaşması daha belirgin hale gelmiştir. Gelirine oranla harcaması çok yüksek hanelerin de olduğu görülmektedir.\n\nhane_ornek_alt1 &lt;- subset(hane_ornek, aylik_gelir&lt;5000)\nplot(x = hane_ornek_alt1$aylik_gelir, \n     y = hane_ornek_alt1$aylik_harcama, \n     col = \"black\",  \n     panel.first = grid(),\n     xlab = \"Aylık hane geliri, TL\", \n     ylab = \"Aylık hane harcaması, TL\"\n     ) \n\n\n\n\nŞekil 3.32: Aylık geliri 5000 TL’den az olan hanelerde gelir ve harcama\n\n\n\n\n\n\nÖrnek 3.36 (Serpilme ve dağılım grafiği) Serpilme çizimine değişkenlerin dağılımlarını da eklemek mümkündür. Bunun için car paketinde yer alan scatterplot() fonksiyonu kullanılabilir:\n\nlibrary(car)\n\nLoading required package: carData\n\nset.seed(1234)\nx = rnorm(1000) + 10\ny = 2 + 3*x + 2*rnorm(100)\nscatterplot(y ~ x, smooth = FALSE)\n\n\n\n\nŞekil 3.33: Serpilme çizimi ve kutu grafiği\n\n\n\n\nŞekil 3.33 bu veri kümesinin serpilme çizimini x ve y değişkenlerinin kutu çizimleriyle birlikte vermektedir. Bu iki değişken arasında pozitif yönlü doğrusal bir ilişki olduğunu görüyoruz. Ayrıca, x’in merkezinin 10 civarında ve dağılımının simetrik olduğunu söyleyebiliriz. Benzer şekilde y’nin merkezi 30 civarında ve simetrik bir biçime sahiptir.\n\nSerpilme çizimlerini inceleyerek değişkenler arasındaki ilişkinin yönü hakkında çıkarımda bulunabiliriz. Görsel araçlar, verilerin faydalı bir özetini sunar, ancak bu özetler sayısal özetlerle desteklenmelidir. İki sayısal değişken arasındaki ilişkiyi anlamak için kullanılan temel istatistiksel araçlar kovaryans ve korelasyondur. Kovaryans, iki değişkenin birlikte nasıl değiştiğini ölçer, pozitif veya negatif yönlü ilişkiler hakkında bilgi verir. Korelasyon ise, bu ilişkinin gücünü ve yönünü, ölçekten bağımsız olarak ifade eder. Bu sayede, değişkenler arasındaki ilişkiyi daha açık bir şekilde ortaya koyabiliriz.\n\n3.10.1 Kovaryans\nKovaryans, iki değişkenin birlikte nasıl değiştiğini ölçen bir istatistiktir. İki değişkenin ortalamalarından sapmalarının çarpımlarının ortalaması olarak hesaplanır. Kovaryans pozitifse, değişkenler birlikte artma eğilimindedir; negatifse, bir değişken artarken diğeri azalma eğilimindedir.\n\nTanım 3.16 (Anakütle kovaryansı) İki değişken arasındaki anakütle kovaryansı \\[\n\\sigma_{xy} \\equiv \\text{Cov}(X, Y) = \\frac{1}{N} \\sum_{i=1}^{N} (X_i - \\mu_x)(Y_i - \\mu_y)\n\\tag{3.15}\\] olarak tanımlanır ve \\(\\sigma_{xy}\\) ya da \\(\\mbox{Cov}(X, Y)\\) ile gösterilir. Burada \\(N\\) anakütlenin (evrenin) boyutunu, \\(\\mu_x\\) ve \\(\\mu_y\\) bu değişkenlerin anakütle ortalamalarını ifade etmektedir. \\(\\mbox{Cov}(X, Y)\\) pozitif, negatif, ya da 0 olabilir.\n\n\nTanım 3.17 (Örneklem kovaryansı) Bir anakütleden çekilmiş \\(n\\) boyutlu bir veri kümesinden hareketle örneklem kovaryansını tanımlayabiliriz: \\[\n\\hat{\\sigma}_{xy} \\equiv \\widehat{\\text{Cov}(x, y)} = \\frac{1}{n-1} \\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})\n\\tag{3.16}\\] Burada \\(x_i\\) ve \\(y_i\\), rassal değişkenlerin i. gözlemlerini, \\(\\bar{x}\\) ve \\(\\bar{y}\\) bu değişkenlerin örneklem ortalamalarını, ve \\(n\\) gözlem sayısını ifade etmektedir. Örneklem kovaryansı bilinmeyen anakütle kovaryansını tahmin etmekte kullanılabilir.\n\n\n\nTablo 3.5: Kovaryans hesaplama tablosu: derse devam ve başarı\n\n\n\n\n\n\n\n\n\n\nÖğrenci\n\\(x\\)\n\\(y\\)\n\\(x - \\bar{x}\\)\n\\(y - \\bar{y}\\)\n\\((x - \\bar{x}) \\times (y - \\bar{y})\\)\n\n\n\n\n1\n80\n75\n0\n0\n0\n\n\n2\n75\n78\n-5\n3\n-15\n\n\n3\n70\n50\n-10\n-25\n250\n\n\n4\n90\n80\n10\n5\n50\n\n\n5\n91\n81\n11\n6\n66\n\n\n6\n60\n60\n-20\n-15\n300\n\n\n7\n86\n80\n6\n5\n30\n\n\n8\n95\n90\n15\n15\n225\n\n\n9\n83\n76\n3\n1\n3\n\n\n10\n70\n80\n-10\n5\n-50\n\n\nToplam\n800\n750\n0\n0\n859\n\n\n\n\nTablo 3.5 derse devam oranı ile başarı düzeyi arasındaki kovaryansı hesaplamaktadır. Bu tabloda \\(x\\) derse devam oranını, \\(y\\) başarı düzeyini (not) göstermektedir. Tablonun altındaki toplamlardan hareketle devam oranının ortalamasının \\(\\bar{x}=80\\), başarı düzeyinin ortalamasının \\(\\bar{y}=75\\) olduğu görülebilir. Dördüncü ve beşinci sütunlarda ortalamadan farklar hesaplanmıştır. Son sütunda ise ortalamalardan farkların çarpımları yer almaktadır. Buradan hareketle bu iki değişken arasındaki örneklem kovaryansı kolayca hesaplanabilir:\n\\[\\begin{align*}\n\\widehat{\\text{Cov}(X,Y)} &= \\frac{1}{10-1} \\sum_{i=1}^{10} (x_i - \\bar{x})(y_i - \\bar{y}) \\\\\n&= \\frac{1}{9} \\left[ (80-80)(75-75) + (75-80)(78-75) + \\ldots + (70-80)(80-75) \\right] \\\\\n&= \\frac{1}{9} \\left[ 0 + (-5)(3) + \\ldots + (-10)(5) \\right] \\\\\n&= \\frac{1}{9} \\left[ 0 -15 + \\ldots -50 \\right] \\\\\n&= \\frac{1}{9} \\times (859) \\\\\n&\\approx 95.4\n\\end{align*}\\]\nR’da cov() fonksiyonu ile de bu hesaplama yapılabilir:\n\ncov(veri1$Devam_oranı, veri1$Başarı)\n\n[1] 95.44444\n\n\n\n\n\n\n\nŞekil 3.34: Pozitif kovaryans\n\n\n\n\nİki değişken arasındaki kovaryansın işareti ilişkinin yönü hakkında bilgi verir. Ancak büyüklüğü ölçü birimlerine bağlı olduğu için genellikle yorumlanmaz. Kovaryans formülünde yer alan ortalamalardan farkların çarpımının işareti ilişkinin yönünü belirler. Şekil 3.34 kovaryansın pozitif işaretli olduğu durumu görselleştirmektedir. Bu grafikte X ve Y eksenleri ortalamalardan farkları göstermektedir. Buna göre X ortalamanın üzerindeyken, yani ortalama farkı pozitifken Y de ortalamanın üzerinde olma eğilimindeyse (bölge 1) her iki fark pozitif işaretli ve çarpımları da pozitif işaretli olur. Diğer durumda X ortalamanın altındayken Y de ortalamanın altında olma eğilimindeyse her iki işaret negatif ve çarpımları pozitif olur. Sonuç olarak ortalamada bu değişkenlerin aynı yönde hareket ettikleri yani kovaryanslarının pozitif olduğu söylenebilir.\n\n\n\n\n\nŞekil 3.35: Negatif kovaryans\n\n\n\n\nŞekil 3.35 ise tersi durumu göstermektedir. X ortalamanın altındayken Y kendi ortalamasının üzerinde değerler alıyorsa (bölge II) çarpımın işareti negatif olacaktır. Diğer durumda X ortalamanın üzerindeyken Y ortalamanın altındaysa (bölge IV) çarpımın işareti negatif olacaktır. Tüm gözlem noktalarında eğilim bu şekildeyse kovaryans negatif işaretli olur. Merkezlere olan uzaklık büyüdükçe kovaryans değeri de mutlak olarak büyüyecektir.\n\n\n\n\n\nŞekil 3.36: Sıfır kovaryans\n\n\n\n\nŞekil 3.36 X ile Y arasında ilişkinin olmadığı durumu göstermektedir. Bu durumda ortalamadan farkların orijin çevresinde tesadüfi bir şekilde dağıldığına dikkat ediniz.\n\n\n3.10.2 Korelasyon\nKorelasyon, iki değişken arasındaki lineer ilişkinin gücünü ve yönünü ölçen bir istatistiktir. Pearson korelasyon katsayısı en yaygın kullanılan korelasyon ölçüsüdür. Değerler -1 ile +1 arasında değişir. +1 mükemmel pozitif ilişkiyi, -1 mükemmel negatif ilişkiyi, 0 ise ilişkisizliği ifade eder.\n\nTanım 3.18 (Anakütle korelasyon katsayısı) Bir anakütle için iki değişken arasındaki korelasyon katsayısı \\[\n\\rho_{xy} = \\frac{\\sigma_{xy}}{\\sigma_x \\sigma_y} \\equiv \\frac{\\text{Cov}(X, Y)}{\\sigma_x \\sigma_y}\n\\tag{3.17}\\] formülüyle hesaplanır. Burada \\(\\sigma_{xy}\\) iki değişken arasındaki anakütle kovaryansını, \\(\\sigma_x\\) ve \\(\\sigma_y\\) bu değişkenlerin anakütle standart sapmalarını ifade etmektedir.\n\n\nTanım 3.19 (Örneklem korelasyon katsayısı) Örneklem korelasyon katsayısı aşağıdaki gibi tanımlanır: \\[\nr_{xy}\\equiv \\hat{\\rho}_{xy} = \\frac{\\widehat{\\text{Cov}(X, Y)}}{s_x s_y}\n\\] Burada \\(\\widehat{\\text{Cov}(X, Y)}\\) iki değişken arasındaki örneklem kovaryansını, \\(s_x\\) ve \\(s_y\\) bu değişkenlerin örneklem standart sapmalarını ifade etmektedir.\n\nÖrneklem korelasyon katsayısı \\(r_{xy}\\), iki sayısal değişken arasındaki doğrusal ilişkinin gücünü ve yönünü ölçen bir istatistiktir. Her zaman \\(-1\\) ile \\(1\\) arasında bir değer alır:\n\n\\(r = 1\\): Mükemmel pozitif doğrusal ilişki. Bir değişken arttıkça diğer değişken de artar.\n\\(r = -1\\): Mükemmel negatif doğrusal ilişki. Bir değişken arttıkça diğer değişken azalır.\n\\(r = 0\\): Değişkenler arasında doğrusal bir ilişki yoktur.\n\nKorelasyonun işareti kovaryansın işaretine bağlıdır. Pozitif korelasyon durumunda X ve Y değerleri arttıkça, veri noktaları ortalama etrafında yukarı doğru bir eğim gösterir ve farkların çarpımı pozitif olur. Negatif korelasyon durumunda ise X değeri arttıkça Y değerleri azalır; veri noktaları ortalama etrafında aşağı doğru bir eğim gösterir ve farkların çarpımı negatif olur. Sıfır korelasyon durumunda ise X ve Y arasında belirgin bir ilişki yoktur. Veri noktaları etrafında rastgele dağılır ve farkların çarpımının ortalaması sıfıra yakın olma eğilimindedir.\n\n\n\n\n\nŞekil 3.37: X ile Y arasındaki korelasyon ve serpilme çizimleri\n\n\n\n\nKorelasyon katsayısı \\(1\\)’e ya da \\(-1\\)’e yaklaştıkça doğrusal ilişkinin güçlendiğini, \\(0\\)’a yaklaştıkça zayıfladığını söyleyebiliriz. Şekil 3.37 farklı korelasyon değerlerine sahip değişken çiftlerinin serpilme çizimlerini göstermektedir. Korelasyon katsayısı azaldıkça veya arttıkça, veri noktalarının doğrusal bir çizgi etrafında daha sıkı bir şekilde kümelendiği görülebilir. Özellikle korelasyonun 0 olduğu grafikte, veri noktalarının belirgin bir doğrusal ilişki göstermediğine dikkat ediniz. Özetlersek, bu grafikte\n\nKorelasyon \\(-0.8\\): Güçlü negatif ilişki. X değeri arttıkça Y değeri azalma eğilimindedir.\nKorelasyon \\(-0.5\\): Orta düzeyde negatif ilişki. X değeri arttıkça Y değeri genel olarak azalmaktadır, ancak ilişki daha zayıftır.\nKorelasyon \\(0\\): Hiçbir doğrusal ilişki yoktur. X ve Y değerleri arasında belirgin bir ilişki gözlemlenmemektedir.\nKorelasyon \\(0.5\\): Orta düzeyde pozitif ilişki. X değeri arttıkça Y değeri genel olarak artmaktadır.\nKorelasyon \\(0.8\\): Güçlü pozitif ilişki. X değeri arttıkça Y değeri artma eğilimindedir.\nKorelasyon \\(1\\): Mükemmel pozitif doğrusal ilişki. X ve Y değerleri tamamen doğrusal bir ilişki içerisindedir; X değeri arttıkça Y değeri de sabit bir oranda artmaktadır.\n\n\nÖrnek 3.37 Tablo 3.5 verisinden hareketle derse devam oranı ile başarı notu arasındaki Pearson korelasyon katsayısını hesaplayınız.\nÇözüm\nÖrneklem korelasyon katsayısını hesaplayabilmek için kovaryansı ve değişkenlerin standart sapmalarını bulmamız gerekir. Örneklem kovaryansını 95.4 olarak bulmuştuk. Derse devam oranının örneklem standart sapması 11.136 ve başarı oranının standart sapması 11.528 olarak bulunabilir. Böylece örneklem korelasyon katsayısı\n\\[\nr_{xy} = \\frac{\\widehat{\\text{Cov}(X, Y)}}{s_x s_y} = \\frac{95.4}{(11.136)(11.528)} = 0.74\n\\] olur. cor() fonksiyonu ile\n\ncor(veri1$Devam_oranı,  veri1$Başarı)\n\n[1] 0.7435248\n\n\nBuradan hareketle derse devam oranı ile başarı düzeyi arasında güçlü pozitif bir ilişki olduğunu söyleyebiliriz.\n\n\nÖrnek 3.38 (Görselleştirmenin önemi, Anscombe veri kümesi)  \n\nlibrary(datasets)\nanscombe\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89\n\n\nBu veri kümesinde yer alan \\((x1,y1),\\ldots,(x4,y4)\\) değişken çiftleri arasındaki korelasyon yaklaşık olarak 0.816’dır:\n\nkor_x1_y1 &lt;- cor(anscombe$x1, anscombe$y1)\nkor_x2_y2 &lt;- cor(anscombe$x2, anscombe$y2)\nkor_x3_y3 &lt;- cor(anscombe$x3, anscombe$y3)\nkor_x4_y4 &lt;- cor(anscombe$x4, anscombe$y4)\ncbind(kor_x1_y1, kor_x2_y2, kor_x3_y3, kor_x4_y4)\n\n     kor_x1_y1 kor_x2_y2 kor_x3_y3 kor_x4_y4\n[1,] 0.8164205 0.8162365 0.8162867 0.8165214\n\n\n\n\n\n\n\nŞekil 3.38: Görselleştirmenin önemi: Anscombe dörtlüsü\n\n\n\n\nŞekil 3.38 bu veri kümelerini göstermektedir. Her bir veri kümesi aynı ortalama ve varyansa ve benzer korelasyon katsayısına sahiptir. Ancak, görsel olarak incelendiğinde bu verilerin oldukça farklı dağılımlar ve ilişkiler sergilediği görülmektedir.\n\nVeri 1: x1 ve y1 arasında pozitif yönde doğrusal bir ilişki bulunmaktadır.\nVeri 2: x2 ve y2 arasında doğrusal olmayan (kuadratik) bir ilişki vardır.\nveri 3: x3 ve y3 doğrusal bir ilişkiye sahip gibi görünmekle birlikte bir uç değer vardır.\nVeri 4: x4, bir değer dışında, aynı değere sahiptir. Bu değer dışlanırsa (19) x4’ün varyansı sıfır olur.\n\n\nAnscombe’nin Dörtlüsü, sadece korelasyon katsayısına dayanarak değişkenler arasındaki ilişkiyi anlamanın sınırlamalarını ortaya koymaktadır. Korelasyon katsayısı, iki değişken arasındaki doğrusal ilişkiyi ölçer. Ancak, bazı değişkenler doğrusal olmayan ilişkiler gösterebilir. Bu durumlarda, doğrusal olmayan ilişkileri tanımlamak ve analiz etmek için başka yöntemler kullanmak gerekebilir. Ayrıca, uç değerler korelasyon katsayısını önemli ölçüde etkileyebilir. Korelasyon katsayısı değişkenlerin dağılımı hakkında bilgi vermez. Aynı korelasyon katsayısına sahip olsalar da, yukarıda gösterildiği gibi, dağılımda önemli farklılıklar olabilir.\n\n\n3.10.3 Korelasyon katsayısının geometrik anlamı\nKorelasyon, iki vektör arasındaki açının kosinüsü olarak düşünülebilir. \\(\\mathbf{a}\\) ve \\(\\mathbf{b}\\) iki vektör olsun. Bu iki vektörün iç çarpımı \\[\n\\mathbf{a} \\cdot \\mathbf{b} = \\sum_{i=1}^{n} a_i b_i\n\\] ve vektör normları (ya da uzunlukları) \\[\n\\| \\mathbf{a} \\| = \\sqrt{\\sum_{i=1}^{n} a_i^2}\n\\] ve \\[\n\\| \\mathbf{b} \\| = \\sqrt{\\sum_{i=1}^{n} b_i^2}\n\\] olarak tanımlıdır. İki vektör arasındaki açının kosinüsü iç çarpım ve uzunluklar ile aşağıdaki gibi tanımlanabilir: \\[\n\\cos(\\theta) = \\frac{\\mathbf{a} \\cdot \\mathbf{b}}{\\| \\mathbf{a} \\| \\| \\mathbf{b} \\|}\n\\] \\(0\\leq \\theta\\leq \\pi\\) iki vektör arasındaki açıdır. Kosinüs fonksiyonunun tanımı gereği \\(\\cos(\\theta)\\) her zaman \\(-1\\) ile \\(1\\) arasında değerler alır.\n\\(x\\) ve \\(y\\) gözlem değerlerini iki vektör olarak düşünülebilir. Ortalamadan farklar vektörlerini \\(\\mathbf{a} = (x_i - \\bar{x})\\) ve \\(\\mathbf{b} = (y_i - \\bar{y})\\) şeklinde tanımlarsak \\[\nr = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum_{i=1}^{n} (x_i - \\bar{x})^2} \\sqrt{\\sum_{i=1}^{n} (y_i - \\bar{y})^2}}\\equiv \\cos(\\theta)\n\\] korelasyon katsayısının \\(\\cos(\\theta)\\) olduğunu görebiliriz.\n\n\\(r = 1\\): İki değişken arasında mükemmel pozitif doğrusal ilişki vardır. Bu durumda, iki vektör aynı yöndedir ve açı \\(\\theta = 0\\)’dır, dolayısıyla \\(\\cos(0) = 1\\).\n\\(r = -1\\): İki değişken arasında mükemmel negatif doğrusal ilişki vardır. Bu durumda, iki vektör zıt yöndedir ve açı \\(\\theta = \\pi\\) ya da \\(180^\\circ\\)’dir. Dolayısıyla \\(\\cos(\\pi) = -1\\) olur.\n\\(r = 0\\): İki değişken arasında doğrusal bir ilişki yoktur. Bu durumda, iki vektör arasındaki açı \\(\\theta = \\frac{\\pi}{2}\\) ya da \\(90^\\circ\\)’dir ve \\(\\cos\\left(\\frac{\\pi}{2}\\right) = 0\\) olur.\n\nCauchy-Schwarz Eşitsizliği: İki vektör arasındaki nokta çarpımı, bu vektörlerin normlarının çarpımına eşit veya daha küçüktür: \\[\n    \\left| \\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y}) \\right| \\leq \\sqrt{\\sum_{i=1}^{n} (x_i - \\bar{x})^2} \\sqrt{\\sum_{i=1}^{n} (y_i - \\bar{y})^2}\n\\]\nBurada, eşitlik durumu, iki değişken arasında tam doğrusal bir ilişki olduğunda (pozitif veya negatif) ortaya çıkar."
  },
  {
    "objectID": "Betimsel.html#çözümlü-alıştırmalar",
    "href": "Betimsel.html#çözümlü-alıştırmalar",
    "title": "3  Betimsel İstatistik",
    "section": "3.11 Çözümlü Alıştırmalar",
    "text": "3.11 Çözümlü Alıştırmalar\n\nAlıştırma 3.1  \n\n\nAlıştırma 3.2 Bir sayısal vektörü girdi olarak alan ve medyanı hesaplayan bir R fonksiyonu yazınız.\nÇözüm\n\n# Medyanı hesaplayan fonksiyon\n# x = nümerik vektör\nmedyan &lt;- function(x) { \n  # Girdinin sayısal olup olmadığını kontrol etme\n  if (!is.numeric(x)) {\n    stop(\"Girdi sayısal bir vektör olmalıdır.\")\n  }\n  sirali_veriler &lt;- sort(x)   # sırala\n  n &lt;- length(sirali_veriler) # verinin boyutu \n  if (n %% 2 == 1) {\n    # Tek sayıdaki veri seti için\n    medyan &lt;- sirali_veriler[(n+1)/2]\n  } else {\n    # Çift sayıdaki veri seti için\n    ortadaki1 &lt;- sirali_veriler[n/2]\n    ortadaki2 &lt;- sirali_veriler[(n/2)+1]\n    medyan &lt;- (ortadaki1 + ortadaki2)/2\n  }\n  return(medyan)\n}\nmedyan(gpa)\n\n[1] 3\n\nmedyan(gpa2)\n\n[1] 2.9\n\n\nBurada (n %% 2) işlemi \\(n\\)’in 2’ye bölümünden kalanı verir. Çift sayılar için 0, tek sayılar için ise 1 değerini alır.\n\n\nAlıştırma 3.3  \n\nAşağıda verilen iki veri kümesini kullanarak ortalama, medyan, Q1, Q3, IQR ve aralıkları hesaplayın. İşlemleri önce kendiniz bir hesap makinesi yardımıyla yapınız. Daha sonra R programını kullanarak sonuçları karşılaştırınız.\n\n\ndataset1 &lt;- c(48, 49, 50, 51, 52, 48, 49, 50, 51, 52)\ndataset2 &lt;- c(40, 45, 48, 50, 52, 55, 58, 60, 45, 47)\n\nÇözüm\n\nortalama &lt;- mean(dataset1)\nmedyan &lt;- median(dataset1)\nq1 &lt;- quantile(dataset1, 0.25)\nq3 &lt;- quantile(dataset1, 0.75)\niqr &lt;- IQR(dataset1)\nstats1 &lt;- rbind(ortalama, medyan, q1, q3, iqr)\ncolnames(stats1) &lt;- \"dataset1\"\nstats1\n\n         dataset1\nortalama       50\nmedyan         50\nq1             49\nq3             51\niqr             2\n\n\n\nortalama &lt;- mean(dataset2)\nmedyan &lt;- median(dataset2)\nq1 &lt;- quantile(dataset2, 0.25)\nq3 &lt;- quantile(dataset2, 0.75)\niqr &lt;- IQR(dataset2)\nstats2 &lt;- rbind(ortalama, medyan, q1, q3, iqr)\ncolnames(stats2) &lt;- \"dataset2\"\nstats2\n\n         dataset2\nortalama    50.00\nmedyan      49.00\nq1          45.50\nq3          54.25\niqr          8.75\n\n\n\ncbind(stats1, stats2)\n\n         dataset1 dataset2\nortalama       50    50.00\nmedyan         50    49.00\nq1             49    45.50\nq3             51    54.25\niqr             2     8.75\n\n\nHer iki veri kümesinin ortalaması aynıdır, medyan değerleri birbirine çok yakındır. Ancak ikinci veri setinin değişkenliği daha fazladır. Merkezi yayıklığı ölçen IQR ikinci veri kümesinde 8.75, birincisinde ise 2 olarak bulunmuştur.\n\n\nAlıştırma 3.4 Rassal sayılar çekilerek bir veri kümesi oluşturulmuştur:\n\n# örnek veri seti simülasyonu\nset.seed(123)\nx1 = rnorm(100, mean=5, sd=1.2)\nx2 = rnorm(100, mean=0, sd=0.8)\ngrup = sample(c(\"A\", \"B\", \"C\"), 100, replace = TRUE)\ny = 2 + 2*x1 - 3*x2 + 5*(grup==\"B\") + 8*(grup==\"C\") + rnorm(100) \n#\ndf &lt;- data.frame(y, x1, x2, grup) # veri çerçevesini oluştur\nhead(df)\n\n         y       x1          x2 grup\n1 18.60331 4.327429 -0.56832525    C\n2 18.44227 4.723787  0.20550697    C\n3 24.42217 6.870450 -0.19735350    C\n4 13.84834 5.084610 -0.27803408    A\n5 15.55670 5.155145 -0.76129485    A\n6 24.90853 7.058078 -0.03602218    C\n\n\nBuna göre aşağıdaki soruları yanıtlayın.\n\nBu veri kümesinde yer alan x1, x2 ve y değişkenlerinin özet istatistiklerini hesaplayın ve yorumlayın.\ny’nin özet istatistiklerini gruplara göre hesaplayın ve yorumlayın.\nGruplara göre kutu çizimlerini oluşturun ve yorumlayın.\n\nÇözüm:\n\nDeğişkenlenlerin özet istatistikleri\n\n\nsummary(df)\n\n       y               x1              x2               grup          \n Min.   : 6.04   Min.   :2.229   Min.   :-1.64260   Length:100        \n 1st Qu.:13.72   1st Qu.:4.407   1st Qu.:-0.64088   Class :character  \n Median :17.54   Median :5.074   Median :-0.18066   Mode  :character  \n Mean   :16.88   Mean   :5.108   Mean   :-0.08604                     \n 3rd Qu.:19.78   3rd Qu.:5.830   3rd Qu.: 0.37427                     \n Max.   :27.50   Max.   :7.625   Max.   : 2.59283                     \n\n\nOrtalama ve medyan değerlerinden hareketle y ve x1’in yaklaşık olarak simetrik, x2’nin ise hafif sağa çarpık olduğunu söyleyebiliriz.\n\nGruplara göre y’nin betimsel istatistikleri:\n\n\nsummary(df$y[grup==\"A\"])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   6.04    8.90   11.14   11.83   13.85   22.14 \n\nsummary(df$y[grup==\"B\"])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  7.794  16.054  18.067  17.719  19.538  24.500 \n\nsummary(df$y[grup==\"C\"])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.59   18.75   20.31   21.17   23.58   27.50 \n\n\nBu sonuçlara göre grup A en düşük ortalama ve medyana, grup C ise en yüksek ortalama ve medyana sahiptir. Grup B ikisinin arasındadır. Bunun yanı sıra birinci ve üçüncü kartillerin de benzer şekilde A’dan C’ye doğru arttığını görüyoruz.\n\nGruplara göre kutu çizimi:\n\n\nboxplot(formula = y ~ grup,\n        data = df, at = c(0, 0.5, 1.0), ylim=c(0,30),\n        horizontal = FALSE, \n        frame.plot = FALSE,  \n        boxwex = .3, # daha dar kutu\n        boxfill =\"gray80\",\n        whiskcol = \"gray70\", \n        boxcol = \"grey70\",\n        outcol = \"grey70\", \n        whisklty = 1,\n        outpch = 20, # uç değerler nokta \n        outcex = 0.8, # uç değer boyutu \n        medlwd = 1.0       \n)\n\n\n\n\nÖnceki kısımda belirttiğimiz gibi y’nin medyanı grup C’de en yüksek değeri almaktadır. A grubunda y yaklaşık olarak simetrik dağılırken, B grubunda hafif sola, C grubunda ise sağa çarpıktır.\nBu grafiği plot() fonksiyonu ile de çizebiliriz:\n\nplot(as.factor(df$grup), df$y)\n\n\n\n\n\n\nAlıştırma 3.5 mtcars veri kümesinde yer alan araç ağırlığı (wt) ve yakıt verimliliği (mpg, galon başına mil) değişkenlerinin kovaryansını ve korelasyon katsayısını hesaplayınız. Serpilme grafiğini oluşturarak yorumlayınız.\nÇözüm:\n\n# mtcars veri setini yükleyelim\ndata(mtcars)\n\n# Kovaryans ve korelasyon hesaplama\ncov_value &lt;- cov(mtcars$mpg, mtcars$wt)\ncor_value &lt;- cor(mtcars$mpg, mtcars$wt)\ncov_value\n\n[1] -5.116685\n\ncor_value\n\n[1] -0.8676594\n\n\n\n# Dağılma diyagramı oluşturma ve kovaryans ve korelasyon değerlerini ekleme\nplot(mtcars$wt, mtcars$mpg, \n     main=paste(\"Serpilme grafiği: Araç Ağırlığı ve Yakıt Verimliliği\\n\",\n                \"Kovaryans: \", round(cov_value, 2), \", Korelasyon: \", round(cor_value, 2)),\n     xlab=\"Ağırlık (1000 lbs)\", \n     ylab=\"Mil/Gallon (mpg)\",\n     pch=19)\n\n\n\n\nBu sonuçlara göre otomobilin ağırlığı ile yakıt verimliliği arasında negatif yönlü güçlü bir ilişki olduğunu söyleyebiliriz (korelasyon katsayısı \\(-0.87\\) bulundu). Aracın ağırlığı arttıkça yakıt verimliliği, yani birim yakıt (galon) başına gidilen yol (mil cinsinden) azalmaktadır. Buradan hareketle büyük otomobillerin yakıt tüketimi bakımından daha verimsiz olduğu söylenebilir.\n\n\nAlıştırma 3.6 mutluluk veri kümesinde yer alan saglik_tatmin (sağlık tatmin düzeyi) ve mutluluk (mutluluk düzeyi) değişkenlerinin serpilme grafiğini çiziniz ve korelasyon katsayısını hesaplayınız.\nÇözüm:\n\nload(\"Data/mutluluk.rda\")\n\n\ncor(mutluluk$saglik_tatmin, mutluluk$mutluluk)\n\n[1] 0.5918097\n\n\n\nplot(mutluluk$saglik_tatmin, mutluluk$mutluluk, \n     col = rgb(0,100,0,50, maxColorValue = 255), # renk kontrolü\n     pch = 16,                                   # nokta şekli\n     main =\"Serpilme çizimi\",                    # başlık\n     xlab = \"Sağlık tatmin düzeyi\", \n     ylab = \"Mutluluk endeksi\"\n     )\n\n\n\n\nBu sonuçlara göre sağlık tatmin düzeyi ile mutluluk arasında orta düzeyde pozitif bir doğrusal ilişki vardır (korelasyon yaklaşık 0.6). Serpilme çiziminden de görüldüğü gibi sağlık tatmin düzeyi arttıkça mutluluk düzeyi de artmaktadır.\nİl düzeyinde mutluluk düzeyi, o ilde yaşayan bireylerin ortalama sağlık tatminleri, ve sosyal hayat tatmin düzeyleriyle de ilişkilidir. Bunu göstermek için aşağıdaki gibi korelasyon matrisi oluşturabiliriz:\n\ncor(mutluluk[,c(15,41,42)])\n\n                    saglik_tatmin sosyal_hayat_tatmin  mutluluk\nsaglik_tatmin           1.0000000           0.6808637 0.5918097\nsosyal_hayat_tatmin     0.6808637           1.0000000 0.4537400\nmutluluk                0.5918097           0.4537400 1.0000000\n\n\nBu matrisin hücreleri o satır ve sütundaki değişkenler arasındaki korelasyon katsayısını göstermektedir (ana köşegen her zaman 1 olur). Buna göre sosyal hayat tatmin düzeyi ile mutluluk endeksi arasındak korelasyon katsayısı 0.68’dir. Bu değişkenler arasında serpilme çizimlerini de plot() fonksiyonu ile oluşturabiliriz:\n\nplot(mutluluk[,c(15,41,42)])\n\n\n\n\n\n\nAlıştırma 3.7 Bu alıştırmada verileri görselleştirmenin önemini vurgulamak amacıyla geliştirilmiş datasauRus veri kümesini inceleyeceğiz. Önce veri kümesini yükleyin:\n\n# install.packages(\"datasauRus\")\nlibrary(datasauRus)\ndata(datasaurus_dozen)\n\nBu veri kümesinde yer alan değişken çiftleri için korelasyon katsayısını hesaplayın, serpilme çizimlerini oluşturun ve yorumlayın.\nÇözüm:\n\nlibrary(dplyr)\ndatasaurus_groups &lt;- datasaurus_dozen %&gt;% group_by(dataset)\n\n\n\n\n\n\nŞekil 3.39: Görselleştirmenin önemi: Datasaurus verileri\n\n\n\n\nKorelasyonları hesaplayalım:\n\ndatasaurus_correlations &lt;- datasaurus_dozen %&gt;%\n  group_by(dataset) %&gt;%\n  summarize(correlation = cor(x, y))\nprint(datasaurus_correlations)\n\n# A tibble: 13 × 2\n   dataset    correlation\n   &lt;chr&gt;            &lt;dbl&gt;\n 1 away           -0.0641\n 2 bullseye       -0.0686\n 3 circle         -0.0683\n 4 dino           -0.0645\n 5 dots           -0.0603\n 6 h_lines        -0.0617\n 7 high_lines     -0.0685\n 8 slant_down     -0.0690\n 9 slant_up       -0.0686\n10 star           -0.0630\n11 v_lines        -0.0694\n12 wide_lines     -0.0666\n13 x_shape        -0.0656\n\n\nHer bir çift için korelasyon katsayısı yaklaşık -0.06’dır. Neredeyse sıfır korelasyon değeri, değişkenler arasında hiç bir ilişki olmadığı anlamına gelmez. Serpilme çizimlerinden de görüldüğü gibi ilişkilerin şekli belirgin biçimde farklıdır. Anscombe Dörtlüsünde olduğu gibi, Datasaraus veri kümesi de korelasyon katsayısının tek başına verilerin tüm özelliklerini yansıtmakta yetersiz kalabileceğini göstermektedir."
  },
  {
    "objectID": "Betimsel.html#problemler",
    "href": "Betimsel.html#problemler",
    "title": "3  Betimsel İstatistik",
    "section": "3.12 Problemler",
    "text": "3.12 Problemler\n\nProblem 3.1 Aşağıdaki soruları yanıtlayın.\n\nMerkezi eğilim ölçülerini sıralayın ve kısaca açıklayın. Hangi durumda medyan tercih edilir?\nHangi tür verileri için geometrik ortalama uygun olabilir?\nBir firmanın satışları 4 yıllık bir dönemde %40 büyümüştür. Yıllık ortalama büyüme yüzde kaçtır?\n“Aralık, uç değerlerden etkilenmeyen bir değişkenlik ölçüsüdür” Bu ifadeye katılır mısınız? Kısaca açıklayın.\nDeğişkenlik ölçüleri nelerdir? Kısaca açıklayın.\n\n\n\nProblem 3.2 Büyük bir toplulukta IQ skorları ortalaması 100 standart sapması 10 olan bir dağılıma uymaktadır.\n\nÇan biçimli bir dağılım varsayımı altında, gözlemlerin %95’inin içinde yer alacağı bir aralık oluşturun.\nDağılımın şeklinin bilinmediğini düşünelim. Gözlemlerin yüzde kaçı 1 ve 2 standart sapma içinde yer alır?\n\n\n\nProblem 3.3 Aşağıdaki tablonun sütunlarındaki her değişken için ortalama, medyan, mod, standart sapma, IQR, ve varyasyon katsayısını bulun.\n\n\n\nX\nY\nZ\nA\nB\nC\nD\n\n\n\n\n0\n5\n-3\n24\n5\n124\n55\n\n\n1\n3\n-2\n30\n5\n85\n64\n\n\n0\n0\n-1\n12\n5\n102\n72\n\n\n0\n6\n0\n7\n5\n156\n75\n\n\n1\n10\n1\n15\n3\n133\n78\n\n\n1\n1\n2\n28\n1\n115\n85\n\n\n\n\n\nProblem 3.4 Aşağıdaki veri kümesini düşünelim: \\[\n(51, 42, 51, 56, 54, 58, 49, 60, 52, 55, 52, 51, 49, 42, 44, 54, 50, 46, 53, 50, 47, 52, 49, 50, 49)\n\\] Bilgisayar kullanmadan:\n\nDal-ve-yaprak çizimini oluşturun.\n5-sayı özet istatistiklerini hesaplayın.\nKutu grafiğini çizin.\n4 ya da 5 sınıftan oluşan frekans tablosunu hazırlayın ve histogramını çizin.\n\n\n\n\nProblem 3.5 Aşağıdaki ifadelerin doğru/yanlış olup olmadıklarını belirtin ve kısaca açıklayın.\n\nMedyan ortalamaya göre uç değerlere daha az duyarlıdır.\nIQR aralığa kıyasla uç değerlere daha az duyarlıdır.\nKovaryans her zaman -1 ile 1 arasında değerler alır.\nKorelasyon katsayısının 0.9 olması iki değişken güçlü pozitif doğrusal ilişki olduğu anlamına gelir.\nKutu grafiği dağılımın modalliği (tepe sayısı) hakkında bilgi vermez.\n\n\n\nProblem 3.6 Çok sayıda öğrencinin katıldığı bir sınavın sonucuna ilişkin aşağıdaki yorumlar yapılıyor:\n\nÖğrencilerin %70’i ortalamadan yüksek not almış.\nÖğrencilerin %70’i medyandan yüksek not almış.\nÖğrencilerin %60’ı medyandan düşük not almış.\n\nBu ifadelerden hangileri kesin olarak yanlıştır? Kısaca açıklayınız.\n\n\nProblem 3.7 Ortalaması 10 standart sapması 2 olan 5 sayı oluşturun (bilgisayar kullanmayın).\n\n\nProblem 3.8 gapminder verilerini kullanarak aşağıdaki soruları yanıtlayınız:\n\nDoğumdaki yaşam beklentisi, lifeExp, değişkeninin 1952 yılı için histogramını çizin.\n\nAynı değişkenin 2007 yılındaki histogramını da çizin ve karşılaştırın.\n\n\n\nProblem 3.9 hane_ornek.RData verilerini kullanarak aşağıdaki soruları yanıtlayınız:\n\nsigara hanede sigara içen varsa 1, yoksa 2 değerini alan bir kategorik değişkendir. Bunu kullanarak bir faktör değişkeni oluşturun. Hanelerin yüzde kaçında sigara içilmektedir?\nSigara içilen ve içilmeyen gruplar için ayrı ayrı özet istatistikleri oluşturun ve kutu grafiklerini çizin. Ortalama ve medyanı kullanarak bu iki grup arasında önemli farklar olup olmadığını tartışın.\nozel_sigorta değişkeni hanehalkının özel sigortası varsa 1 yoksa 2 değerini almaktadır. Hanelerin ne kadarının özel sigortası vardır?\nÖzel sigortası olan ve olmayan hanelerde aylık gelir ve harcamanın özet istatistiklerini oluşturun, histogramlarını çizin ve yorumlayın.\n\n\n\nProblem 3.10 mutluluk.RData verilerini kullanarak aşağıdaki soruları yanıtlayınız:\n\nort_gun_kazanc o ilde yaşayan bireylerin ortalama günlük kazançlarını göstermektedir. Bu değişkenin histogramını ve kutu grafiğini çizin. Özet istatistikleri hesaplayın ve grafiklerle birlikte yorumlayın.\nmutluluk endeksi ile ort_gun_kazanc arasındaki korelasyon katsayısını bulun. Serpilme diagramını çizin ve yorumlayın.\nBu iki değişkenin varyasyon katsayılarını (CV) hesaplayın ve yorumlayın."
  },
  {
    "objectID": "Olasilik.html#küme-kavramları",
    "href": "Olasilik.html#küme-kavramları",
    "title": "4  Olasılık",
    "section": "4.1 Küme Kavramları",
    "text": "4.1 Küme Kavramları\nBir küme birbirinden farklı nesnelerden oluşan bir topluluktur. Genellikle büyük harflerle gösterilir. Örneğin aşağıda tanımlı \\(A\\) ve \\(B\\) kümelerini düşünelim: \\[\nA = \\{a,b,c,d,e\\}\n\\] \\[\nB = \\{d,e,f,g,h\\}\n\\] \\(A\\) ve \\(B\\) kümeleri 5 nesneden oluşmaktadır. Bir nesne kümenin elemanıysa \\(\\in\\) ile gösterilir, örneğin \\(a\\in A\\) yazabiliriz. Tersi durumda \\(\\notin\\) notasyonunu kullanabiliriz, örneğin \\(a\\notin B\\).\n\n\n\n\n\n\n\n(a) Kesişim ve küme farkları\n\n\n\n\n\n\n\n(b) Birleşim\n\n\n\n\nŞekil 4.1: Temel küme işlemleri\n\n\nKümelerin birleşimi \\(A\\)’da ya da \\(B\\) de (ya da her ikisinde) yer alan nesneleri içerir: \\[\nA\\cup B=\\{x\\,\\mid\\, x \\in A \\text{ ya da  } x \\in B\\}\n\\] Kümelerin birleşimini endeks kümesi \\(I\\) olan bir küme dizisi için de tanımlayabiliriz: \\[\n\\bigcup_{i \\in I} A_i=\\{a\\,\\mid\\,a \\in A_i \\text{ her } i \\in I\\}\n\\]\n\nÖrnek 4.1 Yukarıda tanımladığımız \\(A\\) ve \\(B\\) kümelerinin birleşimi: \\[\nA\\cup B = \\{a,b,c,d,e,f,g,h\\}\n\\]\n\nKümelerin kesişimi ise hem \\(A\\) hem de \\(B\\)’de yer alan nesnelerden oluşur. \\[\nA\\cap B=\\{x\\,\\mid\\, x \\in A \\text{ ve } x \\in B\\}\n\\]\n\nÖrnek 4.2 \\(A\\) ve \\(B\\) kümelerinin kesişim kümesi: \\[\nA\\cap B = \\{d,e\\}\n\\] olur (bkz. Şekil 4.1).\n\nKüme farkı bir kümenin diğer kümeden farklı olan elemanlarının oluşturduğu yeni küme olarak tanımlanır ve \\(A \\setminus B\\) ya da \\(A - B\\) ile gösterilir.\n\nÖrnek 4.3 A ve B kümelerinin farkı\n\\[\nA \\setminus B = \\{a, b, c\\}\n\\] \\[\nB \\setminus A = \\{f, g, h\\}\n\\]\n\nKüme eşitliği iki kümenin tam olarak aynı elemanlardan oluşması durumudur ve \\(A=B\\) ile gösterilir.\n\nÖrnek 4.4 \\[\nA = \\{a,b,c,d,e\\}, \\quad B = \\{d,e,f,g,h\\} \\quad \\Rightarrow \\quad A \\neq B.\n\\] Her iki küme aynı elemanlardan oluşmadığı için \\(A\\) ve \\(B\\) kümeleri eşit değildir.\n\nBir kümenin tümleyeni o kümede yer almayan sonuçlardan oluşan kümedir ve \\(A^c\\) ya da \\(\\bar{A}\\) ile gösterilir.\n\nÖrnek 4.5 \\[\nA = \\{a,b,c,d,e\\}, \\quad B = \\{d,e,f,g,h\\}\n\\] tanımlı olsun. \\(A\\)’nın tümleyeni \\[\nA^c = (A\\cup B) \\setminus A = \\{a,b,c,d,e,f,g\\} \\setminus \\{a,b,c,d,e\\} = \\{f,g\\}\n\\] ve \\(B\\)’nin tümleyeni \\[\nB^c = (A\\cup B) \\setminus B = \\{a,b,c,d,e,f,g\\} \\setminus \\{d,e,f,g\\} = \\{a,b,c\\}\n\\] olur.\n\n\nÖrnek 4.6 (R ile küme işlemleri) R programını kullanarak birleşim (union), kesişim (intersect), küme farkı (setdiff) ve küme eşitliği (setequal) gibi işlemleri yapabiliriz.\n\n# R'da nasıl yapılır \n# A ve B kümelerini string vektör olarak tanımlayalım: \nA &lt;- c(\"Elma\", \"Armut\", \"Kiwi\")\nA\n\n[1] \"Elma\"  \"Armut\" \"Kiwi\" \n\nB &lt;- c(\"Elma\", \"Portakal\", \"Erik\", \"Kiwi\")\nB\n\n[1] \"Elma\"     \"Portakal\" \"Erik\"     \"Kiwi\"    \n\n\n\n# A ve B kümelerinin birleşimi\nunion(A, B)\n\n[1] \"Elma\"     \"Armut\"    \"Kiwi\"     \"Portakal\" \"Erik\"    \n\n\n\n# A ve B kümelerinin kesişimi\nintersect(A, B)\n\n[1] \"Elma\" \"Kiwi\"\n\n\n\n# A\\B, A fark B = A'da olup B'de olmayan nesneler\nsetdiff(A, B)\n\n[1] \"Armut\"\n\n\n\n# B\\A, B fark A = B'de olup A'da olmayan nesneler\nsetdiff(B, A)\n\n[1] \"Portakal\" \"Erik\"    \n\n\n\n# kümeler eşit mi\nsetequal(A, B) \n\n[1] FALSE"
  },
  {
    "objectID": "Olasilik.html#örneklem-uzayı-ve-olaylar",
    "href": "Olasilik.html#örneklem-uzayı-ve-olaylar",
    "title": "4  Olasılık",
    "section": "4.2 Örneklem Uzayı ve Olaylar",
    "text": "4.2 Örneklem Uzayı ve Olaylar\nBir küme gözlem veya ölçümlerden oluşabilir. Bu gözlemleri üreten sürece deney ve deneyin eğer mümkünse tekrarlanmasına ise deneme ya da tekrar adı verilir. Olanaklı tüm sonuçlardan oluşan kümeye örneklem uzayı ya da evrensel küme adı verilir ve \\(S\\) ile gösterilir. Örneğin hilesiz bir para atılırsa bu ya yazı (Y) ya da tura (T) ile sonuçlanır. Öyleyse örneklem uzayı \\[\nS = \\{T,Y\\}\n\\] olur. \\(T\\) ya da \\(Y\\) ile sonuçlanacak bu deneyin özellikleri kesin olarak bilinir. Aslında bu sonuçları üreten deneyi bir “model” olarak düşünebiliriz. Eğer bu modelde paranın hilesiz olduğu biliniyorsa bu sonuçlara belirli olasılıklar atayabiliriz. Bu varsayım altında bu modelde \\(T\\) gelme olasılığı %50’dir diyebiliriz. Aslında olasılık atamak için paranın hilesiz olması bir şart değildir. Olasılıklar kişiden kişiye değişen (sübjektif/öznel) bir niteliğe sahip olabilir. Bu konuya daha sonra değineceğiz.\n\\(A\\) ve \\(B\\) olaylarının kesişim kümesi boş kümeyse \\[\nA\\cap B = \\emptyset\n\\] bu olaylara karşılıklı bağdaşmaz ya da ayrık olaylar denir. Para atma deneyinde \\(A=\\{T\\}\\) ve \\(B=\\{Y\\}\\) olayları ayrık olaylardır. Her iki olay da örneklem uzayının bir alt kümesidir ve \\(A\\subset S\\) ile gösterilir. Kesişimleri ise boş kümedir, yani hiç bir elemanı yoktur.\nTura gelme olasılığının %50 olduğunu nereden biliyoruz? Sadece iki olası sonuç olduğu için mi? Şimdi başka bir deney tanımlayalım. Bu deneyde pay senedi piyasasının günlük hareketlerini gözlemliyoruz. Örneğin İstanbul Borsası’nda BIST100 endeksinin günlük kapanış değerlerini takip ettiğimizi düşünelim. Kapanış değerinin önceki kapanışa göre ya artar ya da azalır (endeksin aynı kalması durumunu göz ardı edelim). Örneklem uzayını \\[\nS=\\{+,~-\\}\n\\] ile gösterebiliriz. Burada \\(+\\) yukarı yönlü hareketi, \\(-\\) ise aşağı yönlü hareketi göstermektedir. Burada başka semboller ya da sayılar da kullanılabilir, örneğin \\(S=\\{1,~0\\}\\). Endeksin önceki güne göre artma olasılığı kaçtır? Yazı-Tura deneyinde olduğu gibi kolayca %50-%50 olasılıklarını atayabilir miyiz? Bu konuya izleyen alt bölümlerde tekrar değineceğiz.\n\nÖrnek 4.7 İki madeni para atılıyor ve sonuçlar kaydediliyor. Örneklem uzayını oluşturunuz. \\(A\\) “en az bir Yazı gelmesi” kümesinde kaç eleman vardır?\nÇözüm:\nİki madeni para atıldığında ortaya çıkabilecek tüm sonuçların kümesi \\[\nS = \\{TT, TY, YT, YY\\}\n\\] olarak yazılabilir. En az bir Yazı gelmesi şeklinde tanımlanan \\(A\\) olayı \\[\nA = \\{TY, YT, YY\\}\n\\] üç temel sonuçtan oluşur. Bu olaylardan herhangi biri gerçekleşirse A olayı gerçekleşmiş olur.\n\n\nÖrnek 4.8 İki zar atılıyor ve sonuçlar kaydediliyor. \\(A\\) olayı toplamın 4 olması \\(B\\) olayı ise toplamın 5’ten küçük olması şeklinde tanımlanıyor. Bu kümeleri oluşturunuz. \\(A\\cap B\\) kaç eleman içerir?\nÇözüm:\nBir zar atıldığında olanaklı sonuçlardan oluşan küme \\[\nZ_1=\\{1,2,3,4,5,6\\}\n\\] ve benzer şekilde ikinci zar için \\[\nZ_2=\\{1,2,3,4,5,6\\}\n\\] İki zar atıldığında ortaya çıkabilecek sonuçlar \\(Z_{1i},Z_{2j}\\), \\(i,j=1,\\ldots,6\\) olacaktır. Öyleyse örneklem uzayının temel sonuçları, birinci zar ve ikinci zarın sonuçları \\((Z_1,Z_2)\\) olmak üzere aşağıdaki gibi yazılabilir:\n\\[\nS = \\{(1,1),~(1,2),~(1,3),~(1,4),\\ldots,(6,4),~(6,5),~(6,6)\\}\n\\] Bu örneklem uzayı 36 temel sonuçtan oluşmaktadır (bkz Şekil 4.2).\n\n\n\n\n\nŞekil 4.2: İki zar atışı için örneklem uzayı\n\n\n\n\n\\(A\\) olayı zarların toplamının 4 olması: \\[\nA=\\{(1,3),~(3,1),~(2,2)\\}\n\\] \\(B\\) ise toplamın beşten küçük olması: \\[\nB = \\{(1,1),~(1,2),~(2,1),~(1,3),~(3,1),~(2,2)\\}\n\\] olarak tanımlanmıştı. Bu olayların kesişimi \\[\nA\\cap B = \\{(1,3),~(3,1),~(2,2)\\}\n\\] üç eleman içermektedir.\n\n\nÖrnek 4.9 Örneklem uzayı \\(S\\) tüm pozitif tamsayılardan oluşsun (sayma sayıları). \\(A\\subset S\\) kümesi çift tamsayılardan oluşsun. \\(A\\)’nın tümleyenini, \\(A^c\\), bulunuz.\nÖrneklem uzayı \\[\nS=\\{1,2,3,4,\\ldots\\}\n\\] \\[\nA = \\{2,4,6,\\ldots\\}\n\\] \\(A\\) kümesinin tümleyeni \\[\nA^c=\\{1,3,5,\\ldots\\}\n\\] olur. Birleşimleri örneklem uzayını verir: \\[\nA\\cup A^c = S\n\\] Kesişimleri ise boş kümedir: \\[\nA\\cap A^c = \\emptyset\n\\]"
  },
  {
    "objectID": "Olasilik.html#olasılık-tanımları",
    "href": "Olasilik.html#olasılık-tanımları",
    "title": "4  Olasılık",
    "section": "4.3 Olasılık Tanımları",
    "text": "4.3 Olasılık Tanımları\nGünlük hayatımızda olasılık ve şans kavramlarını sıklıkla kullanırız. Hepimiz hilesiz para deneyinde tura gelme olasılığının 0.5 olduğunu kabul ederiz. Borsa endeksinin yarın yükseleceğine %70 olasılık atayan birine karşı bir başkası %40 olduğunu düşünebilir. A ve B takımları arasında oynanacak bir futbol maçında A takımının kazanma şansını bir arkadaşınız %90 görebilir. Bir başkası bu olasılığa 60% verebilir. Acaba bu olasılıklar atanırken nasıl bir süreç takip ediliyor? Burada A-B futbol maçının 100 tekrar ettiğinde bunların 60’ında ya da 80’inde A takımının kazanacağı mı ima ediliyor? Ya da 0-1 (0-100%) arasında tanımlı bu sayı bizim ilgili olayın gerçekleşme şansına ilişkin kişisel inancımızı/güvenimizi mi yansıtıyor?\n\n4.3.1 Sıklık (Frekans) Yaklaşımı\nHilesiz bir para atımı “modelinde” T sonucuna kolayca olasılık atamıştık. Bu olasılığı \\[\n\\mathbb{P}(T) = 0.5\n\\] olarak yazabiliriz. Burada \\(\\mathbb{P}(A)\\) olasılık ölçüsünü ifade eder ve “A olayının olasılığı” şeklinde okunur. Benzer şekilde yazı gelme olasılığı da, \\(\\mathbb{P}(Y)=0.5\\), tanımlanabilir. Olasılık ölçüsü \\(\\mathbb{P}(\\cdot)\\) bir örneklem uzayındaki olaylara 0 ile 1 arasında değerler atayan bir fonksiyon olarak düşünülebilir.\nSıklık (frekans) yaklaşımında bu deneyin çok sayıda tekrarlandığı düşünülür. Bu tekrarlar içinde ilgili olayın gerçekleşme sayısı belirlenir. \\(A\\) olayının gerçekleşme sayısının toplam tekrar sayısına oranının tekrar sayısı sonsuza giderkenki limiti ilgili olasılığı verir: \\[\n\\mathbb{P}(A) =\\lim_{n\\rightarrow\\infty} \\frac{\\mbox{A olayının gerçekleşme sayısı}}{\\mbox{Toplam tekrar sayısı}}=\\lim_{n\\rightarrow\\infty}\\frac{n_A}{n}\n\\tag{4.1}\\]\nBu tanımı somutlaştırmak için R programını kullanabiliriz. Kullanıcı tarafından girilen bir vektörden rassal örneklemeler yapmamızı sağlayan sample() fonksiyonunu kullanarak bu deneyin simülasyonunu yapabiliriz. Örnek olarak Yazı-Tura deneyini ele alalım. Örneklem uzayını \"T\", \"Y\" olarak tanımlayacağız ve yerine koyma yöntemiyle bu iki sonuçtan birini rassal olarak çekeceğiz. \\(A\\) olayını Tura gelmesi olarak tanımlarsak sıklık yaklaşımına göre \\[\n\\mathbb{P}(A) =\\lim_{n\\rightarrow\\infty} \\frac{\\mbox{Tura sayısı}}{\\mbox{Toplam para atışı tekrar sayısı}}=0.5\n\\] olduğunu göstermek istiyoruz.\n\nset.seed(2468) # aynı sonuçlar için gerekli başlangıç \nn &lt;- 10\nyazı_tura_deneyi &lt;- sample(c(\"T\", \"Y\"), n, replace = TRUE)\nyazı_tura_deneyi\n\n [1] \"Y\" \"Y\" \"T\" \"T\" \"Y\" \"Y\" \"Y\" \"T\" \"Y\" \"T\"\n\n\nBu deneyin 10 tekrarlık bir dizilimi yukarıda verildi. Buna göre 10 tekrardan\n\nsum(yazı_tura_deneyi == \"T\") # Tura gelen durumların sayısı\n\n[1] 4\n\n\ndördünün tura geldiğini görüyoruz.\nOlasılığın sıklık tanımını görselleştirmek için deneyi birden 100’e kadar tekrarlayalım. Her tekrar için T gelme oranını kaydedelim ve grafiğini çizelim:\n\nset.seed(123)\nN &lt;- 100\nP &lt;- numeric(N)\nfor (n in 1:N){\n  x &lt;- sample(c(1, 0),      # 1=Tura, 0=Yazı\n              n, \n              replace = TRUE)\n  P[n] &lt;- sum(x==1)/n\n}\n# 1 = Tura, 0 = Yazı\nplot(P, type=\"l\", \n     xlab=\"Yazı-Tura tekrar sayısı\", \n     ylab=\"Tura gelme oranı\")\nabline(h=0.5, lty=\"dashed\", col=\"red\")\n\n\n\n\nŞekil 4.3: Tura gelme sıklığı, n=1,…,100\n\n\n\n\n100 tekrar sonucunda\n\nP[N]\n\n[1] 0.44\n\n\nTura gelme “sıklığı” ya da “olasılığı” 0.44 oldu. Şimdi tekrar sayısını 1000 yapalım:\n\nset.seed(155)\nN &lt;- 1000\nP &lt;- numeric(N)\nfor (n in 1:N){\n  x &lt;- sample(c(1, 0), n, replace = TRUE)\n  P[n] &lt;- sum(x==1)/n\n}\n# 1 = Tura, 0 = Yazı\nP[N]\n\n[1] 0.496\n\n# grafik\nplot(P, type=\"l\", \n     xlab=\"Yazı-Tura tekrar sayısı\", \n     ylab=\"Tura gelme oranı\")\nabline(h=0.5, lty=\"dashed\", col=\"red\")\n\n\n\n\nŞekil 4.4: Tura gelme sıklığı, n=1,…,1000\n\n\n\n\nTura gelme sıklığı 0.496 oldu ve teorik olasılığa daha fazla yaklaştı. Her atışın sonucu bağımsız olduğundan, kısa vadede sonuçlar rastgele dağılabilir. Örneğin, ilk 10 atışta 7 kez tura gelebilir, 3 kez yazı gelebilir. Ancak uzun vadede bu sıklık, teorik olasılık olan 0.5’e yaklaşacaktır.\nPay senedi piyasasında endeksin günlük kapanış değerinin yönünün olasılığını bulmaya çalışalım. BIST100 endeksinin 03/01/2003-29/09/2021 dönemi günlük kapanış değerleri kullanılarak yüzde değişimleri hesaplanmıştır. Günlük değişimlerin işaret \\(+\\) ise 1, \\(-\\) ise 0 değerini alan bir değişken oluşturulmuştur. BIST100yon.rda bu değişkeni içermektedir:\n\nload(\"Data/BIST100yon.rda\")\nn &lt;- length(BIST100yon)\nn \n\n[1] 4695\n\ntable(BIST100yon)/n\n\nBIST100yon\n        0         1 \n0.4656017 0.5343983 \n\n\n4695 günlük yön bilgisinden hareketle borsanın düşüşle kapandığı günlerin yaklaşık %47, artışla kapandığı günlerin ise %53 olduğunu görüyoruz.\n\nartis_oran &lt;- cumsum(BIST100yon)/(1:n)\n# ilk 10 gün \noptions(digits=2)\nartis_oran[1:10]\n\n [1] 1.00 0.50 0.33 0.50 0.60 0.50 0.57 0.50 0.56 0.60\n\n# grafik\nplot(artis_oran, type=\"l\", \n     xlab=\"\", \n     ylab=\"\")\nabline(h=0.5, lty=\"dashed\", col=\"red\")\n\n\n\n\nŞekil 4.5: Artışla kapanan günlerin oranı, kümülatif\n\n\n\n\nŞekil 4.5 dönem boyunca borsanın artışla kapandığı günlerin oranını göstermektedir. Borsanın yönünün ilk dönemler dışında pozitif olmasının olasılığı %50’nin biraz üzerindedir.\nBuradan hareketle borsanın yönünün yazı-tura atmakla benzer olduğu sonucuna varamayız. Hilesiz para ya da zar atma gibi örneklerde sonuçları üreten süreci ya da modeli biliyoruz. Borsa örneğinde ise günlük kapanış değerinin yönüne ilişkin modeli, yani gözlenen sonuçların üretildiği süreci bilmiyoruz. Sadece sonuçları yani verileri gözlemliyoruz. Tipik olarak borsa endekslerinde günlük pozitif değişimler negatif değişimlerden biraz daha fazla gözlemlenir. Yazı-tura oyununda her tekrar bir öncekinden bağımsızdır. Borsanın yönünü tahmin etmek isteyen bir yatırımcı ise bunu yazı-tura atar gibi yapmaz. Pay senedi ve benzeri finansal piyasalar çok sayıda faktörden etkilenir. Bu nedenle günlük değişimler geçmişteki gelişmelerden bağımsız tekrarlar gibi düşünülemez. Şöyle de düşünebiliriz. Yazı-Tura oyununun sonucu için en iyi olasılık tahminimiz %50 iken, borsanın yönü için en iyi tahminimiz uzun dönem ortalaması %53 olmayabilir. Örneğin son beş günlük dönemde hep artışla kapanan bir piyasada sonraki gün için yön olasılığımız %50’den daha büyük olabilir (ya da tersi). Bağımsızlık, tahmin ve tahminci kavramlarını ilerleyen bölümlerde daha detaylı tartışacağız.\nŞimdi iki para atımı deneyini ele alalım. Bu durumda örneklem uzayının \\[\nS = \\{TT, TY, YT, YY\\}\n\\] olduğunu biliyoruz. A olayını “iki paranın tura olması” ve B olayını “en az bir paranın yazı gelmesi” olarak tanımlayalım. \\[\nA = \\{TT\\}\n\\] \\[\nB = \\{TY, YT, YY\\}\n\\] Sezgisel olarak bu olasılıkların \\(P(A)=0.25\\) ve \\(P(B)=0.75\\) olduğunu bulabiliriz. Paraların hilesiz olduğu ve yinelemelerin birbirlerini etkilemediği varsayımları altında örneklem uzayındaki her bir olayın gerçekleşme şansı \\(1/4\\) olur. Buradan ilgili olasılıklar kolayca bulunabilir. Şimdi R ile bu deneyin simülasyonunu yapalım:\n\nset.seed(155)\nN &lt;- 1000\nP_A &lt;- numeric(N) \n\nfor (n in 1:N){ \n  para1 &lt;- sample(c(1, 0), n, replace = TRUE) # 1.para, T=1, Y=0\n  para2 &lt;- sample(c(1, 0), n, replace = TRUE) # 2.para, T=1, Y=0 \n  P_A[n] &lt;- sum(para1==1 & para2==1)/n        # (1,1) olayının sıklığı\n}\nP_A[N]\n\n[1] 0.24\n\n# grafik\nplot(P_A, type=\"l\", \n     xlab=\"İki para deneyi tekrar sayısı\", \n     ylab=\"Tura-Tura gelme oranı\")\nabline(h=0.25, lty=\"dashed\", col=\"red\")\n\n\n\n\nŞekil 4.6: İki para deneyinde Tura-Tura gelme sıklığı\n\n\n\n\n\nset.seed(156)\nN &lt;- 1000\nP_B &lt;- numeric(N) \n\nfor (n in 1:N){ \n  para1 &lt;- sample(c(1, 0), n, replace = TRUE)  # 1.para, T=1, Y=0\n  para2 &lt;- sample(c(1, 0), n, replace = TRUE)  # 2.para, T=1, Y=0\n  P_B[n] &lt;- sum(para1==0 | para2==0)/n  # B=\"en az biri 0\" olayının sıklığı\n}\nP_B[N]\n\n[1] 0.76\n\n# grafik\nplot(P_B, type=\"l\", \n     xlab=\"İki para deneyi tekrar sayısı\", \n     ylab=\"P(en az bir Yazı)\")\nabline(h=0.75, lty=\"dashed\", col=\"red\")\n\n\n\n\nŞekil 4.7: İki para deneyinde en az birinin Yazı gelme sıklığı\n\n\n\n\nSıklık yaklaşımının simülasyonu sezgisel olasılıklarla yaklaşık aynı sonucu verdi.\nR’da olasılıkların simülasyonunu yapmanın başka bir yolu replicate() fonksiyonudur. İki para atışında TT gelme olasılığını yaklaştırmak istersek aşağıdaki komutları kullanabiliriz:\n\nset.seed(567)\nTT &lt;- replicate(10000, {\n  iki_para &lt;- sample(c(\"T\", \"Y\"), 2, replace = TRUE)\n  iki_para[1]==\"T\" & iki_para[2]==\"T\"\n})\nmean(TT)\n\n[1] 0.25\n\n\nBurada replicate() fonksiyonunun ilk girdisi tekrar sayısıdır. Küme parantezi {} içinde ise replikasyonu yapacağımız sample() fonksiyonu yer almaktadır. Sonuçlar ise iki_para vektöründe saklanacaktır. iki_para[1]==\"T\" & iki_para[2]==\"T\" komutu ise çıktıyı belirleyecektir. Her iki koşul doğru olduğunda TRUE (1) ya da FALSE (0) değerini alacaktır. Bunun ortalaması ise gerçekleşme oranını verecektir. Alıştırma olarak replicate() komutunu kullanarak “en az birinin Yazı gelmesi” olasılığını yaklaştırınız.\n\n\n4.3.2 Öznel Yaklaşım\nYazı-Tura ve borsanın yönü deneylerini tekrar düşündüğümüzde Tura gelme olasılığı ile borsanın günü artışla tamamlama olasılığının önemli bir farka işaret ettiğini görüyoruz. Tura gelme olasılığı, paranın hilesiz olduğu ve bağımsızlık varsayımları altında, herkes tarafından %50 olarak kabul edilir. Bu anlamda objektif/nesneldir. Borsanın yarın artışla kapanma olasılığı ise özneldir, kişiden kişiye değişir. Aslında yazı-tura deneyinde de olasılıkların öznel olarak tanımlanması mümkündür. Atılan paranın hileli olduğunu düşünüyorsak %50-%50 olasılık yerine %40-%60 olasılıkların daha uygun olduğu sonucuna varabiliriz.\nBayesçi ya da sübjektif/öznel yaklaşım, frekans yaklaşımına göre olasılık kavramını daha geniş bir perspektiften ele alır. Bu yaklaşım olasılığı “bir olayın gerçekleşmesine ilişkin inanç düzeyi” olarak tanımlar. Borsanın gelecekteki yönüne ya da bir futbol maçının sonucuna ilişkin olasılıklar kişiden kişiye değişebilir.\nÖnemli farklara sahip olsalar da hem sıklık hem de öznel olasılık yaklaşımları aynı matematiksel kurallara uyar."
  },
  {
    "objectID": "Olasilik.html#olasılık-kuralları",
    "href": "Olasilik.html#olasılık-kuralları",
    "title": "4  Olasılık",
    "section": "4.4 Olasılık Kuralları",
    "text": "4.4 Olasılık Kuralları\nBir deneyin olanaklı tüm sonuçlarını içeren örneklem uzayını \\(S\\), bu kümedeki temel sonuçları \\(E_i\\), ve bu uzay içinde tanımlı herhangi bir olayı \\(A\\) ve \\(A\\)’nın olasılığını \\(\\mathbb{P}(A)\\) ile gösterelim.\n\nÖnerme 4.1 (Olasılıklar 0 ile 1 arasında değerler alır) \\(S\\) içinde tanımlı bir \\(A\\) olayı \\[\n0\\le \\mathbb{P}(A)\\le 1\n\\] koşulunu sağlamak zorundadır. Olasılıklar negatif ya da 1’den büyük olamaz. \\(\\mathbb{P}(A)=0\\) ise bu olayın kesin olarak gerçekleşmeyeceği, \\(\\mathbb{P}(A)=1\\) ise kesin olarak gerçekleşeceği anlamına gelir.\n\n\nÖnerme 4.2 (Bir olayın olasılığı) \\(S\\) içinde tanımlı bir \\(A\\) olayının olasılığı \\[\n\\mathbb{P}(A) = \\sum_{i\\in A} \\mathbb{P}(E_i)\n\\tag{4.2}\\] ile bulunabilir. Bu toplam \\(A\\) olayının gerçekleşmesi ile sonuçlanan temel olaylar üzerinedir.\n\n\nÖnerme 4.3 (Olasılıkların toplamı) \\(S\\) örneklem uzayının olasılığı \\[\n\\mathbb{P}(S) = \\sum_{i\\in S} \\mathbb{P}(E_i) = 1\n\\] olur. Örneklem uzayında yer alan temel sonuçları olasılıklarının toplamı birdir.\n\nBu önermelerden hareketle olasılık hesaplamalarına ilişkin tüm kuralları türetebiliriz. \\(A\\) olayının gerçekleşmemesini \\(A\\) kümesinin tümleyeni olarak tanımlarsak: \\[\n\\mathbb{P}(A)+\\mathbb{P}(A^c) = \\mathbb{P}(S)=1\n\\tag{4.3}\\] Buradan \\[\n\\mathbb{P}(A^c)=1-\\mathbb{P}(A)\n\\tag{4.4}\\] olur. Boş kümenin olasılığı her zaman sıfırdır: \\[\n\\mathbb{P}(\\emptyset)=\\mathbb{P}(S^c)=0\n\\]\n\\(A\\) ve \\(B\\) karşılıklı bağdaşmaz (ayrık) iki olay ise bu olayların birleşiminin olasılığı \\[\n\\mathbb{P}(A\\cup B)=\\mathbb{P}(A)+\\mathbb{P}(B)\n\\tag{4.5}\\] olur. Ayrık olmadıkları durumda bu kural geçerli olmaz.\n\nÖrnek 4.10 Türkiye’e kan grubu sıklıkları yüzde olarak aşağıdaki tabloda verilmiştir. Şekil 4.8 bu oranların (%) çubuk çizimini göstermektedir.\n\n# Türkiye'de gözlemlenen kan grubu sıklıkları\n# kaynak: https://en.wikipedia.org/wiki/Blood_type_distribution_by_country\nkan_grubu &lt;- c(29.8, 37.8, 14.2, 7.2, 3.9, 4.7, 1.6,0.8)\nnames(kan_grubu) &lt;- c(\"O+\", \"A+\", \"B+\", \"AB+\", \"O−\", \"A−\", \"B−\", \"AB−\")\nprint(kan_grubu)\n\n  O+   A+   B+  AB+   O−   A−   B−  AB− \n29.8 37.8 14.2  7.2  3.9  4.7  1.6  0.8 \n\nbarplot(kan_grubu)\n\n\n\n\nŞekil 4.8: Türkiye’de gözlemlenen kan grubu sıklıkları, %\n\n\n\n\nBuna göre rassal seçilmiş bir bireyin kan grubunun O+ ya da A+ olma olasılığı kaçtır?\nÇözüm:\nBu olaylar karşılıklı bağdaşmaz olduğu için istenen olasılık \\[\n\\mathbb{P}(\\mbox{O+ grubu} \\cup~ \\mbox{A+ grubu}) = \\%29.8 + \\%37.8= \\%67.6\n\\] olur.\n\n\\(A\\) ve \\(B\\) ayrık olaylar değilse, yani birlikte gerçekleşmeleri mümkünse, olayların birleşiminin olasılığı \\[\n\\mathbb{P}(A\\cup B)=\\mathbb{P}(A)+\\mathbb{P}(B)-\\mathbb{P}(A\\cap B)\n\\tag{4.6}\\] olur. Kesişim olasılığı, \\(\\mathbb{P}(A\\cap B)\\), bu olayların birlikte gerçekleşme olasılıklarıdır.\nBu kural genelleştirilebilir. \\(A\\), \\(B\\) ve \\(C\\) üç olay ise bu olayların birleşiminin olasılığı \\[\n\\mathbb{P}(A\\cup B\\cup C)=\\mathbb{P}(A)+\\mathbb{P}(B)+\\mathbb{P}(C) \\\\ -\\mathbb{P}(A\\cap B)-\\mathbb{P}(A\\cap C)-\\mathbb{P}(B\\cap C)+\\mathbb{P}(A\\cap B\\cap C)\n\\tag{4.7}\\]\n\nTanım 4.1 (Boole eşitsizliği) \\(A_1,\\ldots,A_k\\) bir olaylar dizisi ise bu olayların birleşiminin, \\(\\bigcup_{i=1}^k A_i\\) olasılığı \\[\n\\mathbb{P}\\left(\\bigcup_{i=1}^k A_i \\right)\\le \\sum_{i=1}^k \\mathbb{P}(A_i)\n\\tag{4.8}\\] olasılıklar toplamından küçük ya da eşit olur. \\(A_1,\\ldots,A_k\\) olayları karşılıklı bağdaşmaz ise \\[\n\\mathbb{P}\\left(\\bigcup_{i=1}^k A_i \\right) = \\sum_{i=1}^k \\mathbb{P}(A_i)\n\\tag{4.9}\\] eşitlik sağlanır. Aksi durumda \\[\n\\mathbb{P}\\left(\\bigcup_{i=1}^k A_i \\right) &lt; \\sum_{i=1}^k \\mathbb{P}(A_i)\n\\tag{4.10}\\] olur.\n\nÖrneklem uzayındaki her bir temel sonucun gerçekleşme olasılığı aynı ise ve örneklem uzayında toplam \\(n\\) temel sonuç varsa \\[\n\\mathbb{P}(E_i) = \\frac{1}{\\mbox{Temel sonuç sayısı}} = \\frac{1}{n}\n\\] olur.\n\nÖrnek 4.11 Altı yüzü olan hilesiz bir zar atıldığında temel sonuçların her biri için olasılık \\(1/6\\) olur. \\[\nS = \\{1,2,3,4,5,6\\}\n\\] \\[\n\\mathbb{P}(E_1) = \\ldots = \\mathbb{P}(E_6) = \\frac{1}{6}\n\\]\n\n\n\n\n\n\n\n(a) n=20\n\n\n\n\n\n\n\n(b) n=100\n\n\n\n\n\n\n\n\n\n(c) n=1000\n\n\n\n\n\n\n\n(d) n=10000\n\n\n\n\nŞekil 4.9: Zar atımı deneyinde gerçekleşen sıklıklar\n\n\nŞekil 4.9 zar atımı deneyinde temel olayların sıklıklarını göstermektedir. Tekrar sayısı \\(n\\) arttıkça temel olayların sıklıkları teorik olasılık değerine (\\(1/6\\)) yaklaşmaktadır.\n\nEğer bir \\(A\\) olayı örneklem uzayında tanımlı \\(n\\) temel olaydan \\(n_A\\) kadarını içeriyorsa \\[\n\\mathbb{P}(A) = \\frac{n_A}{n}\n\\] olur.\n\nÖrnek 4.12 Hilesiz zar deneyinde \\(A\\) olayını zarın çift gelmesi olarak tanımlarsak bu olayın gerçekleşmesiyle sonuçlanan temel olaylar \\[\nA = \\{2,4,6\\}\n\\] olur. Buradan \\[\n\\mathbb{P}(A) = \\frac{3}{6} = \\frac{1}{2}\n\\] bulunur. R programında bu deneyin 1000 tekrarını yapalım:\n\nset.seed(101)\noptions(digits = 4)\nx &lt;- sample(c(1,2,3,4,5,6), 1000, replace=TRUE)\nxcift &lt;- x[x==2|x==4|x==6]\n# A olayına yol açan temel olaylar\ntable(xcift)/1000\n\nxcift\n    2     4     6 \n0.159 0.177 0.166 \n\nsum(table(xcift)/1000)\n\n[1] 0.502\n\n#\nA &lt;- as.numeric((x==2) | (x==4) | (x==6))\ntable(factor(A, labels=c(\"Tek\",\"Çift\")))/1000\n\n\n  Tek  Çift \n0.498 0.502 \n\n#barplot(table(A)/1000, names.arg = c(\"Çift\",\"Tek\"), col=\"white\")\n\n\n\n\nÖrnek 4.13 Hilesiz bir madeni para 3 kere atılıyor ve gelen sonuçlar kaydediliyor. En az 2 tura gelme olasılığını bulun ve R programında simülasyonunu yapın.\nÇözüm:\nÖrneklem uzayını oluşturalım: \\[\nS=\\{TTT, ~TTY, ~TYT, ~YTT, ~YYT, ~TYY, ~YTY, ~YYY\\}\n\\] Bu temel olayların gerçekleşme şansı aynıdır: \\(1/8\\). Bunların arasında \\(A\\) olayına yol açan temel olaylar \\[\nA=\\{TTT, ~TTY, ~TYT, ~YTT\\}\n\\] olur. Öyleyse \\(A\\) olayının olasılığı \\[\n\\mathbb{P}(A)=\\frac{n_A}{n} = \\frac{4}{8} = 0.5\n\\] olur.\n\nset.seed(444)\nN &lt;- 1000\nE &lt;- matrix(NaN, nrow = N, ncol = 8) \ncolnames(E) &lt;- c(\"TTT\", \"TTY\", \"TYT\", \"YTT\", \"YYT\", \"TYY\", \"YTY\", \"YYY\")\npara1 &lt;- sample(c(1, 0), N, replace = TRUE)  # 1.para, T=1, Y=0\npara2 &lt;- sample(c(1, 0), N, replace = TRUE)  # 2.para, T=1, Y=0\npara3 &lt;- sample(c(1, 0), N, replace = TRUE)  # 2.para, T=1, Y=0\n# temel olaylar\nE[,1] &lt;- (para1==1 & para2==1 & para3==1)  # \nE[,2] &lt;- (para1==1 & para2==1 & para3==0) \nE[,3] &lt;- (para1==1 & para2==0 & para3==1) \nE[,4] &lt;- (para1==0 & para2==1 & para3==1) \nE[,5] &lt;- (para1==0 & para2==0 & para3==1) \nE[,6] &lt;- (para1==1 & para2==0 & para3==0) \nE[,7] &lt;- (para1==0 & para2==1 & para3==0) \nE[,8] &lt;- (para1==0 & para2==0 & para3==0) \n\nBurada \\(N\\times 8\\) boyutlu \\(E\\) matrisi temel olaylardan hangisinin gerçekleştiğini gösteren bir indikatör matrisidir. Örneğin ilk 10 denemenin sonuçları aşağıdaki gibidir:\n\nE[1:10,]\n\n      TTT TTY TYT YTT YYT TYY YTY YYY\n [1,]   0   0   0   0   0   0   1   0\n [2,]   0   0   0   0   0   1   0   0\n [3,]   0   0   1   0   0   0   0   0\n [4,]   0   0   1   0   0   0   0   0\n [5,]   1   0   0   0   0   0   0   0\n [6,]   0   0   0   0   0   0   1   0\n [7,]   0   0   0   0   0   0   0   1\n [8,]   0   0   0   0   0   0   0   1\n [9,]   1   0   0   0   0   0   0   0\n[10,]   0   0   0   0   0   1   0   0\n\n\nSatırlar denemeleri, sütunlar ise temel olayları göstermektedir. Hücrenin 0 olması o denemede sütunda belirtilen temel olayın gerçekleşmediği, 1 olması ise gerçekleştiği anlamına gelmektedir. Örneğin ilk denemede TTT olayı gerçekleşmemiştir. İlk satıra baktığımızda ilk tekrarda YYT olayının gerçekleştiğini görüyoruz. Her satırda sütunlardan sadece birinin 1 değerini alması gerekir, yani temel olaylar aynı anda gerçekleşemez (karşılıklı bağdaşmaz). Bunun doğrudan sonucu \\(E\\) indikatör matrisinin satır toplamlarının her bir satır için 1 olması ve bunların toplamının \\(N\\) olmasıdır. Örneğimizde\n\nsum(rowSums(E))\n\n[1] 1000\n\n\nolduğu kolayca görülür. Bu matrisin sütun ortalamaları temel olayların sıklıklarını gösterir:\n\n# sütun ortalamaları sıklıkları verir\ncolMeans(E)\n\n  TTT   TTY   TYT   YTT   YYT   TYY   YTY   YYY \n0.112 0.133 0.147 0.105 0.139 0.104 0.131 0.129 \n\n\nŞekil 4.10 temel olayların sıklıklarının çubuk grafiğini göstermektedir.\n\nbarplot(colMeans(E), col=\"white\")\n\n\n\n\nŞekil 4.10: İki para deneyinde temel olayların sıklıkları\n\n\n\n\nA olayının olasılığı A kümesinde yer alan temel olayların olasılıklarının toplamıdır. Yukarıdaki \\(E\\) matrisinden de görüleceği gibi birinci ve ikinci tekrarlarda A olayı gerçekleşmemişken, üçüncü, dördüncü ve beşinci tekrarlarda gerçekleşmiştir. Bunu ilgili sütunların toplamından hareketle bir indikatör değişkeni yardımıyla hesaplayabiliriz.\n\n# A = en az 2 Tura olasılığı \n# A = 1, olay gerçekleşti, \n#   = 0, olay gerçekleşmedi\nA &lt;- E[,1]+E[,2]+E[,3]+E[,4]\nsum(A)/N\n\n[1] 0.497\n\n\n1000 tekrarlı bu simülasyonda 3 para atımı deneyinde en az iki Tura gelme sıklığı 0.497 olmuştur. Tekrar sayısı arttırılarak teorik olasılığa daha fazla yaklaşılır."
  },
  {
    "objectID": "Olasilik.html#koşullu-olasılık",
    "href": "Olasilik.html#koşullu-olasılık",
    "title": "4  Olasılık",
    "section": "4.5 Koşullu Olasılık",
    "text": "4.5 Koşullu Olasılık\n\nTanım 4.2 (Bağımsızlık) Eğer \\(A\\) olayının gerçekleşmesi \\(B\\) olayını etkilemiyorsa (ya da tersi) bu iki olay birbirinden bağımsızdır. Bu durumda olayların birlikte gerçekleşme olasılığı \\[\n\\mathbb{P}(A\\cap B) = \\mathbb{P}(A)\\mathbb{P}(B)\n\\tag{4.11}\\] olur. Örneğin hilesiz bir para peşpeşe iki kere atıldığında birinci sonuç ikinci sonuç hakkında bilgi içermez, yani bu olaylar bağımsızdır. Öyleyse ikisinin de tura olma olasılığı \\(0.5\\times 0.5 = 0.25\\) olur.\n\n\\(A\\) ve \\(B\\) birbirinden bağımsız olmayan iki olay ise bu olayların birlikte gerçekleşme (\\(A\\cap B\\)) olasılığı ne olur? Bu durumda bir olay verilmişken (gerçekleşmişken) diğer olayın olasılığını, yani koşullu olasılıkları hesaplamamız gerekir.\n\\(B\\) verilmişken \\(A\\) olayının koşullu olasılığı \\[\n\\mathbb{P}(A|B)=\\frac{\\mathbb{P}(A\\cap B)}{\\mathbb{P}(B)}\n\\tag{4.12}\\] olur. Benzer şekilde \\(A\\) verilmişken \\(B\\) olayının koşullu olasılığı \\[\n\\mathbb{P}(B|A)=\\frac{\\mathbb{P}(A\\cap B)}{\\mathbb{P}(A)}\n\\tag{4.13}\\] olarak tanımlanır. \\(\\mathbb{P}(B|A)\\) ve \\(\\mathbb{P}(A|B)\\) notasyonundaki \\(|\\) sembolünün sağındaki olay verilmiş/gerçekleşmiş olaydır ve belirsizlik barındırmaz. \\(|\\) sembolünü R’daki “ya da” işlemiyle karıştırmayınız.\n\\(\\mathbb{P}(A|B)\\) ve \\(\\mathbb{P}(B|A)\\) koşullu olasılıklarının birbirine eşit olması gerekmez. Paydada yer alan tekil olasılıklar 0 ise koşullu olasılık tanımsız olur.\nKoşullu olasılık tanımında payın aynı olduğuna dikkat ediniz. Buradan hareketle \\[\n\\mathbb{P}(A\\cap B) = \\mathbb{P}(A|B)\\mathbb{P}(B)\n\\tag{4.14}\\] ve \\[\n\\mathbb{P}(A\\cap B) = \\mathbb{P}(B|A)\\mathbb{P}(A)\n\\tag{4.15}\\] yazabiliriz. Eğer \\(A\\) ve \\(B\\) birbirinden bağımsız olaylarsa bir olayın gerçekleşmesi diğeri hakkında bilgi vermez. Bu durumda \\[\n\\mathbb{P}(A|B) = \\mathbb{P}(A)\n\\] ve \\[\n\\mathbb{P}(B|A) = \\mathbb{P}(B)\n\\] olur.\n\nÖrnek 4.14 Hilesiz bir zar atılıyor ve çift sayı geldiği görülüyor. Zarın 6 olma olasılığı kaçtır?\nÇözüm:\n\\[\n\\mathbb{P}(\\{6\\}~|~ \\{2,4,6\\})=\\frac{\\mathbb{P}(\\{6\\}~\\cap~ \\{2,4,6\\})}{\\mathbb{P}(\\{2,4,6\\})}=\\frac{1/6}{3/6}=\\frac{1}{3}\n\\]\nR ile simülasyonu:\n\nset.seed(899)\n# payda: A ve B olasılığı \nA_ve_B &lt;- replicate(10000, {\n  zar &lt;- sample(1:6, 1, replace = TRUE)\n  (zar==6) & (zar==2 | zar==4 | zar==6)\n})\nP_A_ve_B &lt;- mean(A_ve_B)\n# pay: B olasılığı \nB &lt;- replicate(10000, {\n  zar &lt;- sample(1:6, 1, replace = TRUE)\n  (zar==2 | zar==4 | zar==6)\n})\nP_B &lt;- mean(B)\n# koşullu olasılık \nP_A_ve_B/P_B\n\n[1] 0.3347\n\n\n\n\nÖnerme 4.4 B olayı verilmişken A ve B olaylarının birlikte gerçekleşme olasılıkları B verilmişken A olayının koşullu olasılığıdır: \\[\n\\mathbb{P}(A\\cap B| B) = \\mathbb{P}(A|B)\n\\] İspat: Doğrudan koşullu olasılık tanımını kullanarak \\[\n\\begin{array}{lll}\n\\mathbb{P}(A\\cap B| B) &=& \\frac{\\mathbb{P}((A\\cap B)\\cap B)}{\\mathbb{P}(B)}\\\\\n              &=& \\frac{\\mathbb{P}(A\\cap (B\\cap B)}{\\mathbb{P}(B)}\\\\\n              &=& \\frac{\\mathbb{P}(A\\cap B)}{\\mathbb{P}(B)}=\\mathbb{P}(A|B)\\\\\n\\end{array}\n\\]\n\nAlıştırma: \\(\\mathbb{P}(A\\cup B|B)=?\\)"
  },
  {
    "objectID": "Olasilik.html#sayma-kuralları-ve-olasılık",
    "href": "Olasilik.html#sayma-kuralları-ve-olasılık",
    "title": "4  Olasılık",
    "section": "4.6 Sayma Kuralları ve Olasılık",
    "text": "4.6 Sayma Kuralları ve Olasılık\nÖrneklem uzayındaki nesnelerin ve bunların arasında ilgilendiğimiz olayın gerçekleşmesiyle sonuçlananların sayısının olasılık hesaplamaları için önemli olduğunu gördük. Çoğu durumda bu nesnelerin açıkça listelenmesi zordur ya da mümkün değildir. Listelemek yerine belirli kuralları takip ederek bu nesneleri sayabiliriz.\nSayma işlemlerinde dikkat etmemiz gereken ilk nokta nesnelerin yerine konarak mı yoksa yerine konmadan mı seçildiğidir. Yerine koymadan örneklemede nesneler teker teker seçilir ve tekrar yerine konmaz. Diğer durumda ise seçilen nesneler yerine konur ve tekrar seçilme şansı olur. Örneğin sample() fonksiyonu ile 1-10 arası rakamdan 5’ini yerine koyarak ve koymadan seçelim:\n\nset.seed(3)\nsample(1:10, 5, replace = TRUE)\n\n[1]  5 10  7  4 10\n\nsample(1:10, 5, replace = FALSE)\n\n[1]  8 10  4  2  5\n\n\nreplace = TRUE ile yerine koyarak rassal seçim yaptık. Bu durumda bazı nesnelerin tekrar seçildiğini görüyoruz.\n\nTanım 4.3 (Çarpım kuralı) Eğer bir işlemi ya da eylemi yapmanın \\(n_1\\) yolu varsa, başka bir işlemi yapmanın da \\(n_2\\) yolu varsa bu işlemleri birlikte yapmanın \\(n_1\\times n_2\\) yolu vardır. Bu kural ikiden fazla eylemler için genelleştirilebilir.\n\nEğer her tekrarda olası sonuçların sayısı \\(n\\) ise deney \\(r\\) kere tekrar edildiğinde ortaya çıkan tüm sonuçların sayısı \\(n^r\\) olur. Bu kuralı 3 para atımı deneyinde örtük olarak kullanmıştık. Her para atımı tekrarının 2 sonucu vardır ve 3 kez tekrar edilirse olanaklı tüm sonuçların sayısı \\(2^3=8\\) olur.\n\nTanım 4.4 (Permütasyon) Yerine koymadan seçim yaptığımızda ve sıranın önemli olduğu durumlarda \\(n\\) nesnenin kaç farklı şekilde düzenlenebileceğini bulmak için faktöriyel işlemcisini \\[\nn!=n\\times (n-1)\\times (n-2)\\times \\ldots \\times 2\\times 1\n\\] kullanabiliriz. Faktöriyel (\\(!\\)) işlemcisi ayırdedilebilir nesnelerin kaç farklı şekilde sıralanabileceğini gösterir. Örneğin \\(\\{a,b,c,d,e\\}\\) nesnelerini sıralamanın \\(5!=120\\)\n\nfactorial(5)\n\n[1] 120\n\n\nyolu vardır. Hiç bir nesne içermeyen bir kümeyi sıralamanın ise sadece 1 yolu vardır. Bu nedenle \\(0!=1\\) olarak tanımlıdır.\nBu işlemi boşluk doldurmanın farklı yolları olarak düşünebiliriz. Aşağıdaki gibi 5 tane boşluk ya da kutu varsa, elimizdeki 5 nesneyi bu kutulara kaç farklı şekilde yerleştirebiliriz?\n\\[\n-~-~-~-~-\n\\] Birinci kutu ya da boşluğu doldurmanın 5 yolu vardır: \\[\n5~-~-~-~-\n\\] İlk seçim yapıldıktan sonra geriye 4 nesne kalır, öyleyse ikinci kutuyu doldurmanın 4 yolu vardır: \\[\n5~4~-~-~-\n\\]\nBenzer şekilde ilerlenirse faktöriyel tanımına ulaşılır ve çarpım kuralı uygulanarak ortaya çıkacak sonuç sayısı \\[\n5\\cdot 4 \\cdot 3 \\cdot 2\\cdot 1 = 5!\n\\] olur. Eğer yerine koyarak seçim yapsaydık bu durumda toplam nesne sayısı her boşluk doldurma eyleminde aynı olduğu için çarpım kuralından hareketle \\[\n5\\cdot 5 \\cdot 5 \\cdot 5\\cdot 5 = 5^5 = 3125\n\\] olur.\nEğer \\(n\\) nesne arasından yerine koymadan \\(r\\) tanesini seçmek istiyorsak permütasyon tanımına ulaşırız: \\[\nP_r^n =\\frac{n!}{(n-r)!}\n\\] Eğer \\(n\\) nesne arasından \\(n\\) nesneyi yerine koymadan seçiyorsak faktoriyel tanımını elde ederiz.\nÖrneğin \\(\\{a,b,c,d,e\\}\\) harfleri arasından ikisini seçmenin farklı yollarının sayısı \\[\nP_2^5 =\\frac{5!}{(5-2)!}=\\frac{5\\cdot4\\cdot 3!}{3!}=20\n\\] olur.\n\n\nTanım 4.5 (Kombinasyon) Permütasyonda sıra önemliydi. Eğer yerine koymadan seçim yapıyorsak ve sıralama önemli değilse \\(n\\) nesnenin \\(r\\) kombinasyonu \\[\nC^n_r \\equiv \\begin{pmatrix}n\\\\ r \\end{pmatrix}  = \\frac{n!}{r!(n-r)!}\n\\] ile bulunur. Örneğin \\(\\{a,b,c,d,e\\}\\) arasından \\(r=2\\) harfin sırası önemsiz olarak seçilme sayısı \\[\n\\begin{pmatrix}n\\\\ r \\end{pmatrix}  = \\frac{5!}{2!(5-2)!}=10\n\\]\n\nchoose(5,2)\n\n[1] 10\n\n\nolur. combn() fonksiyonu ile bu nesneleri listeleyebiliriz:\n\ncombn(c(\"a\",\"b\",\"c\",\"d\",\"e\"), 2)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n[1,] \"a\"  \"a\"  \"a\"  \"a\"  \"b\"  \"b\"  \"b\"  \"c\"  \"c\"  \"d\"  \n[2,] \"b\"  \"c\"  \"d\"  \"e\"  \"c\"  \"d\"  \"e\"  \"d\"  \"e\"  \"e\"  \n\n\nPermütasyonda (ab) ile (ba) farklı sonuç olarak kabul ediliyordu. Kombinasyonda ise sıra önemli olmadığından aynı olarak kabul edilir. Bu nedenle 5 nesnenin 2’li permütasyonu 20 iken, kombinasyonu 10 olur.\n\n\nÖrnek 4.15 Hilesiz bir madeni para 10 kere atılıyor. 4 Tura gelme olasılığı kaçtır?\nÇözüm:\nBir madeni para atıldığında her birinin olasılığı \\(p=0.5\\) olan iki sonuçtan biri gerçekleşir, yazı (Y) ya da tura (T). Bu şekilde \\(p\\) ve \\(1-p\\) olasılıklarla iki sonucu olan denemelere Bernoulli denemeleri denir. Bu örneğimizde Bernoulli denemesini bağımsız şekilde \\(n=10\\) kere tekrarlıyoruz ve \\(k=4\\) sonucun Tura olma olasılığını hesaplamak istiyoruz.\nÖncelikle 4 Tura gelmesinin kaç farklı biçimde oluşabileceğini düşünelim. Örneğin bunlardan biri aşağıdaki gibi olabilir:\n\\[\n\\frac{~Y}{1},~~\\frac{~T}{2},~~\\frac{~T}{3},~~\\frac{~Y}{4},~~\\frac{~Y}{5},~~\\frac{~T}{6},~~\\frac{~Y}{7},~~\\frac{~T}{8},~~\\frac{~Y}{9},~~\\frac{~Y}{10}\n\\] Bu dizilimin gerçekleşme olasılığı kaçtır? Sonuçlar birbirinden bağımsız olduğu için \\[\n\\frac{1}{2}\\times\\frac{1}{2}\\times \\ldots\\times \\frac{1}{2} = \\left( \\frac{1}{2}\\right)^{10}=0.0009765625\n\\] buluruz. Sıra önemsiz olduğu için 4 Tura ve 6 Yazı ile sonuçlanan başka bir dizilimin olasılığı da aynı olur. Bizim istediğimiz olasılık tam olarak 4 Tura gelme olasılığıdır. Bunun için 4 Tura ve 6 Yazı gelmesinin olanaklı kaç dizilimi olduğunu bulmamız gerekir. Karşılıklı bağdaşmaz bu dizilimlerin sayısı 10 denemenin 4’lü kombinasyonu ile hesaplanabilir: \\[\n\\begin{pmatrix}10\\\\ 4 \\end{pmatrix}  = \\frac{10!}{4!(10-4)!}=210\n\\]\n\nchoose(10, 4)\n\n[1] 210\n\n\nÖyleyse her birinin gerçekleşme şansı \\(0.0009765625\\) olan 210 farklı Yazı-Tura dizilimi gözlemlenebilir. Tura sayısının tam olarak 4 olma olasılığı tüm bu olasılıkların toplamıdır. Ya da dizilim sayısı ile tekil bir dizilimin olasılığını çarparsak \\[\n\\frac{10!}{4!(10-4)!}\\times \\left( \\frac{1}{2}\\right)^{10}=0.2051\n\\] buluruz.\n\n\nÖrnek 4.16 Önceki örnekte para hilesiz kabul edildiği için T ve Y gelme olasılıkları 0.5 olarak alınmıştı. Şimdi paranın yanlı olduğunu ve Tura gelme olasılığının \\(p=0.6\\), Yazı gelme olasılığının ise \\(1-p=0.4\\) olduğunu düşünelim. Bu durumda 10 denemede 4 Tura gelme olasılığı kaçtır?\nÇözüm:\nParayı bir kez atarsak T gelme şansı 0.6 olur. İkinci paranın da T gelme olasılığı ise çarpım kuralıyla \\(0.6\\times 0.6=0.36\\). Birinci paranın T ikinci paranın Y olma olasılığı ise \\(0.6\\times 0.4=0.24\\) olur. Benzer şekilde önceki örnekte verdiğimiz \\(Y,T,T,Y,Y,T,Y,T,Y,Y\\) dizilimin gerçekleşme olasılığı: \\[\n0.4\\times 0.6\\times 0.6\\times 0.4\\times 0.4 \\times 0.6\\times 0.4\\times 0.6\\times 0.4\\times 0.4 = 0.6^4\\times 0.4^6=0.0005308416\n\\] olur. 4 T ve 6 Y içeren olanaklı tüm dizilimlerin olasılığı aynıdır. Öyleyse toplam olasılık \\[\n\\frac{10!}{4!(10-4)!}\\times 0.6^4\\times 0.4^6=0.111\n\\] yaklaşık 0.111 olur. Aslında 10 denemede gelen Tura sayısını tüm olanaklı \\(0,1,\\ldots,10\\) değerler için hesaplayıp grafiğini çizebiliriz:\n\nx &lt;- 0:10\np &lt;- numeric(11)\nfor (i in 0:10){\n  p[i+1] &lt;-  choose(10, i)*(0.6)^i*(0.4)^(10-i)\n}\nnames(p) &lt;- x\np\n\n        0         1         2         3         4         5         6         7 \n0.0001049 0.0015729 0.0106168 0.0424673 0.1114767 0.2006581 0.2508227 0.2149908 \n        8         9        10 \n0.1209324 0.0403108 0.0060466 \n\n\nOlasılıklar toplamının\n\nsum(p)\n\n[1] 1\n\n\nolduğuna dikkat ediniz. Şekil 4.11 bu olasılıkların dağılımını göstermektedir.\n\nbarplot(p, \n        xlab = \"10 para atışında Tura gelme sayısı\", \n        ylab = \"Olasılık\")\n\n\n\n\nŞekil 4.11: p=0.6 için 10 denemede x Tura gelme sayısının olasılıkları\n\n\n\n\n\nÖnceki örnekte \\(n\\) bağımsız Bernoulli denemesinde \\(x\\) Tura olasılığı Binom dağılımı \\[\n\\frac{n!}{x!(n-x)!} p^x (1-p)^{n-x}\n\\] ile betimlenebilir. Bu dağılımın özelliklerini daha sonra inceleyeceğiz.\n\n\n\n\n\n\n\n\n\nYerine koyarak\nYerine koymadan\n\n\n\n\nSıralı\n\\(P(n, k) = n^k\\)\n\\(P(n, k) = \\frac{n!}{(n-k)!}\\)\n\n\n\nYerine koyarak permütasyon\nYerine koymadan permütasyon\n\n\nSırasız\n\\(C(n+k-1, k) = \\binom{n+k-1}{k}\\)\n\\(C(n, k) = \\binom{n}{k}\\)\n\n\n\nYerine koyarak kombinasyon\nYerine koymadan kombinasyon\n\n\n\nHer seferinde örneklem uzayının tüm elemanlarını yazmadan, sadece sayarak olasılıkları hesaplayabiliriz.\n\nÖrnek 4.17 (Doğumgünü problemi) Bir odada \\(n\\) kişi vardır. Bu kişilerin doğumgünlerinin gün/ay/yıl olarak açıklandığını düşünelim. Bu durumda en az bir eşleşme olasılığı kaçtır? Bir yılda 365 gün olduğunu varsayınız (artık yılları göz ardı ediyoruz). Ayrıca, yine basitlik amacıyla, doğumların tüm yıla eşit dağıldığını varsayalım.\nÇözüm\nOlayları tanımlayalım. \\(A\\) olayı: en az bir kişinin aynı doğumgününe sahip olması, \\(A^c\\): hiçbir çiftin aynı doğumgününe sahip olmaması. Bu iki olay birbirinin tümleyeni olduğuna göre istenen olasılık \\[\n\\mathbb{P}(A) = 1 - \\mathbb{P}(A^c)\n\\] ile bulunabilir.\nÖrneklem uzayı: odadaki her birey için 365 olanaklı doğumgünü vardır. Öyleyse tüm bireyler için örneklem uzayındaki nesne sayısı \\(365^n\\) olur. Buradan \\[\n\\mathbb{P}(A) = 1 -\\mathbb{P}(A^c) = 1 - \\frac{\\#(A^c)}{\\#(S)}\n\\] yazılabilir. Burada \\(\\#(A^c)\\), \\(A^c\\) olayının gerçekleşme sayısıdır.\nHiç eşleşmenin olmadığı durumda, birinci birey için 365 olanaklı gün, ikinci birey için 364 olanaklı gün, üçüncü birey için 363 olanaklı gün, vb. olur. Birey \\(n\\) için ise \\(365-n+1\\) olanaklı doğumgünü tanımlanabilir. Öyleyse, toplam gerçekleşme sayısı \\[\n\\#(A^c) = 365\\times 364\\times363 \\times \\ldots \\times (365-n+1)\n\\] olur. Buradan \\[\n\\mathbb{P}(A) = 1 -\\frac{\\#(A^c)}{\\#(S)} = 1- \\frac{365\\times 364\\times363 \\times \\ldots \\times (365-n+1) }{ 365^n}\n\\] Bu olasılık odadaki birey sayısına göre değişecektir.\n\ndogumgunu_olasiligi &lt;- function(n) {\n  # P(A^c): hiç eşleşmenin olmaması  \n  P_Ac &lt;- 1\n  for (i in 1:n) {\n    P_Ac &lt;- P_Ac * (365 - (i - 1)) / 365\n  }\n  \n  # P(A): en az iki kişinin aynı doğumgününe sahip olması \n  P_A &lt;- 1 - P_Ac\n  \n  return(P_A)\n}\n\n\n# 10 kişi içinde aynı doğumgünü olasılığı kaçtır? \ndogumgunu_olasiligi(10)\n\n[1] 0.1169\n\n\n\n\n\n\n\nŞekil 4.12: Doğumgünü problemi: kişi sayısına göre en az bir doğumgünü eşleşme olasılığı\n\n\n\n\nŞekil 4.12 kişi sayısına göre olasılıkların nasıl değiştiğini göstermektedir. 23 kişilik bir grupta en az iki kişinin aynı doğumgününe sahip olma olasılığı \\(\\%50\\)’dir. 50 kişilik bir grupta ise yaklaşık \\(\\%97\\)’dir."
  },
  {
    "objectID": "Olasilik.html#bayes-kuralı",
    "href": "Olasilik.html#bayes-kuralı",
    "title": "4  Olasılık",
    "section": "4.7 Bayes Kuralı",
    "text": "4.7 Bayes Kuralı\n\nTeorem 4.1 (Toplam olasılık kuralı) \\(A\\) ve \\(B\\) örneklem uzayı \\(S\\) içinde tanımlı iki olay olsun. \\(B^c\\) \\(B\\) olayının tümleyeni olmak üzere \\[\n\\mathbb{P}(A) = \\mathbb{P}(A\\cap B) + \\mathbb{P}(A\\cap B^c) = \\mathbb{P}(A|B)\\mathbb{P}(B) + \\mathbb{P}(A|B^c)\\mathbb{P}(B^c)\n\\tag{4.16}\\] olarak yazılabilir.\nİspat:\nHerhangi bir olay ile bu olayın tümleyeninin birleşimi örneklem uzayını verir, yani \\[\nS = B\\cup B^c\n\\tag{4.17}\\] olur. Yine herhangi bir olayın örneklem uzayı ile kesişimi o olayı verir: \\[\nA = A\\cap S\n\\tag{4.18}\\] Bu ikisini birleştirirsek \\[\nA = A\\cap (B\\cup B^c) = (A\\cap B)\\cup (A\\cap B^c)\n\\tag{4.19}\\] yazabiliriz. \\((A\\cap B)\\) ve \\((A\\cap B^c)\\) karşılıklı bağdaşmaz olaylar olduğu için \\[\n\\mathbb{P}(A) = \\mathbb{P}( (A\\cap B)\\cup (A\\cap B^c) ) =  \\mathbb{P}(A\\cap B) + \\mathbb{P}(A\\cap B^c)\n\\tag{4.20}\\] bulunur. Koşullu olasılık tanımından hareketle teoremin son eşitliğine kolayca ulaşılır.\n\nBu kural genelleştirilebilir.\n\nTeorem 4.2 (Genelleştirilmiş toplam olasılık kuralı) \\(A_1,A_2,\\ldots,A_k\\) olayları karşılıklı bağdaşmaz ve birleşimleri örneklem uzayı \\(S\\) olsun, yani \\[\nA_i\\cap A_j=\\emptyset,~~~i\\ne j\n\\tag{4.21}\\] ve \\[\n\\bigcup_{i=1}^k A_i = S\n\\tag{4.22}\\] Bu iki özelliği sağlayan \\(A_1,A_2,\\ldots,A_k\\) olaylarına \\(S\\)’nin bir partisyonu denir. Bu durumda toplam olasılık kuralı \\[\n\\mathbb{P}(B) = \\sum_{i=1}^k \\mathbb{P}(B\\cap A_i) = \\sum_{i=1}^k \\mathbb{P}(B| A_i)\\mathbb{P}(A_i)\n\\tag{4.23}\\] olur.\n\n\nTeorem 4.3 (Bayes kuralı) \\(A\\) ve \\(B\\) örneklem uzayı \\(S\\)’de tanımlı iki olay olsun. \\(B\\) verilmişken \\(A\\)’nın koşullu olasılığı\n\\[\n\\mathbb{P}(A|B) = \\frac{\\mathbb{P}(B|A)\\mathbb{P}(A)}{\\mathbb{P}(B)} = \\frac{\\mathbb{P}(B|A)\\mathbb{P}(A)}{\\mathbb{P}(B|A)\\mathbb{P}(A)+\\mathbb{P}(B|A^c)\\mathbb{P}(A^c)}\n\\tag{4.24}\\] olarak yazılabilir. Burada\n\n\\(\\mathbb{P}(A)\\) önsel olasılık (prior)\n\\(\\mathbb{P}(A|B)\\) ardıl olasılık (posterior)\n\nolarak isimlendirilir. önsel olasılık \\(B\\) olayına ilişkin bilginin olmadığı durumda kişisel inanç düzeyini yansıtır. Bayes Teoremi \\(B\\) olayı gözlemlendikten sonra önsel olasılık \\(\\mathbb{P}(A)\\)’nın nasıl güncelleştirildiğini ve ardıl olasılığa ulaşıldığını gösterir.\nİspat:\nKoşullu olasılık tanımından hareketle \\[\n\\mathbb{P}(A\\cap B) = \\mathbb{P}(A|B)\\mathbb{P}(B) = \\mathbb{P}(B|A)\\mathbb{P}(A)\n\\] yazılabileceğini biliyoruz. Paydaya bunu yazıp, paya toplam olasılık kuralını uygularsak sonuca ulaşırız.\n\nBayesçi istatistik bu kural üzerinde inşa edilmiştir. Bayes kuralı \\(\\mathbb{P}(A)\\) ile temsil edilen önsel (prior) olasılıkların, \\(B\\) olayı gerçekleştiğinde nasıl güncelleneceğine ilişkin bir yol sunar. Böylece \\(B\\) bilgisinden hareketle ardıl (posterior) olasılık \\(\\mathbb{P}(A|B)\\):\n\\[\n\\mathbb{P}(A|B) = q \\mathbb{P}(A),~~~q=\\frac{\\mathbb{P}(B|A)}{\\mathbb{P}(B)}\n\\] ile bulunur.\n\nTeorem 4.4 (Toplam olasılıklar ile Bayes kuralı) \\(A_1,A_2,\\ldots,A_k\\) olayları \\(S\\)’ni bir partisyonu ise Bayes kuralı \\[\n\\mathbb{P}(A_j|B) =  \\frac{\\mathbb{P}(B|A_j)\\mathbb{P}(A_j)}{\\sum_{i=1}^k \\mathbb{P}(B| A_i)\\mathbb{P}(A_i)}\n\\tag{4.25}\\] Paydada yer alan \\(\\mathbb{P}(B)\\)’nin toplam olasılık formunda yazıldığına dikkat ediniz.\n\n\nÖrnek 4.18 Bir hisse senedi piyasası uzmanı piyasanın yönüne ilişkin tahminlerde bulunmaktadır. Geçmiş verilerden hareketle uzmanın doğru tahmin yapma, yani hisse gerçekten yükseldiğinde yükselecek tahmini yapmış olması ve hisse düştüğünde uzmanın düşecek tahmini yapmış olma olasılığı \\(P(D)=0.8\\) olarak bulunmuştur. Hisse senedinin gerçekten yükselme olasılığı \\(P(\\mbox{Gerçek} +) = 0.6\\) düşme olasılığı \\(P(\\mbox{Gerçek} -)=0.4\\) olsun. Bu borsa uzmanı bir hissenin yükseleceğini söylediğinde gerçekten yükselme (doğru olma) olasılığı kaçtır?\nÇözüm\nVerilerden analistin doğru tahmin olasılığı \\[\nP(D)=P(\\mbox{Tahmin}~+|\\mbox{Gerçek} +)=P(\\mbox{Tahmin}~-|\\mbox{Gerçek} -)=0.8\n\\] ve yanlış tahmin yapma olasılığı \\[\nP(Y)=P(\\mbox{Tahmin}~+|\\mbox{Gerçek} -)=P(\\mbox{Tahmin}~-|\\mbox{Gerçek} +)=0.2\n\\] olarak yazılabilir.\nBayes teoreminden hareketle \\[\n\\mathbb{P}(\\mbox{Gerçek} +|\\mbox{Tahmin}~+) = \\frac{\\mathbb{P}(\\mbox{Tahmin}~+|\\mbox{Gerçek} +)\\mathbb{P}(\\mbox{Gerçek} +)}{\\mathbb{P}(\\mbox{Tahmin}~+)}\n\\] Paydada yer alan uzmanın yükseleceğini tahmin etme olasılığını bulmak için toplam kuralını uygulayabiliriz:\n\\[\\begin{align*}\n\\mathbb{P}(\\text{Tahmin}~+) &= \\mathbb{P}(\\text{Tahmin}~+|\\text{Gerçek} +)\\mathbb{P}(\\text{Gerçek} +) + \\mathbb{P}(\\text{Tahmin}~+|\\text{Gerçek} -)\\mathbb{P}(\\text{Gerçek} -) \\\\\n&= 0.8 \\times 0.6 + 0.2 \\times 0.4 \\\\\n&= 0.48 + 0.08 \\\\\n&= 0.56\n\\end{align*}\\]\nBuradan\n\\[\\begin{align*}\n\\mathbb{P}(\\text{Gerçek} +|\\text{Tahmin}~+) &= \\frac{\\mathbb{P}(\\text{Tahmin}~+|\\text{Gerçek} +)\\mathbb{P}(\\text{Gerçek} +)}{\\mathbb{P}(\\text{Tahmin}~+)} \\\\\n&= \\frac{0.8 \\times 0.6}{0.56} \\\\\n&= 0.857\n\\end{align*}\\]\nbulunur."
  },
  {
    "objectID": "Olasilik.html#birleşik-olasılıklar-ve-çapraz-tablolar",
    "href": "Olasilik.html#birleşik-olasılıklar-ve-çapraz-tablolar",
    "title": "4  Olasılık",
    "section": "4.8 Birleşik Olasılıklar ve Çapraz Tablolar",
    "text": "4.8 Birleşik Olasılıklar ve Çapraz Tablolar\n280 kişiden oluşan bir tüketici kümesine elektronik ticaret için geliştirilmiş yeni bir uygulamayı beğenip beğenmedikleri sorulmuştur. Bu tüketici kümesinin tüm tüketicilerden oluşan kümeyi iyi temsil ettiğini varsayalım. Anketi cevaplayan tüketicilerin cinsiyetleri (Kadın veya Erkek) ve ürünü beğenip beğenmedikleri (Evet veya Hayır) bir tablo halinde özetlenebilir. Tablo 4.1 bu verilerin özetini vermektedir. Bu tabloda yer alan sayılar ilgili satır ve sütunlara karşılık gelen özellikleri ya da cevapları sağlayan gözlem sayılarıdır. Örneğin ürünü beğenen kadınların sayısı 75 (Evet ve Kadın), beğenmeyen kadınların sayısı 63 (Hayır ve Kadın) olarak bulunmuştur. Bu kümedeki kadınların sayısı 138, erkeklerin sayısı 142, ürünü beğenenlerin sayısı 158 ve beğenmeyenlerin sayısı 122’dir.\n\n\nTablo 4.1: \\(2\\times 2\\) Çapraz Tablo\n\n\n\nKadın\nErkek\nToplam\n\n\n\n\nEvet\n75\n83\n158\n\n\nHayır\n63\n59\n122\n\n\nToplam\n138\n142\n280\n\n\n\n\nBu tabloyu sıklıklar yerine oranlarla da ifade edebiliriz (bkz. Tablo 4.2). Bu tablodaki hücreler ilgili satır ve sütunun gerçekleşmesine ilişkin arakesit/kesişim olasılıklarıdır. Örneğin rassal olarak bir tüketici seçersek bu tüketicinin erkek olması ve uygulamayı beğenme olasılığı \\(\\mathbb{P}(Evet\\cap~Erkek)=0.30\\)’dur. Benzer şekilde diğer olasılıklar da tanımlanabilir.\n\n\nTablo 4.2: \\(2\\times 2\\) Çapraz Tablo\n\n\n\nKadın\nErkek\nToplam\n\n\n\n\nEvet\n0.27\n0.30\n0.57\n\n\nHayır\n0.22\n0.21\n0.43\n\n\nToplam\n0.49\n0.51\n1\n\n\n\n\nBu tabloda satır ve sütunlarda temsil edilen kategorik özellikleri örneklem uzayındaki olay olarak tanımlayabiliriz. Bu iki olay kümesi (cinsiyet ve uygulamayı beğenme) \\(A\\) ve \\(B\\) grubu olaylar olarak tanımlanabilir. Örneğimizde \\(A\\) olayları ürünü beğenip beğenmeme durumunu, \\(B\\) olayları ise cinsiyeti temsil etmektedir. Her iki olay grubunun karşılıklı bağdaşmaz ve bütünü kapsayıcı olduğuna dikkat ediniz. Tablo 4.3 her biri iki gruptan oluşan bu çapraz tabloyu göstermektedir.\n\n\nTablo 4.3: \\(2\\times 2\\) Çapraz Tablo (birleşik olasılıklar)\n\n\n\n\n\n\n\n\n\n\\(B_1\\)\n\\(B_2\\)\nToplam\n\n\n\n\n\\(A_1\\)\n\\(\\mathbb{P}(A_1\\cap B_1)\\)\n\\(\\mathbb{P}(A_1\\cap B_2)\\)\n\\(\\mathbb{P}(A_1)\\)\n\n\n\\(A_2\\)\n\\(\\mathbb{P}(A_2\\cap B_1)\\)\n\\(\\mathbb{P}(A_2\\cap B_2)\\)\n\\(\\mathbb{P}(A_2)\\)\n\n\nToplam\n\\(\\mathbb{P}(B_1)\\)\n\\(\\mathbb{P}(B_2)\\)\n1\n\n\n\n\nBirleşik olasılıkları (arakesit ya da kesişim olasılıkları) gösteren bu çapraz tablodan hareketle koşullu olasılıkları ve marjinal olasılıkları kolayca hesaplayabiliriz.\n\n\nTablo 4.4: İki grup olay için birleşik olasılık tablosu, \\(r\\times c\\) \n\n\n\n\n\n\n\n\n\n\n\n\\(B_1\\)\n\\(B_2\\)\n\\(\\ldots\\)\n\\(B_c\\)\n\n\n\n\n\n\\(A_1\\)\n\\(\\mathbb{P}(A_1\\cap B_1)\\)\n\\(\\mathbb{P}(A_1\\cap B_2)\\)\n\\(\\ldots\\)\n\\(\\mathbb{P}(A_1\\cap B_c)\\)\n\\(\\mathbb{P}(A_1)\\)\n\n\n\\(A_2\\)\n\\(\\mathbb{P}(A_2\\cap B_1)\\)\n\\(\\mathbb{P}(A_2\\cap B_2)\\)\n\\(\\ldots\\)\n\\(\\mathbb{P}(A_2\\cap B_c)\\)\n\\(\\mathbb{P}(A_2)\\)\n\n\n\\(\\vdots\\)\n\\(\\vdots\\)\n\\(\\vdots\\)\n\\(\\ddots\\)\n\\(\\vdots\\)\n\\(\\vdots\\)\n\n\n\\(A_r\\)\n\\(\\mathbb{P}(A_r\\cap B_1)\\)\n\\(\\mathbb{P}(A_r\\cap B_2)\\)\n\\(\\ldots\\)\n\\(\\mathbb{P}(A_r\\cap B_c)\\)\n\\(\\mathbb{P}(A_r)\\)\n\n\n\n\\(\\mathbb{P}(B_1)\\)\n\\(\\mathbb{P}(B_2)\\)\n\\(\\ldots\\)\n\\(\\mathbb{P}(B_c)\\)\n1\n\n\n\n\nBuradaki analiz \\(r\\) ve \\(c\\) kategoriyi içeren iki grup olay için genelleştirilebilir. Tablo 4.4 karşılıklı bağdaşmaz ve bütünü kapsayıcı \\(A_1,A_2,\\ldots,A_r\\) ve \\(B_1,B_2,\\ldots,B_c\\) olay kümelerinin birleşik olasılıklarını göstermektedir. \\(A\\) grubu olaylar \\(r\\) kategoriden oluşurken, \\(B\\) grubu olaylar \\(c\\) kategori içermektedir.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÖrnek 4.19 Bir anket çalışmasında 450 öğrenci üzerinde sosyal medya kullanımı ve akademik başarı (GPA) durumu incelenmiştir. Günlük sosyal medya kullanım süresi ile akademik başarı arasında aşağıdaki tablo oluşturulmuştur.\n\n\n\n\n\n\n\n\n\n\nSosyal Medya Kullanımı (Günlük)\nYüksek (GPA ≥ 3.0)\nOrta (2.0 ≤ GPA &lt; 3.0)\nDüşük (GPA &lt; 2.0)\nToplam\n\n\n\n\nDüşük (0-1 saat)\n80\n30\n10\n120\n\n\nOrta (1-3 saat)\n70\n60\n20\n150\n\n\nYüksek (3 saatten fazla)\n40\n50\n90\n180\n\n\nToplam\n190\n140\n120\n450\n\n\n\nBu tabloyu kullanarak cevaplayınız:\n\nRassal seçilmiş bir öğrencinin sosyal medya kullanımının yüksek olma olasılığı kaçtır?\n\nTablodan yüksek sosyal medya kullanıcısı olan toplamda 180 öğrenci olduğunu görüyoruz. Öyleyse bir öğrencinin sosyal medya kullanımının yüksek olma olasılığı: \\[\nP(\\text{Yüksek sosyal medya kullanımı}) = \\frac{180}{450} = 0.4\n\\] Bu da %40’lık bir olasılığa karşılık gelir. Alternatif olarak bu olasılığı kesişim olasılıkların toplamı olarak da bulabiliriz:\nYüksek sosyal medya kullanımı ve GPA ≥ 3.0 olasılığı: \\[\nP(\\text{Yüksek sosyal medya ve GPA ≥ 3.0}) = \\frac{40}{450} = 0.0889\n\\]\nYüksek sosyal medya kullanımı ve 2.0 ≤ GPA &lt; 3.0 olasılığı: \\[\nP(\\text{Yüksek sosyal medya ve 2.0 ≤ GPA &lt; 3.0}) = \\frac{50}{450} = 0.1111\n\\]\nYüksek sosyal medya kullanımı ve GPA &lt; 2.0 olasılığı: \\[\nP(\\text{Yüksek sosyal medya ve GPA &lt; 2.0}) = \\frac{90}{450} = 0.2\n\\] Toplam yüksek sosyal medya kullanımı olasılığı:\n\n\n\\[\\begin{align*}\nP(\\text{Yüksek sosyal medya kullanımı}) &= P(\\text{Yüksek sosyal medya ve GPA ≥ 3.0}) \\\\\n&\\quad + P(\\text{Yüksek sosyal medya ve 2.0 ≤ GPA &lt; 3.0}) \\\\\n&\\quad + P(\\text{Yüksek sosyal medya ve GPA &lt; 2.0}) \\\\\n&= 0.0889 + 0.1111 + 0.2 \\\\\n&= 0.4\n\\end{align*}\\]\n\nRassal seçilmiş bir öğrencinin not ortalamasının (GPA) düşük olma olasılığı kaçtır?\n\nBir öğrencinin düşük GPA’ye sahip olma olasılığı \\[\nP(\\text{Düşük GPA}) = \\frac{120}{450} \\approx 0.2667\n\\] yaklaşık %27’dir.\n\nBir öğrencinin yüksek sosyal medya kullanımı ve düşük GPA’ye sahip olma olasılığı nedir?\n\nTablodan yüksek sosyal medya kullanımı ve düşük GPA’ye sahip öğrenci sayısının 90 olduğunu görüyoruz. Öyleyse bir öğrencinin yüksek sosyal medya kullanımı ve düşük GPA’ye sahip olma olasılığı: \\[\n\\mathbb{P}(\\text{Yüksek sosyal medya ve düşük GPA}) = \\frac{90}{450} = 0.2\n\\] %20’lik bir olasılığa karşılık gelir.\n\nBir öğrencinin düşük sosyal medya kullanımı ve yüksek GPA’ye sahip olma olasılığı nedir? \\[\n\\mathbb{P}(\\text{Düşük sosyal medya ve yüksek GPA}) = \\frac{80}{450} \\approx 0.18\n\\] Yaklaşık %18 olur.\nSosyal medya kullanımının yüksek olduğu bir öğrencinin düşük GPA’ye sahip olma olasılığı nedir?\n\nBu soruda öğrencinin yüksek sosyal medya kullanıcısı olduğu bilinmektedir. İstenen koşullu olasılık \\[\nP(\\text{Düşük GPA | Yüksek sosyal medya}) = \\frac{P(\\text{Yüksek sosyal medya ve Düşük GPA})}{P(\\text{Yüksek sosyal medya})}\n\\] olarak yazılabilir. Tablodan\n\n\\(P(\\text{Yüksek sosyal medya ve Düşük GPA}) = \\frac{90}{450} = 0.2\\)\n\\(P(\\text{Yüksek sosyal medya}) = \\frac{180}{450} = 0.4\\) Buradan \\[\nP(\\text{Düşük GPA | Yüksek sosyal medya}) = \\frac{0.2}{0.4} = 0.5\n\\] bulunur.\n\n\n\n\nÖrnek 4.20  \n\nload(\"Data/hane_anakutle.RData\")\ntablo1 &lt;- table(hane_anakutle$tasarruf, hane_anakutle$saglik_merkezi_erisim)\nprint(tablo1)\n\n       \n           1    2    3    4    5\n  Evet   352 1308  244  444  173\n  Hayır  934 3667  910 1438  530\n\n\n\nprop.table(tablo1)\n\n       \n             1      2      3      4      5\n  Evet  0.0352 0.1308 0.0244 0.0444 0.0173\n  Hayır 0.0934 0.3667 0.0910 0.1438 0.0530\n\nmosaicplot(tablo1)\n\n\n\n\n\nxtabs(~ tasarruf + saglik_merkezi_erisim, \n      data = hane_anakutle)\n\n        saglik_merkezi_erisim\ntasarruf    1    2    3    4    5\n   Evet   352 1308  244  444  173\n   Hayır  934 3667  910 1438  530"
  },
  {
    "objectID": "Olasilik.html#çözümlü-alıştırmalar",
    "href": "Olasilik.html#çözümlü-alıştırmalar",
    "title": "4  Olasılık",
    "section": "4.9 Çözümlü Alıştırmalar",
    "text": "4.9 Çözümlü Alıştırmalar\n\nAlıştırma 4.1 Bir sınıfta 30 öğrenci vardır. Öğrencilerden 12’si matematik, 18’i ise fizik dersine kayıtlıdır. 6 öğrenci her iki derse de kayıtlıdır. Rasgele seçilen bir öğrencinin sadece matematik veya sadece fizik dersine kayıtlı olma olasılığı nedir?\n\n\nAlıştırma 4.2 (Monty Hall problemi) Bir yarışma programındasınız (Let’s Make a Deal). Karşınızda üç kapı var: Kapı 1, Kapı 2 ve Kapı 3. Bu kapılardan birinin arkasında bir araba ödülü var, diğer iki kapının arkasında ise keçi bulunuyor (yani ödül yok, keçiyi istemediğinizi varsayıyoruz). Sunucu (Monty Hall) size kapılardan birini seçmenizi istiyor. Seçiminizi yaptıktan sonra, Monty Hall sizin seçmediğiniz kapılardan birini açıyor ve arkasında bir keçi olduğunu gösteriyor. Sonra size şu soruyu soruyor: Seçiminizi değiştirmek ister misiniz yoksa aynı kapıda mı kalmak istersiniz?\nSeçiminizi değiştirirseniz arabayı kazanma olasılığınız nedir? Aynı kapıda kalırsanız arabayı kazanma olasılığınız nedir?\nÇözüm:\nSadece 1 kapının ardında araba ödülü olduğuna göre kazanma olasılığı \\(\\frac{1}{3}\\), keçi olma olasılığı ise \\(\\frac{2}{3}\\)’tür: \\[\n\\P(\\text{Araba}) = \\frac{1}{3}, \\quad \\P(\\text{Keçi}) = \\frac{2}{3}\n\\] Yarışmacının 1. kapıyı seçtiğini düşünelim. \\(A_1\\), \\(A_2\\), ve \\(A_3\\), sırasıyla, arabanın 1., 2., ve 3. kapıda olduğunu göstersin. Sunucu, her zaman sizin seçmediğiniz kapılardan birini açacaktır (keçi olacak şekilde). Bu bilgi ışığında seçtiğiniz kapıyı değiştirirseniz kazanma olasılığınız kaç olur?\nÖdül (araba) kazanma olasılığı genel olarak aşağıdaki gibi yazılabilir: \\[\n\\P(\\mbox{Ödül kazan}) = \\P(\\mbox{Ödül kazan}~|~A_1)\\P(Araba)+\\P(\\mbox{Ödül kazan}~|~A_2)\\P(Araba)+\\P(\\mbox{Ödül kazan}~|~A_3)\\P(Araba)\n\\] \\[\n\\P(\\mbox{Ödül kazan}) = \\P(\\mbox{Ödül kazan}~|~A_1)\\cdot \\frac{1}{3} +\\P(\\mbox{Ödül kazan}~|~A_2)\\cdot \\frac{1}{3}+\\P(\\mbox{Ödül kazan}~|~A_3)\\cdot \\frac{1}{3}\n\\]\nYarışmacının “değiştir” stratejisini takip ettiğini düşünelim. Yarışmacı Kapı 1’i seçmişti. Eğer gerçekten ödül Kapı 1’de ise araba ödülü kesin olarak kaybedilir, yani \\[\n\\P(\\mbox{Ödül kazan}~|~A_1) = 0\n\\] olur. Eğer araba Kapı 2 ya da Kapı 3’te ise “değiştir” stratejisi kazanmayla sonuçlanır: \\[\n\\P(\\mbox{Ödül kazan}) = 0\\cdot \\frac{1}{3} +1\\cdot \\frac{1}{3}+1\\cdot \\frac{1}{3}=\\frac{2}{3}\n\\]\nSonuç olarak seçimi değiştirdiğimizde kazanma olasılığımız daha yüksektir. Eğer seçiminizi değiştirirseniz, ilk başta keçiyi seçmişseniz (olasılık 2/3), araba olan kapıya geçeceksiniz ve kazanacaksınız. Eğer arabanın olduğu kapıyı seçmişseniz (olasılık 1/3), seçim değiştirerek kaybedeceksiniz. Bu durumda, seçiminizi değiştirirseniz arabayı kazanma olasılığınız 2/3 olur. Seçiminizi değiştirmezseniz, arabayı kazanma olasılığınız sadece 1/3 olacaktır.\nBu oyunun R’da simülasyonunu yapabiliriz. Önce tesadüfi şekilde araba ve keçileri kapılara atayalım:\n\nset.seed(1234)\nkapilar &lt;- c(\"keçi\", \"keçi\", \"araba\")\nkapilar &lt;- sample(kapilar) # rassal olarak ödülü atama\nkapilar\n\n[1] \"keçi\"  \"araba\" \"keçi\" \n\n\nOyuncunun tercihini rassal olarak belirleyelim:\n\n# oyuncunun seçimi\ntercih &lt;- sample(1:3, 1)\ntercih\n\n[1] 3\n\n\nSunucu Monty Hall kalan kapılardan keçili olanı açacaktır:\n\n# Monty keçili bir kapıyı açıyor (yarışmacının seçtiği kapıyı açamaz)\nmonty_nin_secenekleri &lt;- setdiff(1:3, tercih)\nmonty_nin_secenekleri\n\n[1] 1 2\n\n# bu iki kapıdan birini rassal olarak seçer. \n# Eğer iki kapıdan birinde araba diğerinde keçi varsa her zaman keçiyi seçer. \n# Eğer ikisinde de keçi varsa rassal olarak birini seçer (1/2 olasılıkla)\nif (sum(kapilar[monty_nin_secenekleri]==\"keçi\")==1) {\n  monty_nin_actigi_kapi &lt;- \n    monty_nin_secenekleri[kapilar[monty_nin_secenekleri]==\"keçi\"]\n} else {\n  monty_nin_actigi_kapi &lt;- sample(monty_nin_secenekleri, 1)\n}\n# ekrana yaz\nmonty_nin_actigi_kapi\n\n[1] 1\n\n\nŞimdi yarışmacı “Değiştir” stratejisini uygulayıp uygulamamaya karar verecek. Önündeki seçeneği belirleyelim:\n\n# Yarışmacı ya kapıda kalacak ya da diğer kapıya geçecek\n# Seçim değiştirmek için açılmayan kapıyı belirle\ndegistir_tercih &lt;- setdiff(1:3, c(tercih, monty_nin_actigi_kapi))\ndegistir_tercih\n\n[1] 2\n\n\nYarışmacı ya ilk tercihinde kalacak (Değiştirme) ya da bu kapıya geçecek (Değiştir). Eğer değiştirirse ve bu kapıda araba varsa kazanacak, aksi takdirde kaybedecek:\n\n# Kazanma durumu:\nif (kapilar[degistir_tercih] == \"araba\") {\n  degistir_kazanır &lt;- 1       # Seçimi değiştirdiğinde kazandı\n}\nif (kapilar[tercih] == \"araba\") {\n  degistirmemek_kazanır &lt;- 1  # Seçimini değiştirmediğinde kazandı\n}\n\nŞimdi olasılığın sıklık tanımından hareketle bu oyununun çok sayıda tekrarını yapan bir fonksiyon yazalım ve “Değiştir” stratejisinin olasılığını yaklaştırmaya çalışalım.\n\n# Monty Hall probleminin simülasyonu için bir fonksiyon\nsim_monty_hall &lt;- function(nsim = 10000){\n  degistir_kazanır &lt;- 0\n  degistirmemek_kazanır &lt;- 0\n  \n  for (i in 1:nsim) {\n    kapilar &lt;- c(\"keçi\", \"keçi\", \"araba\")\n    kapilar &lt;- sample(kapilar) # rassal olarak ödülü atama\n    # oyuncunun seçimi\n    tercih &lt;- sample(1:3, 1)\n    # Monty keçili bir kapıyı açıyor \n    monty_nin_secenekleri &lt;- setdiff(1:3, tercih)  \n    if (sum(kapilar[monty_nin_secenekleri]==\"keçi\")==1) {\n      monty_nin_actigi_kapi &lt;-\n        monty_nin_secenekleri[kapilar[monty_nin_secenekleri]==\"keçi\"]\n      } else {\n        monty_nin_actigi_kapi &lt;- sample(monty_nin_secenekleri, 1)\n      } \n    degistir_tercih &lt;- setdiff(1:3, c(tercih, monty_nin_actigi_kapi)) \n    # Kazanma durumu:\n    # Değiştirirse: \n    if (kapilar[degistir_tercih] == \"araba\") {\n      degistir_kazanır &lt;- degistir_kazanır + 1\n    }\n    # Değiştirmezse: \n    if (kapilar[tercih] == \"araba\") {\n      degistirmemek_kazanır &lt;- degistirmemek_kazanır + 1\n    }\n  }\n  \n  \n  # Sonuçların oranlarını hesapla\n  degistir_kazanma_orani &lt;- degistir_kazanır / nsim\n  degistirmeme_kazanma_orani &lt;- degistirmemek_kazanır / nsim\n  \n  # Sonuçları yazdır\n  cat(\"Seçim değiştirildiğinde kazanma oranı: \", degistir_kazanma_orani * 100, \"%\\n\")\n  cat(\"Seçimde kaldığında kazanma oranı: \", degistirmeme_kazanma_orani * 100, \"%\\n\")\n  \n  # Sonuçları geri döndür (grafik için)\n  return(c(degistir_kazanma_orani, degistirmeme_kazanma_orani))\n}\n\nOyunu 10000 kez tekrarlayalım ve değiştirme stratejisinin kazanma olasılığını yaklaştıralım:\n\n# Simülasyonu 10,000 kez çalıştır\nset.seed(123)\nsonuclar &lt;- sim_monty_hall(nsim=10000)\n\nSeçim değiştirildiğinde kazanma oranı:  66.47 %\nSeçimde kaldığında kazanma oranı:  33.53 %\n\n\nDeğiştirme stratejisinin olasılığı %66.5 olarak bulundu (bkz. Şekil 4.13). Bu teorik olasılığa \\(2/3\\approx 0.6667\\) oldukça yakındır.\n\n\n\n\n\nŞekil 4.13: Monty Hall probleminin simülasyon sonuçları\n\n\n\n\nBayes teoremi veya olasılık kuralları kullanılarak da bu sonuç gösterilebilir. \\(A_1\\), \\(A_2\\), ve \\(A_3\\), sırasıyla, arabanın 1., 2., ve 3. kapıda olması şeklinde tanımlamıştık. \\(M_1\\), \\(M_2\\), ve \\(M_3\\), sırasıyla, sunucunun 1., 2., ve 3. kapıları açması olsun.\nOyuncunun 1. kapıyı seçtiğini, sunucunun 2. kapıyı açtığını düşünelim. Bayes teoreminden hareketle \\[\n\\P(A_1~|~M_2) = \\frac{\\P(M_2~|~A_1)\\P(A_1)}{\\P(M_2)}\n\\] Araba 1. kapının ardındaysa Monty’nin 2. kapıyı açma olasılığı 1/2’dir. Öyleyse \\[\n\\P(A_1~|~M_2) = \\frac{\\P(M_2~|~A_1)\\P(A_1)}{\\P(M_2)}=\\frac{(1/2)\\cdot (1/3)}{1/2} = \\frac{1}{3}\n\\] Yarışmacının ilk tercihi 1. kapıydı. Monty Hall 2. kapıyı açtıktan sonra bu tercihin (değiştirme yok) kazanma şansı üçte birdir. Öyleyse değiştirdiği durumda kazanma şansı 2/3 olur.\n\n\nAlıştırma 4.3 Bir şehirde %2 oranında yaygın bir hastalık olduğunu varsayalım. Bu hastalığın test edilmesi için kullanılan bir testin: - Hastalığı olan kişiyi doğru tespit etme olasılığı (duyarlılık) %95’tir, yani \\(\\P(T+ | H+) = 0.95\\). - Hastalığı olmayan kişiye yanlışlıkla pozitif vermesi olasılığı (yanlış pozitif oranı) %10’dur, yani \\(P(T+ | H-) = 0.10\\).\nBuna göre, test sonucu pozitif çıktığında, test edilen kişinin gerçekten hasta olma olasılığı nedir?\nÇözüm: Bayes teoremini kullanarak hesaplayacağız. Verilenler: \\[\n\\P(H+) = 0.02 \\quad \\text{(hastalığın toplumdaki prevalansı)}\n\\] \\[\n\\P(H-) = 0.98 \\quad \\text{(hastalığın olmama olasılığı)}\n\\] \\[\n\\P(T+ | H+) = 0.95 \\quad \\text{(testin hasta birine pozitif vermesi olasılığı)}\n\\] \\[\n\\P(T+ | H-) = 0.10 \\quad \\text{(testin sağlıklı birine pozitif vermesi olasılığı)}\n\\] Aradığımız olasılık \\(P(H+ | T+)\\), yani test sonucu pozitif çıktığında kişinin hasta olma olasılığıdır.\nBayes teoremi: \\[\n\\P(H+ | T+) = \\frac{\\P(T+ | H+) \\cdot \\P(H+)}{\\P(T+)}\n\\] Burada \\(\\P(T+)\\), yani testin pozitif olma olasılığı, iki durumun toplamından oluşur: \\[\n\\P(T+) = \\P(T+ | H+) \\cdot \\P(H+) + \\P(T+ | H-) \\cdot \\P(H-)\n\\] \\[\n\\P(T+) = (0.95 \\cdot 0.02) + (0.10 \\cdot 0.98)\n\\] Buradan \\[\n\\P(T+) = 0.019 + 0.098 = 0.117\n\\] buluruz. Şimdi \\(P(H+ | T+)\\)’yi hesaplayalım: \\[\n\\P(H+ | T+) = \\frac{0.95 \\cdot 0.02}{0.117} = \\frac{0.019}{0.117} \\approx 0.162\n\\] Test sonucu pozitif çıktığında, kişinin gerçekten hasta olma olasılığı yaklaşık 0.162 veya %16.2’dir."
  },
  {
    "objectID": "Olasilik.html#problemler",
    "href": "Olasilik.html#problemler",
    "title": "4  Olasılık",
    "section": "4.10 Problemler",
    "text": "4.10 Problemler\n\nProblem 4.1 Hilesiz bir para iki kez atılıyor.\n\nörneklem uzayını oluşturun.\nEn az bir Tura gelme olasılığı kaçtır?\nİkisinin de Yazı olma olasılığı kaçtır?\n\n\n\nProblem 4.2 İki hilesiz zar atılıyor.\n\nToplamın 7 olma olasılığı kaçtır?\nToplamın 11 olma olasılığı kaçtır?\nToplamın 7 ya da 11 olma olasılığı kaçtır?\nToplamın en fazla 6 olma olasılığı kaçtır?\n\n\n\nProblem 4.3 Standart altı yüzlü 3 zar atılıyor. Örneklem uzayı kaç elemandan oluşur? Bu üç zarın toplamının 10 olma olasılığı kaçtır?\n\n\nProblem 4.4 Bir zar, çift sayıların gelme olasılığı tek sayıların gelme olasılığının 2 katı olacak şekilde hileli hale getiriliyor. Bu durumda zarın\n\n5 veya 6 gelme olasılığı kaçtır?\n4’ten küçük olma olasılığı kaçtır?\nZarın çift geldiği biliniyorsa 6 olma olasılığı kaçtır?\n\n\n\nProblem 4.5 Bir kutuda 4 kırmızı, 5 mavi ve 3 yeşil top bulunmaktadır. Rasgele 2 top çekiliyor. İlk top kırmızı çıktıktan sonra, ikinci topun mavi çıkma olasılığı nedir?\n\n\nProblem 4.6 Bir bölümde 84 öğrenci vardır. Öğrencilerden 52’si Ekonometri, 32’si Makine Öğrenmesi dersine kayıtlıdır. 20 öğrenci her iki derse de kayıtlıdır. Tesadüfen seçilen bir öğrencinin Ekonometri veya Makine Öğrenmesi dersine kayıtlı olma olasılığı nedir?\n\n\nProblem 4.7 Bir uçağın zamanında kalkma olasılığı 0.85, zamanında varma olasılığı 0.82, zamanında kalkma ve varma olasılığı ise 0.8’dir. Buna göre\n\nZamanında kalkan bir uçağın, zamanında varma olasılığı nedir?\nZamanında varan bir uçağın, zamanında kalkmış olma olasılığı nedir?\n\n\n\nProblem 4.8 Bir fabrikada kullanılan makinelerin %5’inde belirli bir arıza meydana gelmektedir. Bu arızayı tespit etmek için kullanılan bir sensörün\n\nArızalı makinelerde arızayı doğru tespit etme olasılığı %90’dır.\nArızası olmayan makinelerde yanlış alarm verme olasılığı %8’dir.\n\nBir makinede sensör arıza tespit ettiğinde, bu makinenin gerçekten arızalı olma olasılığı nedir?\n\n\nProblem 4.9 Bir marketteki müşterilerin %60’ı kadın, %40’ı erkektir. Kadın müşterilerin %30’u, erkek müşterilerin %20’si organik ürünler satın almaktadır. Marketten rasgele bir müşteri seçildiğinde, organik ürün satın alma olasılığı nedir? Seçilen müşteri organik ürün satın aldıysa, bu müşterinin kadın olma olasılığı nedir?\n\n\nProblem 4.10 Elinizde bir hilesiz ve bir bir hileli madeni para var. Hileli para, yazı-tura atıldığında %80 olasılıkla tura (T) gelmektedir. Rassal olarak bu paralardan birini seçiyorsunuz ve 3 kez atıyorsunuz. Sonuçların üçü de tura geliyor. Bu bilgilere dayanarak, seçtiğiniz paranın hilesiz olma olasılığı nedir?\n\n\nProblem 4.11 Bir hapishanede, idama mahkum edilmiş 3 kişi vardır: A, B ve C. Hapishane müdürü, bu mahkumlardan yalnızca birinin affedileceğini ve diğer ikisinin idam edileceğini söylemiştir. Mahkumlardan biri olan A, müdüre gidip şu istekte bulunur:\n“Benim B ve C ile eşit şansa sahip olduğumu biliyorum, ama bu iki kişiden en az biri idam edilecek. Beni bilgilendirmek zorunda değilsiniz, ancak B ya da C’den birinin idam edileceğini bana söyleyebilir misiniz?”\nMüdür, mahkumlardan hangisinin affedileceğini bilmektedir ve mahkum A’nın isteği üzerine, gerçekten idam edilecek olanlardan birini (örneğin B’yi) açıklar ve onun idam edileceğini söyler. Şimdi, A şunu düşünmeye başlar: B’nin idam edileceğini öğrendiğime göre, benim affedilme olasılığım arttı mı? C’nin idam edilmeyeceği anlamına mı geliyor? Yoksa hala C’nin affedilme olasılığı daha mı yüksek?\nSoru: A’nın affedilme olasılığı, müdürün B’nin idam edileceğini açıklamasından sonra nasıl değişir? Müdürün bu bilgiyi vermesinden sonra A’nın affedilme olasılığı hala \\(1/3\\) mü yoksa artar mı? C’nin affedilme olasılığı nedir?\n\n\nProblem 4.12 Bir yatırım şirketi, iki farklı fonun performansını karşılaştırmak için bir araştırma yapmıştır. Aşağıdaki çapraz tablo, bu fonların yüksek ve düşük getiri kategorilerine göre sınıflandırılmış yatırımcı sayılarını göstermektedir:\n\n\n\nFon / Getiri\nYüksek Getiri\nDüşük Getiri\nToplam\n\n\n\n\nFon A\n120\n80\n200\n\n\nFon B\n90\n60\n150\n\n\nToplam\n210\n140\n350\n\n\n\n\nA fonuna yatırım yapan birinin yüksek getiri elde etme olasılığı nedir?\nB fonuna yatırım yapan birinin düşük getiri elde etme olasılığı kaçtır?\n\n\n\nProblem 4.13 Bir yatırım şirketi, üç farklı sektörün performansını karşılaştırmak için bir araştırma yapmıştır. Aşağıdaki çapraz tablo, bu sektörlerin yüksek ve düşük performans kategorilerine göre sınıflandırılmış yatırımcı sayılarını göstermektedir:\n\n\n\n\n\n\n\n\n\nSektör / Performans\nYüksek Performans (A)\nDüşük Performans (B)\nToplam\n\n\n\n\nTeknoloji\n180\n70\n250\n\n\nEnerji\n120\n80\n200\n\n\nSağlık\n100\n50\n150\n\n\nToplam\n400\n200\n600\n\n\n\n\nTeknoloji ve düşük performanslı yatırım olasılığı kaçtır?\nTeknoloji sektörüne yatırım yapan birinin yüksek performans elde etme olasılığı kaçtır?\n\n\n\nProblem 4.14 Aşağıdaki tablo, dört farklı sektörün firmalarının yaş kategorilerine göre olasılık oranlarını göstermektedir.\n\n\n\nSektör\nYaş &lt;= 3\n3 &lt; Yaş &lt;= 10\nYaş &gt; 10\n\n\n\n\nİmalat\n0.05\n0.10\n0.14\n\n\nİnşaat\n0.03\n0.08\n0.06\n\n\nTicaret\n0.10\n0.12\n0.09\n\n\nHizmet\n0.04\n0.08\n0.11\n\n\n\nBu çapraz tabloya göre\n\nRassal seçilmiş bir firmanın inşaat sektöründe olma olasılı nedir?\nRassal seçilmiş bir firmanın yaşının 3 veya daha küçük olma olasılığı kaçtır?\nBir firmanın hizmet sektöründe ve 10 yaşından büyük olma olasılığı kaçtır?\nBir firmanın ticaret sektöründe olduğu biliniyorsa bu firmanın yaşının 10’dan büyük olma olasılığı nedir?\nBir firmanın yaşının 3 ile 10 arasında olduğu biliniyorsa bu firmanın imalat sanayinde olma olasılığı nedir?\n\n\n\nProblem 4.15 Aşağıdaki tablo, hanehalklarının gelir düzeyi ve internet aboneliklerinin hızına ilişkin dağılımını göstermektedir.\n\n\n\nİnternet\nGelir Düzeyi\n\n\n\n\n\n\n\n\n\n\nDüşük\nOrta\nYüksek\nToplam\n\n\nHızlı\n\n180\n360\n240\n780\n\n\nYavaş\n\n300\n200\n100\n600\n\n\nToplam\n\n480\n560\n340\n1380\n\n\n\nBuna göre\n\nRassal seçilen bir hanenin yüksek gelirli olma olasılığı kaçtır?\nRassal seçilen bir hanenin yavaş internete sahip olma olasılığı kaçtır?\nBir hanenin orta gelir düzeyinde ve hızlı internet abonesi olma olasılığı kaçtır?\nYüksek gelir düzeyine sahip olduğu bilinen bir hanenin yavaş internetinin olma olasılığı kaçtır?"
  }
]